
Obstacle-avoidance-car.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000ff0  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000000  00800060  00800060  00001064  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          0000001a  00800060  00800060  00001064  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  00001064  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00001094  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000002d0  00000000  00000000  000010d0  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   000027b6  00000000  00000000  000013a0  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000d35  00000000  00000000  00003b56  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   000015e2  00000000  00000000  0000488b  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000890  00000000  00000000  00005e70  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000f36  00000000  00000000  00006700  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    0000231f  00000000  00000000  00007636  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000260  00000000  00000000  00009955  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 79 03 	jmp	0x6f2	; 0x6f2 <__vector_1>
   8:	0c 94 a2 03 	jmp	0x744	; 0x744 <__vector_2>
   c:	0c 94 cb 03 	jmp	0x796	; 0x796 <__vector_3>
  10:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  14:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  18:	0c 94 83 05 	jmp	0xb06	; 0xb06 <__vector_6>
  1c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  20:	0c 94 5a 05 	jmp	0xab4	; 0xab4 <__vector_8>
  24:	0c 94 31 05 	jmp	0xa62	; 0xa62 <__vector_9>
  28:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  2c:	0c 94 04 05 	jmp	0xa08	; 0xa08 <__vector_11>
  30:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  34:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  38:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  3c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  40:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  44:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  48:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  4c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  50:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d8 e0       	ldi	r29, 0x08	; 8
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_copy_data>:
  60:	10 e0       	ldi	r17, 0x00	; 0
  62:	a0 e6       	ldi	r26, 0x60	; 96
  64:	b0 e0       	ldi	r27, 0x00	; 0
  66:	e0 ef       	ldi	r30, 0xF0	; 240
  68:	ff e0       	ldi	r31, 0x0F	; 15
  6a:	02 c0       	rjmp	.+4      	; 0x70 <__do_copy_data+0x10>
  6c:	05 90       	lpm	r0, Z+
  6e:	0d 92       	st	X+, r0
  70:	a0 36       	cpi	r26, 0x60	; 96
  72:	b1 07       	cpc	r27, r17
  74:	d9 f7       	brne	.-10     	; 0x6c <__do_copy_data+0xc>

00000076 <__do_clear_bss>:
  76:	20 e0       	ldi	r18, 0x00	; 0
  78:	a0 e6       	ldi	r26, 0x60	; 96
  7a:	b0 e0       	ldi	r27, 0x00	; 0
  7c:	01 c0       	rjmp	.+2      	; 0x80 <.do_clear_bss_start>

0000007e <.do_clear_bss_loop>:
  7e:	1d 92       	st	X+, r1

00000080 <.do_clear_bss_start>:
  80:	aa 37       	cpi	r26, 0x7A	; 122
  82:	b2 07       	cpc	r27, r18
  84:	e1 f7       	brne	.-8      	; 0x7e <.do_clear_bss_loop>
  86:	0e 94 ce 01 	call	0x39c	; 0x39c <main>
  8a:	0c 94 f6 07 	jmp	0xfec	; 0xfec <_exit>

0000008e <__bad_interrupt>:
  8e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000092 <app_init>:
 *  Author: atef
 */ 
#include "app.h"
void app_init()
{   
	LCD_PinsInit();
  92:	0e 94 ad 01 	call	0x35a	; 0x35a <LCD_PinsInit>
	LCD_Init();
  96:	0e 94 1c 01 	call	0x238	; 0x238 <LCD_Init>
	GLOBALE_ENABLE();
  9a:	78 94       	sei
	pwm_init();
  9c:	0e 94 c1 04 	call	0x982	; 0x982 <pwm_init>
  a0:	08 95       	ret

000000a2 <pwm_test>:


void pwm_test()
{       
	
	PWM_set_duty(20,100);
  a2:	44 e6       	ldi	r20, 0x64	; 100
  a4:	50 e0       	ldi	r21, 0x00	; 0
  a6:	60 e0       	ldi	r22, 0x00	; 0
  a8:	70 e0       	ldi	r23, 0x00	; 0
  aa:	84 e1       	ldi	r24, 0x14	; 20
  ac:	0e 94 47 04 	call	0x88e	; 0x88e <PWM_set_duty>
	timer_start(TIMER0_SCALER_8);
  b0:	82 e0       	ldi	r24, 0x02	; 2
  b2:	0e 94 f3 04 	call	0x9e6	; 0x9e6 <timer_start>
  b6:	08 95       	ret

000000b8 <WriteIns>:
	for(u8 i=0;i<8;i++)
	{
		WriteData(pattern[i]);
	}
	WriteIns(0x80);
}
  b8:	cf 93       	push	r28
  ba:	c8 2f       	mov	r28, r24
  bc:	60 e0       	ldi	r22, 0x00	; 0
  be:	81 e0       	ldi	r24, 0x01	; 1
  c0:	0e 94 e4 02 	call	0x5c8	; 0x5c8 <DIO_writepin>
  c4:	6c 2f       	mov	r22, r28
  c6:	66 1f       	adc	r22, r22
  c8:	66 27       	eor	r22, r22
  ca:	66 1f       	adc	r22, r22
  cc:	87 e0       	ldi	r24, 0x07	; 7
  ce:	0e 94 e4 02 	call	0x5c8	; 0x5c8 <DIO_writepin>
  d2:	c6 fb       	bst	r28, 6
  d4:	66 27       	eor	r22, r22
  d6:	60 f9       	bld	r22, 0
  d8:	86 e0       	ldi	r24, 0x06	; 6
  da:	0e 94 e4 02 	call	0x5c8	; 0x5c8 <DIO_writepin>
  de:	c5 fb       	bst	r28, 5
  e0:	66 27       	eor	r22, r22
  e2:	60 f9       	bld	r22, 0
  e4:	85 e0       	ldi	r24, 0x05	; 5
  e6:	0e 94 e4 02 	call	0x5c8	; 0x5c8 <DIO_writepin>
  ea:	c4 fb       	bst	r28, 4
  ec:	66 27       	eor	r22, r22
  ee:	60 f9       	bld	r22, 0
  f0:	84 e0       	ldi	r24, 0x04	; 4
  f2:	0e 94 e4 02 	call	0x5c8	; 0x5c8 <DIO_writepin>
  f6:	61 e0       	ldi	r22, 0x01	; 1
  f8:	83 e0       	ldi	r24, 0x03	; 3
  fa:	0e 94 e4 02 	call	0x5c8	; 0x5c8 <DIO_writepin>
  fe:	8f e9       	ldi	r24, 0x9F	; 159
 100:	9f e0       	ldi	r25, 0x0F	; 15
 102:	01 97       	sbiw	r24, 0x01	; 1
 104:	f1 f7       	brne	.-4      	; 0x102 <WriteIns+0x4a>
 106:	00 c0       	rjmp	.+0      	; 0x108 <WriteIns+0x50>
 108:	00 00       	nop
 10a:	60 e0       	ldi	r22, 0x00	; 0
 10c:	83 e0       	ldi	r24, 0x03	; 3
 10e:	0e 94 e4 02 	call	0x5c8	; 0x5c8 <DIO_writepin>
 112:	8f e9       	ldi	r24, 0x9F	; 159
 114:	9f e0       	ldi	r25, 0x0F	; 15
 116:	01 97       	sbiw	r24, 0x01	; 1
 118:	f1 f7       	brne	.-4      	; 0x116 <WriteIns+0x5e>
 11a:	00 c0       	rjmp	.+0      	; 0x11c <WriteIns+0x64>
 11c:	00 00       	nop
 11e:	c3 fb       	bst	r28, 3
 120:	66 27       	eor	r22, r22
 122:	60 f9       	bld	r22, 0
 124:	87 e0       	ldi	r24, 0x07	; 7
 126:	0e 94 e4 02 	call	0x5c8	; 0x5c8 <DIO_writepin>
 12a:	c2 fb       	bst	r28, 2
 12c:	66 27       	eor	r22, r22
 12e:	60 f9       	bld	r22, 0
 130:	86 e0       	ldi	r24, 0x06	; 6
 132:	0e 94 e4 02 	call	0x5c8	; 0x5c8 <DIO_writepin>
 136:	c1 fb       	bst	r28, 1
 138:	66 27       	eor	r22, r22
 13a:	60 f9       	bld	r22, 0
 13c:	85 e0       	ldi	r24, 0x05	; 5
 13e:	0e 94 e4 02 	call	0x5c8	; 0x5c8 <DIO_writepin>
 142:	6c 2f       	mov	r22, r28
 144:	61 70       	andi	r22, 0x01	; 1
 146:	84 e0       	ldi	r24, 0x04	; 4
 148:	0e 94 e4 02 	call	0x5c8	; 0x5c8 <DIO_writepin>
 14c:	61 e0       	ldi	r22, 0x01	; 1
 14e:	83 e0       	ldi	r24, 0x03	; 3
 150:	0e 94 e4 02 	call	0x5c8	; 0x5c8 <DIO_writepin>
 154:	8f e9       	ldi	r24, 0x9F	; 159
 156:	9f e0       	ldi	r25, 0x0F	; 15
 158:	01 97       	sbiw	r24, 0x01	; 1
 15a:	f1 f7       	brne	.-4      	; 0x158 <WriteIns+0xa0>
 15c:	00 c0       	rjmp	.+0      	; 0x15e <WriteIns+0xa6>
 15e:	00 00       	nop
 160:	60 e0       	ldi	r22, 0x00	; 0
 162:	83 e0       	ldi	r24, 0x03	; 3
 164:	0e 94 e4 02 	call	0x5c8	; 0x5c8 <DIO_writepin>
 168:	8f e9       	ldi	r24, 0x9F	; 159
 16a:	9f e0       	ldi	r25, 0x0F	; 15
 16c:	01 97       	sbiw	r24, 0x01	; 1
 16e:	f1 f7       	brne	.-4      	; 0x16c <WriteIns+0xb4>
 170:	00 c0       	rjmp	.+0      	; 0x172 <WriteIns+0xba>
 172:	00 00       	nop
 174:	cf 91       	pop	r28
 176:	08 95       	ret

00000178 <WriteData>:
 178:	cf 93       	push	r28
 17a:	c8 2f       	mov	r28, r24
 17c:	61 e0       	ldi	r22, 0x01	; 1
 17e:	81 e0       	ldi	r24, 0x01	; 1
 180:	0e 94 e4 02 	call	0x5c8	; 0x5c8 <DIO_writepin>
 184:	6c 2f       	mov	r22, r28
 186:	66 1f       	adc	r22, r22
 188:	66 27       	eor	r22, r22
 18a:	66 1f       	adc	r22, r22
 18c:	87 e0       	ldi	r24, 0x07	; 7
 18e:	0e 94 e4 02 	call	0x5c8	; 0x5c8 <DIO_writepin>
 192:	c6 fb       	bst	r28, 6
 194:	66 27       	eor	r22, r22
 196:	60 f9       	bld	r22, 0
 198:	86 e0       	ldi	r24, 0x06	; 6
 19a:	0e 94 e4 02 	call	0x5c8	; 0x5c8 <DIO_writepin>
 19e:	c5 fb       	bst	r28, 5
 1a0:	66 27       	eor	r22, r22
 1a2:	60 f9       	bld	r22, 0
 1a4:	85 e0       	ldi	r24, 0x05	; 5
 1a6:	0e 94 e4 02 	call	0x5c8	; 0x5c8 <DIO_writepin>
 1aa:	c4 fb       	bst	r28, 4
 1ac:	66 27       	eor	r22, r22
 1ae:	60 f9       	bld	r22, 0
 1b0:	84 e0       	ldi	r24, 0x04	; 4
 1b2:	0e 94 e4 02 	call	0x5c8	; 0x5c8 <DIO_writepin>
 1b6:	61 e0       	ldi	r22, 0x01	; 1
 1b8:	83 e0       	ldi	r24, 0x03	; 3
 1ba:	0e 94 e4 02 	call	0x5c8	; 0x5c8 <DIO_writepin>
 1be:	8f e9       	ldi	r24, 0x9F	; 159
 1c0:	9f e0       	ldi	r25, 0x0F	; 15
 1c2:	01 97       	sbiw	r24, 0x01	; 1
 1c4:	f1 f7       	brne	.-4      	; 0x1c2 <WriteData+0x4a>
 1c6:	00 c0       	rjmp	.+0      	; 0x1c8 <WriteData+0x50>
 1c8:	00 00       	nop
 1ca:	60 e0       	ldi	r22, 0x00	; 0
 1cc:	83 e0       	ldi	r24, 0x03	; 3
 1ce:	0e 94 e4 02 	call	0x5c8	; 0x5c8 <DIO_writepin>
 1d2:	8f e9       	ldi	r24, 0x9F	; 159
 1d4:	9f e0       	ldi	r25, 0x0F	; 15
 1d6:	01 97       	sbiw	r24, 0x01	; 1
 1d8:	f1 f7       	brne	.-4      	; 0x1d6 <WriteData+0x5e>
 1da:	00 c0       	rjmp	.+0      	; 0x1dc <WriteData+0x64>
 1dc:	00 00       	nop
 1de:	c3 fb       	bst	r28, 3
 1e0:	66 27       	eor	r22, r22
 1e2:	60 f9       	bld	r22, 0
 1e4:	87 e0       	ldi	r24, 0x07	; 7
 1e6:	0e 94 e4 02 	call	0x5c8	; 0x5c8 <DIO_writepin>
 1ea:	c2 fb       	bst	r28, 2
 1ec:	66 27       	eor	r22, r22
 1ee:	60 f9       	bld	r22, 0
 1f0:	86 e0       	ldi	r24, 0x06	; 6
 1f2:	0e 94 e4 02 	call	0x5c8	; 0x5c8 <DIO_writepin>
 1f6:	c1 fb       	bst	r28, 1
 1f8:	66 27       	eor	r22, r22
 1fa:	60 f9       	bld	r22, 0
 1fc:	85 e0       	ldi	r24, 0x05	; 5
 1fe:	0e 94 e4 02 	call	0x5c8	; 0x5c8 <DIO_writepin>
 202:	6c 2f       	mov	r22, r28
 204:	61 70       	andi	r22, 0x01	; 1
 206:	84 e0       	ldi	r24, 0x04	; 4
 208:	0e 94 e4 02 	call	0x5c8	; 0x5c8 <DIO_writepin>
 20c:	61 e0       	ldi	r22, 0x01	; 1
 20e:	83 e0       	ldi	r24, 0x03	; 3
 210:	0e 94 e4 02 	call	0x5c8	; 0x5c8 <DIO_writepin>
 214:	8f e9       	ldi	r24, 0x9F	; 159
 216:	9f e0       	ldi	r25, 0x0F	; 15
 218:	01 97       	sbiw	r24, 0x01	; 1
 21a:	f1 f7       	brne	.-4      	; 0x218 <WriteData+0xa0>
 21c:	00 c0       	rjmp	.+0      	; 0x21e <WriteData+0xa6>
 21e:	00 00       	nop
 220:	60 e0       	ldi	r22, 0x00	; 0
 222:	83 e0       	ldi	r24, 0x03	; 3
 224:	0e 94 e4 02 	call	0x5c8	; 0x5c8 <DIO_writepin>
 228:	8f e9       	ldi	r24, 0x9F	; 159
 22a:	9f e0       	ldi	r25, 0x0F	; 15
 22c:	01 97       	sbiw	r24, 0x01	; 1
 22e:	f1 f7       	brne	.-4      	; 0x22c <WriteData+0xb4>
 230:	00 c0       	rjmp	.+0      	; 0x232 <WriteData+0xba>
 232:	00 00       	nop
 234:	cf 91       	pop	r28
 236:	08 95       	ret

00000238 <LCD_Init>:
 238:	2f ef       	ldi	r18, 0xFF	; 255
 23a:	80 e7       	ldi	r24, 0x70	; 112
 23c:	92 e0       	ldi	r25, 0x02	; 2
 23e:	21 50       	subi	r18, 0x01	; 1
 240:	80 40       	sbci	r24, 0x00	; 0
 242:	90 40       	sbci	r25, 0x00	; 0
 244:	e1 f7       	brne	.-8      	; 0x23e <LCD_Init+0x6>
 246:	00 c0       	rjmp	.+0      	; 0x248 <LCD_Init+0x10>
 248:	00 00       	nop
 24a:	82 e0       	ldi	r24, 0x02	; 2
 24c:	0e 94 5c 00 	call	0xb8	; 0xb8 <WriteIns>
 250:	88 e2       	ldi	r24, 0x28	; 40
 252:	0e 94 5c 00 	call	0xb8	; 0xb8 <WriteIns>
 256:	8c e0       	ldi	r24, 0x0C	; 12
 258:	0e 94 5c 00 	call	0xb8	; 0xb8 <WriteIns>
 25c:	81 e0       	ldi	r24, 0x01	; 1
 25e:	0e 94 5c 00 	call	0xb8	; 0xb8 <WriteIns>
 262:	8f e9       	ldi	r24, 0x9F	; 159
 264:	9f e0       	ldi	r25, 0x0F	; 15
 266:	01 97       	sbiw	r24, 0x01	; 1
 268:	f1 f7       	brne	.-4      	; 0x266 <LCD_Init+0x2e>
 26a:	00 c0       	rjmp	.+0      	; 0x26c <LCD_Init+0x34>
 26c:	00 00       	nop
 26e:	86 e0       	ldi	r24, 0x06	; 6
 270:	0e 94 5c 00 	call	0xb8	; 0xb8 <WriteIns>
 274:	08 95       	ret

00000276 <LCD_WriteChar>:
 276:	0e 94 bc 00 	call	0x178	; 0x178 <WriteData>
 27a:	08 95       	ret

0000027c <LCD_SetCursor>:
 27c:	81 11       	cpse	r24, r1
 27e:	05 c0       	rjmp	.+10     	; 0x28a <LCD_SetCursor+0xe>
 280:	86 2f       	mov	r24, r22
 282:	80 68       	ori	r24, 0x80	; 128
 284:	0e 94 5c 00 	call	0xb8	; 0xb8 <WriteIns>
 288:	08 95       	ret
 28a:	81 30       	cpi	r24, 0x01	; 1
 28c:	21 f4       	brne	.+8      	; 0x296 <LCD_SetCursor+0x1a>
 28e:	80 ec       	ldi	r24, 0xC0	; 192
 290:	86 0f       	add	r24, r22
 292:	0e 94 5c 00 	call	0xb8	; 0xb8 <WriteIns>
 296:	08 95       	ret

00000298 <LCD_WriteNumber>:
 298:	cf 92       	push	r12
 29a:	df 92       	push	r13
 29c:	ef 92       	push	r14
 29e:	ff 92       	push	r15
 2a0:	1f 93       	push	r17
 2a2:	cf 93       	push	r28
 2a4:	df 93       	push	r29
 2a6:	cd b7       	in	r28, 0x3d	; 61
 2a8:	de b7       	in	r29, 0x3e	; 62
 2aa:	2a 97       	sbiw	r28, 0x0a	; 10
 2ac:	0f b6       	in	r0, 0x3f	; 63
 2ae:	f8 94       	cli
 2b0:	de bf       	out	0x3e, r29	; 62
 2b2:	0f be       	out	0x3f, r0	; 63
 2b4:	cd bf       	out	0x3d, r28	; 61
 2b6:	6b 01       	movw	r12, r22
 2b8:	7c 01       	movw	r14, r24
 2ba:	61 15       	cp	r22, r1
 2bc:	71 05       	cpc	r23, r1
 2be:	81 05       	cpc	r24, r1
 2c0:	91 05       	cpc	r25, r1
 2c2:	21 f4       	brne	.+8      	; 0x2cc <LCD_WriteNumber+0x34>
 2c4:	80 e3       	ldi	r24, 0x30	; 48
 2c6:	0e 94 3b 01 	call	0x276	; 0x276 <LCD_WriteChar>
 2ca:	39 c0       	rjmp	.+114    	; 0x33e <LCD_WriteNumber+0xa6>
 2cc:	99 23       	and	r25, r25
 2ce:	5c f4       	brge	.+22     	; 0x2e6 <LCD_WriteNumber+0x4e>
 2d0:	f0 94       	com	r15
 2d2:	e0 94       	com	r14
 2d4:	d0 94       	com	r13
 2d6:	c0 94       	com	r12
 2d8:	c1 1c       	adc	r12, r1
 2da:	d1 1c       	adc	r13, r1
 2dc:	e1 1c       	adc	r14, r1
 2de:	f1 1c       	adc	r15, r1
 2e0:	8d e2       	ldi	r24, 0x2D	; 45
 2e2:	0e 94 3b 01 	call	0x276	; 0x276 <LCD_WriteChar>
 2e6:	10 e0       	ldi	r17, 0x00	; 0
 2e8:	15 c0       	rjmp	.+42     	; 0x314 <LCD_WriteNumber+0x7c>
 2ea:	c7 01       	movw	r24, r14
 2ec:	b6 01       	movw	r22, r12
 2ee:	2a e0       	ldi	r18, 0x0A	; 10
 2f0:	30 e0       	ldi	r19, 0x00	; 0
 2f2:	40 e0       	ldi	r20, 0x00	; 0
 2f4:	50 e0       	ldi	r21, 0x00	; 0
 2f6:	0e 94 d7 07 	call	0xfae	; 0xfae <__divmodsi4>
 2fa:	e1 e0       	ldi	r30, 0x01	; 1
 2fc:	f0 e0       	ldi	r31, 0x00	; 0
 2fe:	ec 0f       	add	r30, r28
 300:	fd 1f       	adc	r31, r29
 302:	e1 0f       	add	r30, r17
 304:	f1 1d       	adc	r31, r1
 306:	60 5d       	subi	r22, 0xD0	; 208
 308:	60 83       	st	Z, r22
 30a:	1f 5f       	subi	r17, 0xFF	; 255
 30c:	c2 2e       	mov	r12, r18
 30e:	d3 2e       	mov	r13, r19
 310:	e4 2e       	mov	r14, r20
 312:	f5 2e       	mov	r15, r21
 314:	c1 14       	cp	r12, r1
 316:	d1 04       	cpc	r13, r1
 318:	e1 04       	cpc	r14, r1
 31a:	f1 04       	cpc	r15, r1
 31c:	31 f7       	brne	.-52     	; 0x2ea <LCD_WriteNumber+0x52>
 31e:	0d c0       	rjmp	.+26     	; 0x33a <LCD_WriteNumber+0xa2>
 320:	e1 2f       	mov	r30, r17
 322:	f0 e0       	ldi	r31, 0x00	; 0
 324:	31 97       	sbiw	r30, 0x01	; 1
 326:	81 e0       	ldi	r24, 0x01	; 1
 328:	90 e0       	ldi	r25, 0x00	; 0
 32a:	8c 0f       	add	r24, r28
 32c:	9d 1f       	adc	r25, r29
 32e:	e8 0f       	add	r30, r24
 330:	f9 1f       	adc	r31, r25
 332:	80 81       	ld	r24, Z
 334:	0e 94 3b 01 	call	0x276	; 0x276 <LCD_WriteChar>
 338:	11 50       	subi	r17, 0x01	; 1
 33a:	11 11       	cpse	r17, r1
 33c:	f1 cf       	rjmp	.-30     	; 0x320 <LCD_WriteNumber+0x88>
 33e:	2a 96       	adiw	r28, 0x0a	; 10
 340:	0f b6       	in	r0, 0x3f	; 63
 342:	f8 94       	cli
 344:	de bf       	out	0x3e, r29	; 62
 346:	0f be       	out	0x3f, r0	; 63
 348:	cd bf       	out	0x3d, r28	; 61
 34a:	df 91       	pop	r29
 34c:	cf 91       	pop	r28
 34e:	1f 91       	pop	r17
 350:	ff 90       	pop	r15
 352:	ef 90       	pop	r14
 354:	df 90       	pop	r13
 356:	cf 90       	pop	r12
 358:	08 95       	ret

0000035a <LCD_PinsInit>:
   void LCD_PinsInit ()
   {
	   DIO_initpin(PINA0,OUTPUT);
 35a:	60 e0       	ldi	r22, 0x00	; 0
 35c:	80 e0       	ldi	r24, 0x00	; 0
 35e:	0e 94 d3 01 	call	0x3a6	; 0x3a6 <DIO_initpin>
	   DIO_initpin(PINA1,OUTPUT);
 362:	60 e0       	ldi	r22, 0x00	; 0
 364:	81 e0       	ldi	r24, 0x01	; 1
 366:	0e 94 d3 01 	call	0x3a6	; 0x3a6 <DIO_initpin>
	   DIO_initpin(PINA2,OUTPUT);
 36a:	60 e0       	ldi	r22, 0x00	; 0
 36c:	82 e0       	ldi	r24, 0x02	; 2
 36e:	0e 94 d3 01 	call	0x3a6	; 0x3a6 <DIO_initpin>
	   DIO_initpin(PINA3,OUTPUT);
 372:	60 e0       	ldi	r22, 0x00	; 0
 374:	83 e0       	ldi	r24, 0x03	; 3
 376:	0e 94 d3 01 	call	0x3a6	; 0x3a6 <DIO_initpin>
	   DIO_initpin(PINA4,OUTPUT);
 37a:	60 e0       	ldi	r22, 0x00	; 0
 37c:	84 e0       	ldi	r24, 0x04	; 4
 37e:	0e 94 d3 01 	call	0x3a6	; 0x3a6 <DIO_initpin>
	   DIO_initpin(PINA5,OUTPUT);
 382:	60 e0       	ldi	r22, 0x00	; 0
 384:	85 e0       	ldi	r24, 0x05	; 5
 386:	0e 94 d3 01 	call	0x3a6	; 0x3a6 <DIO_initpin>
	   DIO_initpin(PINA6,OUTPUT);
 38a:	60 e0       	ldi	r22, 0x00	; 0
 38c:	86 e0       	ldi	r24, 0x06	; 6
 38e:	0e 94 d3 01 	call	0x3a6	; 0x3a6 <DIO_initpin>
	   DIO_initpin(PINA7,OUTPUT);
 392:	60 e0       	ldi	r22, 0x00	; 0
 394:	87 e0       	ldi	r24, 0x07	; 7
 396:	0e 94 d3 01 	call	0x3a6	; 0x3a6 <DIO_initpin>
 39a:	08 95       	ret

0000039c <main>:

#include "APP/app.h"
int main(void)
{   
	
	 app_init();
 39c:	0e 94 49 00 	call	0x92	; 0x92 <app_init>
	 pwm_test();
 3a0:	0e 94 51 00 	call	0xa2	; 0xa2 <pwm_test>
 3a4:	ff cf       	rjmp	.-2      	; 0x3a4 <main+0x8>

000003a6 <DIO_initpin>:
	  DIO_Pin_type i;
	  for (i=PINA0; i<TOTAL_PINS; i++)
	  {
		  DIO_initpin(i,PinsStatusArray[i]);
	  }
  }
 3a6:	98 2f       	mov	r25, r24
 3a8:	96 95       	lsr	r25
 3aa:	96 95       	lsr	r25
 3ac:	96 95       	lsr	r25
 3ae:	87 70       	andi	r24, 0x07	; 7
 3b0:	61 30       	cpi	r22, 0x01	; 1
 3b2:	09 f4       	brne	.+2      	; 0x3b6 <DIO_initpin+0x10>
 3b4:	59 c0       	rjmp	.+178    	; 0x468 <__EEPROM_REGION_LENGTH__+0x68>
 3b6:	20 f0       	brcs	.+8      	; 0x3c0 <DIO_initpin+0x1a>
 3b8:	62 30       	cpi	r22, 0x02	; 2
 3ba:	09 f4       	brne	.+2      	; 0x3be <DIO_initpin+0x18>
 3bc:	a9 c0       	rjmp	.+338    	; 0x510 <__EEPROM_REGION_LENGTH__+0x110>
 3be:	fc c0       	rjmp	.+504    	; 0x5b8 <__EEPROM_REGION_LENGTH__+0x1b8>
 3c0:	91 30       	cpi	r25, 0x01	; 1
 3c2:	c9 f0       	breq	.+50     	; 0x3f6 <DIO_initpin+0x50>
 3c4:	28 f0       	brcs	.+10     	; 0x3d0 <DIO_initpin+0x2a>
 3c6:	92 30       	cpi	r25, 0x02	; 2
 3c8:	49 f1       	breq	.+82     	; 0x41c <__EEPROM_REGION_LENGTH__+0x1c>
 3ca:	93 30       	cpi	r25, 0x03	; 3
 3cc:	d1 f1       	breq	.+116    	; 0x442 <__EEPROM_REGION_LENGTH__+0x42>
 3ce:	f6 c0       	rjmp	.+492    	; 0x5bc <__EEPROM_REGION_LENGTH__+0x1bc>
 3d0:	4a b3       	in	r20, 0x1a	; 26
 3d2:	21 e0       	ldi	r18, 0x01	; 1
 3d4:	30 e0       	ldi	r19, 0x00	; 0
 3d6:	b9 01       	movw	r22, r18
 3d8:	02 c0       	rjmp	.+4      	; 0x3de <DIO_initpin+0x38>
 3da:	66 0f       	add	r22, r22
 3dc:	77 1f       	adc	r23, r23
 3de:	8a 95       	dec	r24
 3e0:	e2 f7       	brpl	.-8      	; 0x3da <DIO_initpin+0x34>
 3e2:	cb 01       	movw	r24, r22
 3e4:	94 2f       	mov	r25, r20
 3e6:	98 2b       	or	r25, r24
 3e8:	9a bb       	out	0x1a, r25	; 26
 3ea:	9b b3       	in	r25, 0x1b	; 27
 3ec:	80 95       	com	r24
 3ee:	89 23       	and	r24, r25
 3f0:	8b bb       	out	0x1b, r24	; 27
 3f2:	80 e0       	ldi	r24, 0x00	; 0
 3f4:	08 95       	ret
 3f6:	47 b3       	in	r20, 0x17	; 23
 3f8:	21 e0       	ldi	r18, 0x01	; 1
 3fa:	30 e0       	ldi	r19, 0x00	; 0
 3fc:	b9 01       	movw	r22, r18
 3fe:	02 c0       	rjmp	.+4      	; 0x404 <__EEPROM_REGION_LENGTH__+0x4>
 400:	66 0f       	add	r22, r22
 402:	77 1f       	adc	r23, r23
 404:	8a 95       	dec	r24
 406:	e2 f7       	brpl	.-8      	; 0x400 <__EEPROM_REGION_LENGTH__>
 408:	cb 01       	movw	r24, r22
 40a:	94 2f       	mov	r25, r20
 40c:	98 2b       	or	r25, r24
 40e:	97 bb       	out	0x17, r25	; 23
 410:	98 b3       	in	r25, 0x18	; 24
 412:	80 95       	com	r24
 414:	89 23       	and	r24, r25
 416:	88 bb       	out	0x18, r24	; 24
 418:	80 e0       	ldi	r24, 0x00	; 0
 41a:	08 95       	ret
 41c:	44 b3       	in	r20, 0x14	; 20
 41e:	21 e0       	ldi	r18, 0x01	; 1
 420:	30 e0       	ldi	r19, 0x00	; 0
 422:	b9 01       	movw	r22, r18
 424:	02 c0       	rjmp	.+4      	; 0x42a <__EEPROM_REGION_LENGTH__+0x2a>
 426:	66 0f       	add	r22, r22
 428:	77 1f       	adc	r23, r23
 42a:	8a 95       	dec	r24
 42c:	e2 f7       	brpl	.-8      	; 0x426 <__EEPROM_REGION_LENGTH__+0x26>
 42e:	cb 01       	movw	r24, r22
 430:	94 2f       	mov	r25, r20
 432:	98 2b       	or	r25, r24
 434:	94 bb       	out	0x14, r25	; 20
 436:	95 b3       	in	r25, 0x15	; 21
 438:	80 95       	com	r24
 43a:	89 23       	and	r24, r25
 43c:	85 bb       	out	0x15, r24	; 21
 43e:	80 e0       	ldi	r24, 0x00	; 0
 440:	08 95       	ret
 442:	41 b3       	in	r20, 0x11	; 17
 444:	21 e0       	ldi	r18, 0x01	; 1
 446:	30 e0       	ldi	r19, 0x00	; 0
 448:	b9 01       	movw	r22, r18
 44a:	02 c0       	rjmp	.+4      	; 0x450 <__EEPROM_REGION_LENGTH__+0x50>
 44c:	66 0f       	add	r22, r22
 44e:	77 1f       	adc	r23, r23
 450:	8a 95       	dec	r24
 452:	e2 f7       	brpl	.-8      	; 0x44c <__EEPROM_REGION_LENGTH__+0x4c>
 454:	cb 01       	movw	r24, r22
 456:	94 2f       	mov	r25, r20
 458:	98 2b       	or	r25, r24
 45a:	91 bb       	out	0x11, r25	; 17
 45c:	92 b3       	in	r25, 0x12	; 18
 45e:	80 95       	com	r24
 460:	89 23       	and	r24, r25
 462:	82 bb       	out	0x12, r24	; 18
 464:	80 e0       	ldi	r24, 0x00	; 0
 466:	08 95       	ret
 468:	91 30       	cpi	r25, 0x01	; 1
 46a:	c9 f0       	breq	.+50     	; 0x49e <__EEPROM_REGION_LENGTH__+0x9e>
 46c:	28 f0       	brcs	.+10     	; 0x478 <__EEPROM_REGION_LENGTH__+0x78>
 46e:	92 30       	cpi	r25, 0x02	; 2
 470:	49 f1       	breq	.+82     	; 0x4c4 <__EEPROM_REGION_LENGTH__+0xc4>
 472:	93 30       	cpi	r25, 0x03	; 3
 474:	d1 f1       	breq	.+116    	; 0x4ea <__EEPROM_REGION_LENGTH__+0xea>
 476:	a4 c0       	rjmp	.+328    	; 0x5c0 <__EEPROM_REGION_LENGTH__+0x1c0>
 478:	4a b3       	in	r20, 0x1a	; 26
 47a:	21 e0       	ldi	r18, 0x01	; 1
 47c:	30 e0       	ldi	r19, 0x00	; 0
 47e:	b9 01       	movw	r22, r18
 480:	02 c0       	rjmp	.+4      	; 0x486 <__EEPROM_REGION_LENGTH__+0x86>
 482:	66 0f       	add	r22, r22
 484:	77 1f       	adc	r23, r23
 486:	8a 95       	dec	r24
 488:	e2 f7       	brpl	.-8      	; 0x482 <__EEPROM_REGION_LENGTH__+0x82>
 48a:	cb 01       	movw	r24, r22
 48c:	80 95       	com	r24
 48e:	94 2f       	mov	r25, r20
 490:	98 23       	and	r25, r24
 492:	9a bb       	out	0x1a, r25	; 26
 494:	9b b3       	in	r25, 0x1b	; 27
 496:	89 23       	and	r24, r25
 498:	8b bb       	out	0x1b, r24	; 27
 49a:	80 e0       	ldi	r24, 0x00	; 0
 49c:	08 95       	ret
 49e:	47 b3       	in	r20, 0x17	; 23
 4a0:	21 e0       	ldi	r18, 0x01	; 1
 4a2:	30 e0       	ldi	r19, 0x00	; 0
 4a4:	b9 01       	movw	r22, r18
 4a6:	02 c0       	rjmp	.+4      	; 0x4ac <__EEPROM_REGION_LENGTH__+0xac>
 4a8:	66 0f       	add	r22, r22
 4aa:	77 1f       	adc	r23, r23
 4ac:	8a 95       	dec	r24
 4ae:	e2 f7       	brpl	.-8      	; 0x4a8 <__EEPROM_REGION_LENGTH__+0xa8>
 4b0:	cb 01       	movw	r24, r22
 4b2:	80 95       	com	r24
 4b4:	94 2f       	mov	r25, r20
 4b6:	98 23       	and	r25, r24
 4b8:	97 bb       	out	0x17, r25	; 23
 4ba:	98 b3       	in	r25, 0x18	; 24
 4bc:	89 23       	and	r24, r25
 4be:	88 bb       	out	0x18, r24	; 24
 4c0:	80 e0       	ldi	r24, 0x00	; 0
 4c2:	08 95       	ret
 4c4:	44 b3       	in	r20, 0x14	; 20
 4c6:	21 e0       	ldi	r18, 0x01	; 1
 4c8:	30 e0       	ldi	r19, 0x00	; 0
 4ca:	b9 01       	movw	r22, r18
 4cc:	02 c0       	rjmp	.+4      	; 0x4d2 <__EEPROM_REGION_LENGTH__+0xd2>
 4ce:	66 0f       	add	r22, r22
 4d0:	77 1f       	adc	r23, r23
 4d2:	8a 95       	dec	r24
 4d4:	e2 f7       	brpl	.-8      	; 0x4ce <__EEPROM_REGION_LENGTH__+0xce>
 4d6:	cb 01       	movw	r24, r22
 4d8:	80 95       	com	r24
 4da:	94 2f       	mov	r25, r20
 4dc:	98 23       	and	r25, r24
 4de:	94 bb       	out	0x14, r25	; 20
 4e0:	95 b3       	in	r25, 0x15	; 21
 4e2:	89 23       	and	r24, r25
 4e4:	85 bb       	out	0x15, r24	; 21
 4e6:	80 e0       	ldi	r24, 0x00	; 0
 4e8:	08 95       	ret
 4ea:	41 b3       	in	r20, 0x11	; 17
 4ec:	21 e0       	ldi	r18, 0x01	; 1
 4ee:	30 e0       	ldi	r19, 0x00	; 0
 4f0:	b9 01       	movw	r22, r18
 4f2:	02 c0       	rjmp	.+4      	; 0x4f8 <__EEPROM_REGION_LENGTH__+0xf8>
 4f4:	66 0f       	add	r22, r22
 4f6:	77 1f       	adc	r23, r23
 4f8:	8a 95       	dec	r24
 4fa:	e2 f7       	brpl	.-8      	; 0x4f4 <__EEPROM_REGION_LENGTH__+0xf4>
 4fc:	cb 01       	movw	r24, r22
 4fe:	80 95       	com	r24
 500:	94 2f       	mov	r25, r20
 502:	98 23       	and	r25, r24
 504:	91 bb       	out	0x11, r25	; 17
 506:	92 b3       	in	r25, 0x12	; 18
 508:	89 23       	and	r24, r25
 50a:	82 bb       	out	0x12, r24	; 18
 50c:	80 e0       	ldi	r24, 0x00	; 0
 50e:	08 95       	ret
 510:	91 30       	cpi	r25, 0x01	; 1
 512:	c9 f0       	breq	.+50     	; 0x546 <__EEPROM_REGION_LENGTH__+0x146>
 514:	28 f0       	brcs	.+10     	; 0x520 <__EEPROM_REGION_LENGTH__+0x120>
 516:	92 30       	cpi	r25, 0x02	; 2
 518:	49 f1       	breq	.+82     	; 0x56c <__EEPROM_REGION_LENGTH__+0x16c>
 51a:	93 30       	cpi	r25, 0x03	; 3
 51c:	d1 f1       	breq	.+116    	; 0x592 <__EEPROM_REGION_LENGTH__+0x192>
 51e:	52 c0       	rjmp	.+164    	; 0x5c4 <__EEPROM_REGION_LENGTH__+0x1c4>
 520:	4a b3       	in	r20, 0x1a	; 26
 522:	21 e0       	ldi	r18, 0x01	; 1
 524:	30 e0       	ldi	r19, 0x00	; 0
 526:	b9 01       	movw	r22, r18
 528:	02 c0       	rjmp	.+4      	; 0x52e <__EEPROM_REGION_LENGTH__+0x12e>
 52a:	66 0f       	add	r22, r22
 52c:	77 1f       	adc	r23, r23
 52e:	8a 95       	dec	r24
 530:	e2 f7       	brpl	.-8      	; 0x52a <__EEPROM_REGION_LENGTH__+0x12a>
 532:	cb 01       	movw	r24, r22
 534:	96 2f       	mov	r25, r22
 536:	90 95       	com	r25
 538:	94 23       	and	r25, r20
 53a:	9a bb       	out	0x1a, r25	; 26
 53c:	9b b3       	in	r25, 0x1b	; 27
 53e:	89 2b       	or	r24, r25
 540:	8b bb       	out	0x1b, r24	; 27
 542:	80 e0       	ldi	r24, 0x00	; 0
 544:	08 95       	ret
 546:	47 b3       	in	r20, 0x17	; 23
 548:	21 e0       	ldi	r18, 0x01	; 1
 54a:	30 e0       	ldi	r19, 0x00	; 0
 54c:	b9 01       	movw	r22, r18
 54e:	02 c0       	rjmp	.+4      	; 0x554 <__EEPROM_REGION_LENGTH__+0x154>
 550:	66 0f       	add	r22, r22
 552:	77 1f       	adc	r23, r23
 554:	8a 95       	dec	r24
 556:	e2 f7       	brpl	.-8      	; 0x550 <__EEPROM_REGION_LENGTH__+0x150>
 558:	cb 01       	movw	r24, r22
 55a:	96 2f       	mov	r25, r22
 55c:	90 95       	com	r25
 55e:	94 23       	and	r25, r20
 560:	97 bb       	out	0x17, r25	; 23
 562:	98 b3       	in	r25, 0x18	; 24
 564:	89 2b       	or	r24, r25
 566:	88 bb       	out	0x18, r24	; 24
 568:	80 e0       	ldi	r24, 0x00	; 0
 56a:	08 95       	ret
 56c:	44 b3       	in	r20, 0x14	; 20
 56e:	21 e0       	ldi	r18, 0x01	; 1
 570:	30 e0       	ldi	r19, 0x00	; 0
 572:	b9 01       	movw	r22, r18
 574:	02 c0       	rjmp	.+4      	; 0x57a <__EEPROM_REGION_LENGTH__+0x17a>
 576:	66 0f       	add	r22, r22
 578:	77 1f       	adc	r23, r23
 57a:	8a 95       	dec	r24
 57c:	e2 f7       	brpl	.-8      	; 0x576 <__EEPROM_REGION_LENGTH__+0x176>
 57e:	cb 01       	movw	r24, r22
 580:	96 2f       	mov	r25, r22
 582:	90 95       	com	r25
 584:	94 23       	and	r25, r20
 586:	94 bb       	out	0x14, r25	; 20
 588:	95 b3       	in	r25, 0x15	; 21
 58a:	89 2b       	or	r24, r25
 58c:	85 bb       	out	0x15, r24	; 21
 58e:	80 e0       	ldi	r24, 0x00	; 0
 590:	08 95       	ret
 592:	41 b3       	in	r20, 0x11	; 17
 594:	21 e0       	ldi	r18, 0x01	; 1
 596:	30 e0       	ldi	r19, 0x00	; 0
 598:	b9 01       	movw	r22, r18
 59a:	02 c0       	rjmp	.+4      	; 0x5a0 <__EEPROM_REGION_LENGTH__+0x1a0>
 59c:	66 0f       	add	r22, r22
 59e:	77 1f       	adc	r23, r23
 5a0:	8a 95       	dec	r24
 5a2:	e2 f7       	brpl	.-8      	; 0x59c <__EEPROM_REGION_LENGTH__+0x19c>
 5a4:	cb 01       	movw	r24, r22
 5a6:	96 2f       	mov	r25, r22
 5a8:	90 95       	com	r25
 5aa:	94 23       	and	r25, r20
 5ac:	91 bb       	out	0x11, r25	; 17
 5ae:	92 b3       	in	r25, 0x12	; 18
 5b0:	89 2b       	or	r24, r25
 5b2:	82 bb       	out	0x12, r24	; 18
 5b4:	80 e0       	ldi	r24, 0x00	; 0
 5b6:	08 95       	ret
 5b8:	81 e0       	ldi	r24, 0x01	; 1
 5ba:	08 95       	ret
 5bc:	81 e0       	ldi	r24, 0x01	; 1
 5be:	08 95       	ret
 5c0:	81 e0       	ldi	r24, 0x01	; 1
 5c2:	08 95       	ret
 5c4:	81 e0       	ldi	r24, 0x01	; 1
 5c6:	08 95       	ret

000005c8 <DIO_writepin>:
	  return error;

  }
   en_dioError_t  DIO_writepin (DIO_Pin_type pin,DIO_PinVoltage_type volt)
  {
	  DIO_Port_type port = pin/8 ;
 5c8:	98 2f       	mov	r25, r24
 5ca:	96 95       	lsr	r25
 5cc:	96 95       	lsr	r25
 5ce:	96 95       	lsr	r25
	  u8 pin_num =pin % 8;
 5d0:	87 70       	andi	r24, 0x07	; 7
	  en_dioError_t error= DIO_OK;
	  if (pin_num<8)
	  {
		  switch (volt)
 5d2:	66 23       	and	r22, r22
 5d4:	09 f4       	brne	.+2      	; 0x5d8 <DIO_writepin+0x10>
 5d6:	43 c0       	rjmp	.+134    	; 0x65e <DIO_writepin+0x96>
 5d8:	61 30       	cpi	r22, 0x01	; 1
 5da:	09 f0       	breq	.+2      	; 0x5de <DIO_writepin+0x16>
 5dc:	84 c0       	rjmp	.+264    	; 0x6e6 <DIO_writepin+0x11e>
		  {
			  case HIGH:

			  switch(port)
 5de:	91 30       	cpi	r25, 0x01	; 1
 5e0:	a1 f0       	breq	.+40     	; 0x60a <DIO_writepin+0x42>
 5e2:	28 f0       	brcs	.+10     	; 0x5ee <DIO_writepin+0x26>
 5e4:	92 30       	cpi	r25, 0x02	; 2
 5e6:	f9 f0       	breq	.+62     	; 0x626 <DIO_writepin+0x5e>
 5e8:	93 30       	cpi	r25, 0x03	; 3
 5ea:	59 f1       	breq	.+86     	; 0x642 <DIO_writepin+0x7a>
 5ec:	7e c0       	rjmp	.+252    	; 0x6ea <DIO_writepin+0x122>
			  {
				  case PA:

				  SET_BIT(PORTA,pin_num);
 5ee:	4b b3       	in	r20, 0x1b	; 27
 5f0:	21 e0       	ldi	r18, 0x01	; 1
 5f2:	30 e0       	ldi	r19, 0x00	; 0
 5f4:	b9 01       	movw	r22, r18
 5f6:	02 c0       	rjmp	.+4      	; 0x5fc <DIO_writepin+0x34>
 5f8:	66 0f       	add	r22, r22
 5fa:	77 1f       	adc	r23, r23
 5fc:	8a 95       	dec	r24
 5fe:	e2 f7       	brpl	.-8      	; 0x5f8 <DIO_writepin+0x30>
 600:	cb 01       	movw	r24, r22
 602:	84 2b       	or	r24, r20
 604:	8b bb       	out	0x1b, r24	; 27
  }
   en_dioError_t  DIO_writepin (DIO_Pin_type pin,DIO_PinVoltage_type volt)
  {
	  DIO_Port_type port = pin/8 ;
	  u8 pin_num =pin % 8;
	  en_dioError_t error= DIO_OK;
 606:	80 e0       	ldi	r24, 0x00	; 0
			  switch(port)
			  {
				  case PA:

				  SET_BIT(PORTA,pin_num);
				  break;
 608:	08 95       	ret
				  case PB:

				  SET_BIT(PORTB,pin_num);
 60a:	48 b3       	in	r20, 0x18	; 24
 60c:	21 e0       	ldi	r18, 0x01	; 1
 60e:	30 e0       	ldi	r19, 0x00	; 0
 610:	b9 01       	movw	r22, r18
 612:	02 c0       	rjmp	.+4      	; 0x618 <DIO_writepin+0x50>
 614:	66 0f       	add	r22, r22
 616:	77 1f       	adc	r23, r23
 618:	8a 95       	dec	r24
 61a:	e2 f7       	brpl	.-8      	; 0x614 <DIO_writepin+0x4c>
 61c:	cb 01       	movw	r24, r22
 61e:	84 2b       	or	r24, r20
 620:	88 bb       	out	0x18, r24	; 24
  }
   en_dioError_t  DIO_writepin (DIO_Pin_type pin,DIO_PinVoltage_type volt)
  {
	  DIO_Port_type port = pin/8 ;
	  u8 pin_num =pin % 8;
	  en_dioError_t error= DIO_OK;
 622:	80 e0       	ldi	r24, 0x00	; 0
				  SET_BIT(PORTA,pin_num);
				  break;
				  case PB:

				  SET_BIT(PORTB,pin_num);
				  break;
 624:	08 95       	ret
				  case PC:

				  SET_BIT(PORTC,pin_num);
 626:	45 b3       	in	r20, 0x15	; 21
 628:	21 e0       	ldi	r18, 0x01	; 1
 62a:	30 e0       	ldi	r19, 0x00	; 0
 62c:	b9 01       	movw	r22, r18
 62e:	02 c0       	rjmp	.+4      	; 0x634 <DIO_writepin+0x6c>
 630:	66 0f       	add	r22, r22
 632:	77 1f       	adc	r23, r23
 634:	8a 95       	dec	r24
 636:	e2 f7       	brpl	.-8      	; 0x630 <DIO_writepin+0x68>
 638:	cb 01       	movw	r24, r22
 63a:	84 2b       	or	r24, r20
 63c:	85 bb       	out	0x15, r24	; 21
  }
   en_dioError_t  DIO_writepin (DIO_Pin_type pin,DIO_PinVoltage_type volt)
  {
	  DIO_Port_type port = pin/8 ;
	  u8 pin_num =pin % 8;
	  en_dioError_t error= DIO_OK;
 63e:	80 e0       	ldi	r24, 0x00	; 0
				  SET_BIT(PORTB,pin_num);
				  break;
				  case PC:

				  SET_BIT(PORTC,pin_num);
				  break;
 640:	08 95       	ret
				  case PD:

				  SET_BIT(PORTD,pin_num);
 642:	42 b3       	in	r20, 0x12	; 18
 644:	21 e0       	ldi	r18, 0x01	; 1
 646:	30 e0       	ldi	r19, 0x00	; 0
 648:	b9 01       	movw	r22, r18
 64a:	02 c0       	rjmp	.+4      	; 0x650 <DIO_writepin+0x88>
 64c:	66 0f       	add	r22, r22
 64e:	77 1f       	adc	r23, r23
 650:	8a 95       	dec	r24
 652:	e2 f7       	brpl	.-8      	; 0x64c <DIO_writepin+0x84>
 654:	cb 01       	movw	r24, r22
 656:	84 2b       	or	r24, r20
 658:	82 bb       	out	0x12, r24	; 18
  }
   en_dioError_t  DIO_writepin (DIO_Pin_type pin,DIO_PinVoltage_type volt)
  {
	  DIO_Port_type port = pin/8 ;
	  u8 pin_num =pin % 8;
	  en_dioError_t error= DIO_OK;
 65a:	80 e0       	ldi	r24, 0x00	; 0
				  SET_BIT(PORTC,pin_num);
				  break;
				  case PD:

				  SET_BIT(PORTD,pin_num);
				  break;
 65c:	08 95       	ret
			  }
			  break;

			  case LOW:

			  switch(port)
 65e:	91 30       	cpi	r25, 0x01	; 1
 660:	a9 f0       	breq	.+42     	; 0x68c <DIO_writepin+0xc4>
 662:	28 f0       	brcs	.+10     	; 0x66e <DIO_writepin+0xa6>
 664:	92 30       	cpi	r25, 0x02	; 2
 666:	09 f1       	breq	.+66     	; 0x6aa <DIO_writepin+0xe2>
 668:	93 30       	cpi	r25, 0x03	; 3
 66a:	71 f1       	breq	.+92     	; 0x6c8 <DIO_writepin+0x100>
 66c:	40 c0       	rjmp	.+128    	; 0x6ee <DIO_writepin+0x126>
			  {
				  case PA:

				  CLR_BIT(PORTA,pin_num);
 66e:	4b b3       	in	r20, 0x1b	; 27
 670:	21 e0       	ldi	r18, 0x01	; 1
 672:	30 e0       	ldi	r19, 0x00	; 0
 674:	b9 01       	movw	r22, r18
 676:	02 c0       	rjmp	.+4      	; 0x67c <DIO_writepin+0xb4>
 678:	66 0f       	add	r22, r22
 67a:	77 1f       	adc	r23, r23
 67c:	8a 95       	dec	r24
 67e:	e2 f7       	brpl	.-8      	; 0x678 <DIO_writepin+0xb0>
 680:	cb 01       	movw	r24, r22
 682:	80 95       	com	r24
 684:	84 23       	and	r24, r20
 686:	8b bb       	out	0x1b, r24	; 27
  }
   en_dioError_t  DIO_writepin (DIO_Pin_type pin,DIO_PinVoltage_type volt)
  {
	  DIO_Port_type port = pin/8 ;
	  u8 pin_num =pin % 8;
	  en_dioError_t error= DIO_OK;
 688:	80 e0       	ldi	r24, 0x00	; 0
			  switch(port)
			  {
				  case PA:

				  CLR_BIT(PORTA,pin_num);
				  break;
 68a:	08 95       	ret
				  case PB:

				  CLR_BIT(PORTB,pin_num);
 68c:	48 b3       	in	r20, 0x18	; 24
 68e:	21 e0       	ldi	r18, 0x01	; 1
 690:	30 e0       	ldi	r19, 0x00	; 0
 692:	b9 01       	movw	r22, r18
 694:	02 c0       	rjmp	.+4      	; 0x69a <DIO_writepin+0xd2>
 696:	66 0f       	add	r22, r22
 698:	77 1f       	adc	r23, r23
 69a:	8a 95       	dec	r24
 69c:	e2 f7       	brpl	.-8      	; 0x696 <DIO_writepin+0xce>
 69e:	cb 01       	movw	r24, r22
 6a0:	80 95       	com	r24
 6a2:	84 23       	and	r24, r20
 6a4:	88 bb       	out	0x18, r24	; 24
  }
   en_dioError_t  DIO_writepin (DIO_Pin_type pin,DIO_PinVoltage_type volt)
  {
	  DIO_Port_type port = pin/8 ;
	  u8 pin_num =pin % 8;
	  en_dioError_t error= DIO_OK;
 6a6:	80 e0       	ldi	r24, 0x00	; 0
				  CLR_BIT(PORTA,pin_num);
				  break;
				  case PB:

				  CLR_BIT(PORTB,pin_num);
				  break;
 6a8:	08 95       	ret
				  case PC:

				  CLR_BIT(PORTC,pin_num);
 6aa:	45 b3       	in	r20, 0x15	; 21
 6ac:	21 e0       	ldi	r18, 0x01	; 1
 6ae:	30 e0       	ldi	r19, 0x00	; 0
 6b0:	b9 01       	movw	r22, r18
 6b2:	02 c0       	rjmp	.+4      	; 0x6b8 <DIO_writepin+0xf0>
 6b4:	66 0f       	add	r22, r22
 6b6:	77 1f       	adc	r23, r23
 6b8:	8a 95       	dec	r24
 6ba:	e2 f7       	brpl	.-8      	; 0x6b4 <DIO_writepin+0xec>
 6bc:	cb 01       	movw	r24, r22
 6be:	80 95       	com	r24
 6c0:	84 23       	and	r24, r20
 6c2:	85 bb       	out	0x15, r24	; 21
  }
   en_dioError_t  DIO_writepin (DIO_Pin_type pin,DIO_PinVoltage_type volt)
  {
	  DIO_Port_type port = pin/8 ;
	  u8 pin_num =pin % 8;
	  en_dioError_t error= DIO_OK;
 6c4:	80 e0       	ldi	r24, 0x00	; 0
				  CLR_BIT(PORTB,pin_num);
				  break;
				  case PC:

				  CLR_BIT(PORTC,pin_num);
				  break;
 6c6:	08 95       	ret
				  case PD:

				  CLR_BIT(PORTD,pin_num);
 6c8:	42 b3       	in	r20, 0x12	; 18
 6ca:	21 e0       	ldi	r18, 0x01	; 1
 6cc:	30 e0       	ldi	r19, 0x00	; 0
 6ce:	b9 01       	movw	r22, r18
 6d0:	02 c0       	rjmp	.+4      	; 0x6d6 <DIO_writepin+0x10e>
 6d2:	66 0f       	add	r22, r22
 6d4:	77 1f       	adc	r23, r23
 6d6:	8a 95       	dec	r24
 6d8:	e2 f7       	brpl	.-8      	; 0x6d2 <DIO_writepin+0x10a>
 6da:	cb 01       	movw	r24, r22
 6dc:	80 95       	com	r24
 6de:	84 23       	and	r24, r20
 6e0:	82 bb       	out	0x12, r24	; 18
  }
   en_dioError_t  DIO_writepin (DIO_Pin_type pin,DIO_PinVoltage_type volt)
  {
	  DIO_Port_type port = pin/8 ;
	  u8 pin_num =pin % 8;
	  en_dioError_t error= DIO_OK;
 6e2:	80 e0       	ldi	r24, 0x00	; 0
				  CLR_BIT(PORTC,pin_num);
				  break;
				  case PD:

				  CLR_BIT(PORTD,pin_num);
				  break;
 6e4:	08 95       	ret
			  }

			  break;

			  default:
			  error = WRONG_VALUE;
 6e6:	83 e0       	ldi	r24, 0x03	; 3
 6e8:	08 95       	ret
				  case PD:

				  SET_BIT(PORTD,pin_num);
				  break;
				  default:
				  error = WRONG_PORT_NUMBER;
 6ea:	81 e0       	ldi	r24, 0x01	; 1
 6ec:	08 95       	ret
				  case PD:

				  CLR_BIT(PORTD,pin_num);
				  break;
				  default:
				  error = WRONG_PORT_NUMBER;
 6ee:	81 e0       	ldi	r24, 0x01	; 1
	  {
		  error = WRONG_PIN_NUMBER;
	  }
	  return error;

  }
 6f0:	08 95       	ret

000006f2 <__vector_1>:




ISR(INT0_vect)
{  
 6f2:	1f 92       	push	r1
 6f4:	0f 92       	push	r0
 6f6:	0f b6       	in	r0, 0x3f	; 63
 6f8:	0f 92       	push	r0
 6fa:	11 24       	eor	r1, r1
 6fc:	2f 93       	push	r18
 6fe:	3f 93       	push	r19
 700:	4f 93       	push	r20
 702:	5f 93       	push	r21
 704:	6f 93       	push	r22
 706:	7f 93       	push	r23
 708:	8f 93       	push	r24
 70a:	9f 93       	push	r25
 70c:	af 93       	push	r26
 70e:	bf 93       	push	r27
 710:	ef 93       	push	r30
 712:	ff 93       	push	r31
	if (INT0_Fptr!=NULLPTR)
 714:	e0 91 64 00 	lds	r30, 0x0064	; 0x800064 <INT0_Fptr>
 718:	f0 91 65 00 	lds	r31, 0x0065	; 0x800065 <INT0_Fptr+0x1>
 71c:	30 97       	sbiw	r30, 0x00	; 0
 71e:	09 f0       	breq	.+2      	; 0x722 <__vector_1+0x30>
	{
		INT0_Fptr();
 720:	09 95       	icall
	}
}
 722:	ff 91       	pop	r31
 724:	ef 91       	pop	r30
 726:	bf 91       	pop	r27
 728:	af 91       	pop	r26
 72a:	9f 91       	pop	r25
 72c:	8f 91       	pop	r24
 72e:	7f 91       	pop	r23
 730:	6f 91       	pop	r22
 732:	5f 91       	pop	r21
 734:	4f 91       	pop	r20
 736:	3f 91       	pop	r19
 738:	2f 91       	pop	r18
 73a:	0f 90       	pop	r0
 73c:	0f be       	out	0x3f, r0	; 63
 73e:	0f 90       	pop	r0
 740:	1f 90       	pop	r1
 742:	18 95       	reti

00000744 <__vector_2>:
ISR(INT1_vect)
{
 744:	1f 92       	push	r1
 746:	0f 92       	push	r0
 748:	0f b6       	in	r0, 0x3f	; 63
 74a:	0f 92       	push	r0
 74c:	11 24       	eor	r1, r1
 74e:	2f 93       	push	r18
 750:	3f 93       	push	r19
 752:	4f 93       	push	r20
 754:	5f 93       	push	r21
 756:	6f 93       	push	r22
 758:	7f 93       	push	r23
 75a:	8f 93       	push	r24
 75c:	9f 93       	push	r25
 75e:	af 93       	push	r26
 760:	bf 93       	push	r27
 762:	ef 93       	push	r30
 764:	ff 93       	push	r31
	if (INT1_Fptr!=NULLPTR)
 766:	e0 91 62 00 	lds	r30, 0x0062	; 0x800062 <INT1_Fptr>
 76a:	f0 91 63 00 	lds	r31, 0x0063	; 0x800063 <INT1_Fptr+0x1>
 76e:	30 97       	sbiw	r30, 0x00	; 0
 770:	09 f0       	breq	.+2      	; 0x774 <__vector_2+0x30>
	{
		INT1_Fptr();
 772:	09 95       	icall
	}
}
 774:	ff 91       	pop	r31
 776:	ef 91       	pop	r30
 778:	bf 91       	pop	r27
 77a:	af 91       	pop	r26
 77c:	9f 91       	pop	r25
 77e:	8f 91       	pop	r24
 780:	7f 91       	pop	r23
 782:	6f 91       	pop	r22
 784:	5f 91       	pop	r21
 786:	4f 91       	pop	r20
 788:	3f 91       	pop	r19
 78a:	2f 91       	pop	r18
 78c:	0f 90       	pop	r0
 78e:	0f be       	out	0x3f, r0	; 63
 790:	0f 90       	pop	r0
 792:	1f 90       	pop	r1
 794:	18 95       	reti

00000796 <__vector_3>:
ISR(INT2_vect)
{
 796:	1f 92       	push	r1
 798:	0f 92       	push	r0
 79a:	0f b6       	in	r0, 0x3f	; 63
 79c:	0f 92       	push	r0
 79e:	11 24       	eor	r1, r1
 7a0:	2f 93       	push	r18
 7a2:	3f 93       	push	r19
 7a4:	4f 93       	push	r20
 7a6:	5f 93       	push	r21
 7a8:	6f 93       	push	r22
 7aa:	7f 93       	push	r23
 7ac:	8f 93       	push	r24
 7ae:	9f 93       	push	r25
 7b0:	af 93       	push	r26
 7b2:	bf 93       	push	r27
 7b4:	ef 93       	push	r30
 7b6:	ff 93       	push	r31
	if (INT2_Fptr!=NULLPTR)
 7b8:	e0 91 60 00 	lds	r30, 0x0060	; 0x800060 <__DATA_REGION_ORIGIN__>
 7bc:	f0 91 61 00 	lds	r31, 0x0061	; 0x800061 <__DATA_REGION_ORIGIN__+0x1>
 7c0:	30 97       	sbiw	r30, 0x00	; 0
 7c2:	09 f0       	breq	.+2      	; 0x7c6 <__vector_3+0x30>
	{
		INT2_Fptr();
 7c4:	09 95       	icall
	}
}
 7c6:	ff 91       	pop	r31
 7c8:	ef 91       	pop	r30
 7ca:	bf 91       	pop	r27
 7cc:	af 91       	pop	r26
 7ce:	9f 91       	pop	r25
 7d0:	8f 91       	pop	r24
 7d2:	7f 91       	pop	r23
 7d4:	6f 91       	pop	r22
 7d6:	5f 91       	pop	r21
 7d8:	4f 91       	pop	r20
 7da:	3f 91       	pop	r19
 7dc:	2f 91       	pop	r18
 7de:	0f 90       	pop	r0
 7e0:	0f be       	out	0x3f, r0	; 63
 7e2:	0f 90       	pop	r0
 7e4:	1f 90       	pop	r1
 7e6:	18 95       	reti

000007e8 <waveGen>:
		u16_g_onTime		= ((u32_a_desiredDutyCycle * 256)/100);
		u16_g_offTime	= 256 - u16_g_onTime;
		if (flag == 0)
		{
			TCNT0 = 256 - u16_g_onTime;
			flag = 1;
 7e8:	0f 93       	push	r16
 7ea:	1f 93       	push	r17
 7ec:	86 e0       	ldi	r24, 0x06	; 6
 7ee:	82 bf       	out	0x32, r24	; 50
 7f0:	80 91 66 00 	lds	r24, 0x0066	; 0x800066 <OV.2013>
 7f4:	90 91 67 00 	lds	r25, 0x0067	; 0x800067 <OV.2013+0x1>
 7f8:	a0 91 68 00 	lds	r26, 0x0068	; 0x800068 <OV.2013+0x2>
 7fc:	b0 91 69 00 	lds	r27, 0x0069	; 0x800069 <OV.2013+0x3>
 800:	01 96       	adiw	r24, 0x01	; 1
 802:	a1 1d       	adc	r26, r1
 804:	b1 1d       	adc	r27, r1
 806:	80 93 66 00 	sts	0x0066, r24	; 0x800066 <OV.2013>
 80a:	90 93 67 00 	sts	0x0067, r25	; 0x800067 <OV.2013+0x1>
 80e:	a0 93 68 00 	sts	0x0068, r26	; 0x800068 <OV.2013+0x2>
 812:	b0 93 69 00 	sts	0x0069, r27	; 0x800069 <OV.2013+0x3>
 816:	00 91 6a 00 	lds	r16, 0x006A	; 0x80006a <u32_OFFTicks>
 81a:	10 91 6b 00 	lds	r17, 0x006B	; 0x80006b <u32_OFFTicks+0x1>
 81e:	20 91 6c 00 	lds	r18, 0x006C	; 0x80006c <u32_OFFTicks+0x2>
 822:	30 91 6d 00 	lds	r19, 0x006D	; 0x80006d <u32_OFFTicks+0x3>
 826:	b9 01       	movw	r22, r18
 828:	a8 01       	movw	r20, r16
 82a:	4f 5f       	subi	r20, 0xFF	; 255
 82c:	5f 4f       	sbci	r21, 0xFF	; 255
 82e:	6f 4f       	sbci	r22, 0xFF	; 255
 830:	7f 4f       	sbci	r23, 0xFF	; 255
 832:	84 17       	cp	r24, r20
 834:	95 07       	cpc	r25, r21
 836:	a6 07       	cpc	r26, r22
 838:	b7 07       	cpc	r27, r23
 83a:	29 f4       	brne	.+10     	; 0x846 <__DATA_REGION_LENGTH__+0x46>
 83c:	61 e0       	ldi	r22, 0x01	; 1
 83e:	88 e0       	ldi	r24, 0x08	; 8
 840:	0e 94 e4 02 	call	0x5c8	; 0x5c8 <DIO_writepin>
 844:	21 c0       	rjmp	.+66     	; 0x888 <__stack+0x29>
 846:	40 91 6e 00 	lds	r20, 0x006E	; 0x80006e <u32_ONTicks>
 84a:	50 91 6f 00 	lds	r21, 0x006F	; 0x80006f <u32_ONTicks+0x1>
 84e:	60 91 70 00 	lds	r22, 0x0070	; 0x800070 <u32_ONTicks+0x2>
 852:	70 91 71 00 	lds	r23, 0x0071	; 0x800071 <u32_ONTicks+0x3>
 856:	40 0f       	add	r20, r16
 858:	51 1f       	adc	r21, r17
 85a:	62 1f       	adc	r22, r18
 85c:	73 1f       	adc	r23, r19
 85e:	4e 5f       	subi	r20, 0xFE	; 254
 860:	5f 4f       	sbci	r21, 0xFF	; 255
 862:	6f 4f       	sbci	r22, 0xFF	; 255
 864:	7f 4f       	sbci	r23, 0xFF	; 255
 866:	84 17       	cp	r24, r20
 868:	95 07       	cpc	r25, r21
 86a:	a6 07       	cpc	r26, r22
 86c:	b7 07       	cpc	r27, r23
 86e:	61 f4       	brne	.+24     	; 0x888 <__stack+0x29>
 870:	60 e0       	ldi	r22, 0x00	; 0
 872:	88 e0       	ldi	r24, 0x08	; 8
 874:	0e 94 e4 02 	call	0x5c8	; 0x5c8 <DIO_writepin>
 878:	10 92 66 00 	sts	0x0066, r1	; 0x800066 <OV.2013>
 87c:	10 92 67 00 	sts	0x0067, r1	; 0x800067 <OV.2013+0x1>
 880:	10 92 68 00 	sts	0x0068, r1	; 0x800068 <OV.2013+0x2>
 884:	10 92 69 00 	sts	0x0069, r1	; 0x800069 <OV.2013+0x3>
 888:	1f 91       	pop	r17
 88a:	0f 91       	pop	r16
 88c:	08 95       	ret

0000088e <PWM_set_duty>:




void PWM_set_duty(u8 u8_DutyCycle,u32 u32_Freq)
{
 88e:	8f 92       	push	r8
 890:	9f 92       	push	r9
 892:	af 92       	push	r10
 894:	bf 92       	push	r11
 896:	cf 92       	push	r12
 898:	df 92       	push	r13
 89a:	ef 92       	push	r14
 89c:	ff 92       	push	r15
 89e:	cf 93       	push	r28
 8a0:	c8 2f       	mov	r28, r24
	f64 f64_wavePeriodTime = (f32)1 / u32_Freq*1000000;					         /* The Periodic Time for the Generated Pulse in Seconds */
 8a2:	cb 01       	movw	r24, r22
 8a4:	ba 01       	movw	r22, r20
 8a6:	0e 94 ba 06 	call	0xd74	; 0xd74 <__floatunsisf>
 8aa:	9b 01       	movw	r18, r22
 8ac:	ac 01       	movw	r20, r24
 8ae:	60 e0       	ldi	r22, 0x00	; 0
 8b0:	70 e0       	ldi	r23, 0x00	; 0
 8b2:	80 e8       	ldi	r24, 0x80	; 128
 8b4:	9f e3       	ldi	r25, 0x3F	; 63
 8b6:	0e 94 19 06 	call	0xc32	; 0xc32 <__divsf3>
 8ba:	20 e0       	ldi	r18, 0x00	; 0
 8bc:	34 e2       	ldi	r19, 0x24	; 36
 8be:	44 e7       	ldi	r20, 0x74	; 116
 8c0:	59 e4       	ldi	r21, 0x49	; 73
 8c2:	0e 94 48 07 	call	0xe90	; 0xe90 <__mulsf3>
 8c6:	4b 01       	movw	r8, r22
 8c8:	5c 01       	movw	r10, r24
	f64 f64_waveONTime = (f64_wavePeriodTime*u8_DutyCycle) / 100;		/* The HIGH Level Time in Seconds */
 8ca:	6c 2f       	mov	r22, r28
 8cc:	70 e0       	ldi	r23, 0x00	; 0
 8ce:	80 e0       	ldi	r24, 0x00	; 0
 8d0:	90 e0       	ldi	r25, 0x00	; 0
 8d2:	0e 94 bc 06 	call	0xd78	; 0xd78 <__floatsisf>
 8d6:	a5 01       	movw	r20, r10
 8d8:	94 01       	movw	r18, r8
 8da:	0e 94 48 07 	call	0xe90	; 0xe90 <__mulsf3>
 8de:	20 e0       	ldi	r18, 0x00	; 0
 8e0:	30 e0       	ldi	r19, 0x00	; 0
 8e2:	48 ec       	ldi	r20, 0xC8	; 200
 8e4:	52 e4       	ldi	r21, 0x42	; 66
 8e6:	0e 94 19 06 	call	0xc32	; 0xc32 <__divsf3>
 8ea:	6b 01       	movw	r12, r22
 8ec:	7c 01       	movw	r14, r24
	f64 f64_waveOFFTime = f64_wavePeriodTime - f64_waveONTime;		   /* The LOW Level Time in Seconds */
 8ee:	9b 01       	movw	r18, r22
 8f0:	ac 01       	movw	r20, r24
 8f2:	c5 01       	movw	r24, r10
 8f4:	b4 01       	movw	r22, r8
 8f6:	0e 94 ac 05 	call	0xb58	; 0xb58 <__subsf3>
 8fa:	4b 01       	movw	r8, r22
 8fc:	5c 01       	movw	r10, r24
	f64 f64_oneTickTime = 0.0;
	f64_oneTickTime = (f64) (((f64)PWM_PRESCALER/(f64)F_CPU)*1000000);   //1u at 8,8
	//LCD_WriteNumber(f64_wavePeriodTime) ;
	f64 f64_max_time = (256*f64_oneTickTime); //256u
	//LCD_WriteNumber( f64_max_time) ;
	u32_ONTicks     =  f64_waveONTime/(f64_max_time-6);
 8fe:	20 e0       	ldi	r18, 0x00	; 0
 900:	30 e0       	ldi	r19, 0x00	; 0
 902:	4a e7       	ldi	r20, 0x7A	; 122
 904:	53 e4       	ldi	r21, 0x43	; 67
 906:	c7 01       	movw	r24, r14
 908:	b6 01       	movw	r22, r12
 90a:	0e 94 19 06 	call	0xc32	; 0xc32 <__divsf3>
 90e:	0e 94 8b 06 	call	0xd16	; 0xd16 <__fixunssfsi>
 912:	60 93 6e 00 	sts	0x006E, r22	; 0x80006e <u32_ONTicks>
 916:	70 93 6f 00 	sts	0x006F, r23	; 0x80006f <u32_ONTicks+0x1>
 91a:	80 93 70 00 	sts	0x0070, r24	; 0x800070 <u32_ONTicks+0x2>
 91e:	90 93 71 00 	sts	0x0071, r25	; 0x800071 <u32_ONTicks+0x3>
	LCD_WriteNumber(u32_ONTicks) ;
 922:	0e 94 4c 01 	call	0x298	; 0x298 <LCD_WriteNumber>
	u32_OFFTicks    =  f64_waveOFFTime/(f64_max_time-6);
 926:	20 e0       	ldi	r18, 0x00	; 0
 928:	30 e0       	ldi	r19, 0x00	; 0
 92a:	4a e7       	ldi	r20, 0x7A	; 122
 92c:	53 e4       	ldi	r21, 0x43	; 67
 92e:	c5 01       	movw	r24, r10
 930:	b4 01       	movw	r22, r8
 932:	0e 94 19 06 	call	0xc32	; 0xc32 <__divsf3>
 936:	0e 94 8b 06 	call	0xd16	; 0xd16 <__fixunssfsi>
 93a:	60 93 6a 00 	sts	0x006A, r22	; 0x80006a <u32_OFFTicks>
 93e:	70 93 6b 00 	sts	0x006B, r23	; 0x80006b <u32_OFFTicks+0x1>
 942:	80 93 6c 00 	sts	0x006C, r24	; 0x80006c <u32_OFFTicks+0x2>
 946:	90 93 6d 00 	sts	0x006D, r25	; 0x80006d <u32_OFFTicks+0x3>
	LCD_SetCursor(1,0);
 94a:	60 e0       	ldi	r22, 0x00	; 0
 94c:	81 e0       	ldi	r24, 0x01	; 1
 94e:	0e 94 3e 01 	call	0x27c	; 0x27c <LCD_SetCursor>
	LCD_WriteNumber(u32_OFFTicks) ;
 952:	60 91 6a 00 	lds	r22, 0x006A	; 0x80006a <u32_OFFTicks>
 956:	70 91 6b 00 	lds	r23, 0x006B	; 0x80006b <u32_OFFTicks+0x1>
 95a:	80 91 6c 00 	lds	r24, 0x006C	; 0x80006c <u32_OFFTicks+0x2>
 95e:	90 91 6d 00 	lds	r25, 0x006D	; 0x80006d <u32_OFFTicks+0x3>
 962:	0e 94 4c 01 	call	0x298	; 0x298 <LCD_WriteNumber>
	DIO_writepin(PINB0,HIGH);
 966:	61 e0       	ldi	r22, 0x01	; 1
 968:	88 e0       	ldi	r24, 0x08	; 8
 96a:	0e 94 e4 02 	call	0x5c8	; 0x5c8 <DIO_writepin>
}
 96e:	cf 91       	pop	r28
 970:	ff 90       	pop	r15
 972:	ef 90       	pop	r14
 974:	df 90       	pop	r13
 976:	cf 90       	pop	r12
 978:	bf 90       	pop	r11
 97a:	af 90       	pop	r10
 97c:	9f 90       	pop	r9
 97e:	8f 90       	pop	r8
 980:	08 95       	ret

00000982 <pwm_init>:



void pwm_init()
{
	DIO_initpin(PINB0,OUTPUT);
 982:	60 e0       	ldi	r22, 0x00	; 0
 984:	88 e0       	ldi	r24, 0x08	; 8
 986:	0e 94 d3 01 	call	0x3a6	; 0x3a6 <DIO_initpin>
	TIMER0_Init(TIMER0_NORMAL_MODE);
 98a:	80 e0       	ldi	r24, 0x00	; 0
 98c:	0e 94 cf 04 	call	0x99e	; 0x99e <TIMER0_Init>
	TIMER0_OV_InterruptEnable();
 990:	0e 94 2d 05 	call	0xa5a	; 0xa5a <TIMER0_OV_InterruptEnable>
	TIMER0_OV_SetCallBack(waveGen);
 994:	84 ef       	ldi	r24, 0xF4	; 244
 996:	93 e0       	ldi	r25, 0x03	; 3
 998:	0e 94 ff 04 	call	0x9fe	; 0x9fe <TIMER0_OV_SetCallBack>
 99c:	08 95       	ret

0000099e <TIMER0_Init>:
{
	if(Timer1_OCA_Fptr!=NULLPTR)
	{
		Timer1_OCA_Fptr();
	}
}
 99e:	81 30       	cpi	r24, 0x01	; 1
 9a0:	69 f0       	breq	.+26     	; 0x9bc <TIMER0_Init+0x1e>
 9a2:	28 f0       	brcs	.+10     	; 0x9ae <TIMER0_Init+0x10>
 9a4:	82 30       	cpi	r24, 0x02	; 2
 9a6:	89 f0       	breq	.+34     	; 0x9ca <TIMER0_Init+0x2c>
 9a8:	83 30       	cpi	r24, 0x03	; 3
 9aa:	b1 f0       	breq	.+44     	; 0x9d8 <TIMER0_Init+0x3a>
 9ac:	08 95       	ret
 9ae:	83 b7       	in	r24, 0x33	; 51
 9b0:	8f 7b       	andi	r24, 0xBF	; 191
 9b2:	83 bf       	out	0x33, r24	; 51
 9b4:	83 b7       	in	r24, 0x33	; 51
 9b6:	87 7f       	andi	r24, 0xF7	; 247
 9b8:	83 bf       	out	0x33, r24	; 51
 9ba:	08 95       	ret
 9bc:	83 b7       	in	r24, 0x33	; 51
 9be:	80 64       	ori	r24, 0x40	; 64
 9c0:	83 bf       	out	0x33, r24	; 51
 9c2:	83 b7       	in	r24, 0x33	; 51
 9c4:	87 7f       	andi	r24, 0xF7	; 247
 9c6:	83 bf       	out	0x33, r24	; 51
 9c8:	08 95       	ret
 9ca:	83 b7       	in	r24, 0x33	; 51
 9cc:	8f 7b       	andi	r24, 0xBF	; 191
 9ce:	83 bf       	out	0x33, r24	; 51
 9d0:	83 b7       	in	r24, 0x33	; 51
 9d2:	88 60       	ori	r24, 0x08	; 8
 9d4:	83 bf       	out	0x33, r24	; 51
 9d6:	08 95       	ret
 9d8:	83 b7       	in	r24, 0x33	; 51
 9da:	80 64       	ori	r24, 0x40	; 64
 9dc:	83 bf       	out	0x33, r24	; 51
 9de:	83 b7       	in	r24, 0x33	; 51
 9e0:	88 60       	ori	r24, 0x08	; 8
 9e2:	83 bf       	out	0x33, r24	; 51
 9e4:	08 95       	ret

000009e6 <timer_start>:
 9e6:	88 30       	cpi	r24, 0x08	; 8
 9e8:	40 f4       	brcc	.+16     	; 0x9fa <timer_start+0x14>
 9ea:	93 b7       	in	r25, 0x33	; 51
 9ec:	98 7f       	andi	r25, 0xF8	; 248
 9ee:	93 bf       	out	0x33, r25	; 51
 9f0:	93 b7       	in	r25, 0x33	; 51
 9f2:	89 2b       	or	r24, r25
 9f4:	83 bf       	out	0x33, r24	; 51
 9f6:	80 e0       	ldi	r24, 0x00	; 0
 9f8:	08 95       	ret
 9fa:	81 e0       	ldi	r24, 0x01	; 1
 9fc:	08 95       	ret

000009fe <TIMER0_OV_SetCallBack>:
 9fe:	90 93 79 00 	sts	0x0079, r25	; 0x800079 <Timer0_OVF_Fptr+0x1>
 a02:	80 93 78 00 	sts	0x0078, r24	; 0x800078 <Timer0_OVF_Fptr>
 a06:	08 95       	ret

00000a08 <__vector_11>:
 a08:	1f 92       	push	r1
 a0a:	0f 92       	push	r0
 a0c:	0f b6       	in	r0, 0x3f	; 63
 a0e:	0f 92       	push	r0
 a10:	11 24       	eor	r1, r1
 a12:	2f 93       	push	r18
 a14:	3f 93       	push	r19
 a16:	4f 93       	push	r20
 a18:	5f 93       	push	r21
 a1a:	6f 93       	push	r22
 a1c:	7f 93       	push	r23
 a1e:	8f 93       	push	r24
 a20:	9f 93       	push	r25
 a22:	af 93       	push	r26
 a24:	bf 93       	push	r27
 a26:	ef 93       	push	r30
 a28:	ff 93       	push	r31
 a2a:	e0 91 78 00 	lds	r30, 0x0078	; 0x800078 <Timer0_OVF_Fptr>
 a2e:	f0 91 79 00 	lds	r31, 0x0079	; 0x800079 <Timer0_OVF_Fptr+0x1>
 a32:	30 97       	sbiw	r30, 0x00	; 0
 a34:	09 f0       	breq	.+2      	; 0xa38 <__vector_11+0x30>
 a36:	09 95       	icall
 a38:	ff 91       	pop	r31
 a3a:	ef 91       	pop	r30
 a3c:	bf 91       	pop	r27
 a3e:	af 91       	pop	r26
 a40:	9f 91       	pop	r25
 a42:	8f 91       	pop	r24
 a44:	7f 91       	pop	r23
 a46:	6f 91       	pop	r22
 a48:	5f 91       	pop	r21
 a4a:	4f 91       	pop	r20
 a4c:	3f 91       	pop	r19
 a4e:	2f 91       	pop	r18
 a50:	0f 90       	pop	r0
 a52:	0f be       	out	0x3f, r0	; 63
 a54:	0f 90       	pop	r0
 a56:	1f 90       	pop	r1
 a58:	18 95       	reti

00000a5a <TIMER0_OV_InterruptEnable>:
 a5a:	89 b7       	in	r24, 0x39	; 57
 a5c:	81 60       	ori	r24, 0x01	; 1
 a5e:	89 bf       	out	0x39, r24	; 57
 a60:	08 95       	ret

00000a62 <__vector_9>:
 a62:	1f 92       	push	r1
 a64:	0f 92       	push	r0
 a66:	0f b6       	in	r0, 0x3f	; 63
 a68:	0f 92       	push	r0
 a6a:	11 24       	eor	r1, r1
 a6c:	2f 93       	push	r18
 a6e:	3f 93       	push	r19
 a70:	4f 93       	push	r20
 a72:	5f 93       	push	r21
 a74:	6f 93       	push	r22
 a76:	7f 93       	push	r23
 a78:	8f 93       	push	r24
 a7a:	9f 93       	push	r25
 a7c:	af 93       	push	r26
 a7e:	bf 93       	push	r27
 a80:	ef 93       	push	r30
 a82:	ff 93       	push	r31
 a84:	e0 91 76 00 	lds	r30, 0x0076	; 0x800076 <Timer1_OVF_Fptr>
 a88:	f0 91 77 00 	lds	r31, 0x0077	; 0x800077 <Timer1_OVF_Fptr+0x1>
 a8c:	30 97       	sbiw	r30, 0x00	; 0
 a8e:	09 f0       	breq	.+2      	; 0xa92 <__vector_9+0x30>
 a90:	09 95       	icall
 a92:	ff 91       	pop	r31
 a94:	ef 91       	pop	r30
 a96:	bf 91       	pop	r27
 a98:	af 91       	pop	r26
 a9a:	9f 91       	pop	r25
 a9c:	8f 91       	pop	r24
 a9e:	7f 91       	pop	r23
 aa0:	6f 91       	pop	r22
 aa2:	5f 91       	pop	r21
 aa4:	4f 91       	pop	r20
 aa6:	3f 91       	pop	r19
 aa8:	2f 91       	pop	r18
 aaa:	0f 90       	pop	r0
 aac:	0f be       	out	0x3f, r0	; 63
 aae:	0f 90       	pop	r0
 ab0:	1f 90       	pop	r1
 ab2:	18 95       	reti

00000ab4 <__vector_8>:
ISR(TIMER1_OCB_vect)
{
 ab4:	1f 92       	push	r1
 ab6:	0f 92       	push	r0
 ab8:	0f b6       	in	r0, 0x3f	; 63
 aba:	0f 92       	push	r0
 abc:	11 24       	eor	r1, r1
 abe:	2f 93       	push	r18
 ac0:	3f 93       	push	r19
 ac2:	4f 93       	push	r20
 ac4:	5f 93       	push	r21
 ac6:	6f 93       	push	r22
 ac8:	7f 93       	push	r23
 aca:	8f 93       	push	r24
 acc:	9f 93       	push	r25
 ace:	af 93       	push	r26
 ad0:	bf 93       	push	r27
 ad2:	ef 93       	push	r30
 ad4:	ff 93       	push	r31
	if(Timer1_OCB_Fptr!=NULLPTR)
 ad6:	e0 91 74 00 	lds	r30, 0x0074	; 0x800074 <Timer1_OCB_Fptr>
 ada:	f0 91 75 00 	lds	r31, 0x0075	; 0x800075 <Timer1_OCB_Fptr+0x1>
 ade:	30 97       	sbiw	r30, 0x00	; 0
 ae0:	09 f0       	breq	.+2      	; 0xae4 <__vector_8+0x30>
	{
		Timer1_OCB_Fptr();
 ae2:	09 95       	icall
	}
}
 ae4:	ff 91       	pop	r31
 ae6:	ef 91       	pop	r30
 ae8:	bf 91       	pop	r27
 aea:	af 91       	pop	r26
 aec:	9f 91       	pop	r25
 aee:	8f 91       	pop	r24
 af0:	7f 91       	pop	r23
 af2:	6f 91       	pop	r22
 af4:	5f 91       	pop	r21
 af6:	4f 91       	pop	r20
 af8:	3f 91       	pop	r19
 afa:	2f 91       	pop	r18
 afc:	0f 90       	pop	r0
 afe:	0f be       	out	0x3f, r0	; 63
 b00:	0f 90       	pop	r0
 b02:	1f 90       	pop	r1
 b04:	18 95       	reti

00000b06 <__vector_6>:
ISR(TIMER1_ICU_vect)
{
 b06:	1f 92       	push	r1
 b08:	0f 92       	push	r0
 b0a:	0f b6       	in	r0, 0x3f	; 63
 b0c:	0f 92       	push	r0
 b0e:	11 24       	eor	r1, r1
 b10:	2f 93       	push	r18
 b12:	3f 93       	push	r19
 b14:	4f 93       	push	r20
 b16:	5f 93       	push	r21
 b18:	6f 93       	push	r22
 b1a:	7f 93       	push	r23
 b1c:	8f 93       	push	r24
 b1e:	9f 93       	push	r25
 b20:	af 93       	push	r26
 b22:	bf 93       	push	r27
 b24:	ef 93       	push	r30
 b26:	ff 93       	push	r31
	if(Timer1_ICU_Fptr!=NULLPTR)
 b28:	e0 91 72 00 	lds	r30, 0x0072	; 0x800072 <Timer1_ICU_Fptr>
 b2c:	f0 91 73 00 	lds	r31, 0x0073	; 0x800073 <Timer1_ICU_Fptr+0x1>
 b30:	30 97       	sbiw	r30, 0x00	; 0
 b32:	09 f0       	breq	.+2      	; 0xb36 <__vector_6+0x30>
	{
		Timer1_ICU_Fptr();
 b34:	09 95       	icall
	}
 b36:	ff 91       	pop	r31
 b38:	ef 91       	pop	r30
 b3a:	bf 91       	pop	r27
 b3c:	af 91       	pop	r26
 b3e:	9f 91       	pop	r25
 b40:	8f 91       	pop	r24
 b42:	7f 91       	pop	r23
 b44:	6f 91       	pop	r22
 b46:	5f 91       	pop	r21
 b48:	4f 91       	pop	r20
 b4a:	3f 91       	pop	r19
 b4c:	2f 91       	pop	r18
 b4e:	0f 90       	pop	r0
 b50:	0f be       	out	0x3f, r0	; 63
 b52:	0f 90       	pop	r0
 b54:	1f 90       	pop	r1
 b56:	18 95       	reti

00000b58 <__subsf3>:
 b58:	50 58       	subi	r21, 0x80	; 128

00000b5a <__addsf3>:
 b5a:	bb 27       	eor	r27, r27
 b5c:	aa 27       	eor	r26, r26
 b5e:	0e 94 c4 05 	call	0xb88	; 0xb88 <__addsf3x>
 b62:	0c 94 0e 07 	jmp	0xe1c	; 0xe1c <__fp_round>
 b66:	0e 94 00 07 	call	0xe00	; 0xe00 <__fp_pscA>
 b6a:	38 f0       	brcs	.+14     	; 0xb7a <__addsf3+0x20>
 b6c:	0e 94 07 07 	call	0xe0e	; 0xe0e <__fp_pscB>
 b70:	20 f0       	brcs	.+8      	; 0xb7a <__addsf3+0x20>
 b72:	39 f4       	brne	.+14     	; 0xb82 <__addsf3+0x28>
 b74:	9f 3f       	cpi	r25, 0xFF	; 255
 b76:	19 f4       	brne	.+6      	; 0xb7e <__addsf3+0x24>
 b78:	26 f4       	brtc	.+8      	; 0xb82 <__addsf3+0x28>
 b7a:	0c 94 fd 06 	jmp	0xdfa	; 0xdfa <__fp_nan>
 b7e:	0e f4       	brtc	.+2      	; 0xb82 <__addsf3+0x28>
 b80:	e0 95       	com	r30
 b82:	e7 fb       	bst	r30, 7
 b84:	0c 94 f7 06 	jmp	0xdee	; 0xdee <__fp_inf>

00000b88 <__addsf3x>:
 b88:	e9 2f       	mov	r30, r25
 b8a:	0e 94 1f 07 	call	0xe3e	; 0xe3e <__fp_split3>
 b8e:	58 f3       	brcs	.-42     	; 0xb66 <__addsf3+0xc>
 b90:	ba 17       	cp	r27, r26
 b92:	62 07       	cpc	r22, r18
 b94:	73 07       	cpc	r23, r19
 b96:	84 07       	cpc	r24, r20
 b98:	95 07       	cpc	r25, r21
 b9a:	20 f0       	brcs	.+8      	; 0xba4 <__addsf3x+0x1c>
 b9c:	79 f4       	brne	.+30     	; 0xbbc <__addsf3x+0x34>
 b9e:	a6 f5       	brtc	.+104    	; 0xc08 <__addsf3x+0x80>
 ba0:	0c 94 41 07 	jmp	0xe82	; 0xe82 <__fp_zero>
 ba4:	0e f4       	brtc	.+2      	; 0xba8 <__addsf3x+0x20>
 ba6:	e0 95       	com	r30
 ba8:	0b 2e       	mov	r0, r27
 baa:	ba 2f       	mov	r27, r26
 bac:	a0 2d       	mov	r26, r0
 bae:	0b 01       	movw	r0, r22
 bb0:	b9 01       	movw	r22, r18
 bb2:	90 01       	movw	r18, r0
 bb4:	0c 01       	movw	r0, r24
 bb6:	ca 01       	movw	r24, r20
 bb8:	a0 01       	movw	r20, r0
 bba:	11 24       	eor	r1, r1
 bbc:	ff 27       	eor	r31, r31
 bbe:	59 1b       	sub	r21, r25
 bc0:	99 f0       	breq	.+38     	; 0xbe8 <__addsf3x+0x60>
 bc2:	59 3f       	cpi	r21, 0xF9	; 249
 bc4:	50 f4       	brcc	.+20     	; 0xbda <__addsf3x+0x52>
 bc6:	50 3e       	cpi	r21, 0xE0	; 224
 bc8:	68 f1       	brcs	.+90     	; 0xc24 <__addsf3x+0x9c>
 bca:	1a 16       	cp	r1, r26
 bcc:	f0 40       	sbci	r31, 0x00	; 0
 bce:	a2 2f       	mov	r26, r18
 bd0:	23 2f       	mov	r18, r19
 bd2:	34 2f       	mov	r19, r20
 bd4:	44 27       	eor	r20, r20
 bd6:	58 5f       	subi	r21, 0xF8	; 248
 bd8:	f3 cf       	rjmp	.-26     	; 0xbc0 <__addsf3x+0x38>
 bda:	46 95       	lsr	r20
 bdc:	37 95       	ror	r19
 bde:	27 95       	ror	r18
 be0:	a7 95       	ror	r26
 be2:	f0 40       	sbci	r31, 0x00	; 0
 be4:	53 95       	inc	r21
 be6:	c9 f7       	brne	.-14     	; 0xbda <__addsf3x+0x52>
 be8:	7e f4       	brtc	.+30     	; 0xc08 <__addsf3x+0x80>
 bea:	1f 16       	cp	r1, r31
 bec:	ba 0b       	sbc	r27, r26
 bee:	62 0b       	sbc	r22, r18
 bf0:	73 0b       	sbc	r23, r19
 bf2:	84 0b       	sbc	r24, r20
 bf4:	ba f0       	brmi	.+46     	; 0xc24 <__addsf3x+0x9c>
 bf6:	91 50       	subi	r25, 0x01	; 1
 bf8:	a1 f0       	breq	.+40     	; 0xc22 <__addsf3x+0x9a>
 bfa:	ff 0f       	add	r31, r31
 bfc:	bb 1f       	adc	r27, r27
 bfe:	66 1f       	adc	r22, r22
 c00:	77 1f       	adc	r23, r23
 c02:	88 1f       	adc	r24, r24
 c04:	c2 f7       	brpl	.-16     	; 0xbf6 <__addsf3x+0x6e>
 c06:	0e c0       	rjmp	.+28     	; 0xc24 <__addsf3x+0x9c>
 c08:	ba 0f       	add	r27, r26
 c0a:	62 1f       	adc	r22, r18
 c0c:	73 1f       	adc	r23, r19
 c0e:	84 1f       	adc	r24, r20
 c10:	48 f4       	brcc	.+18     	; 0xc24 <__addsf3x+0x9c>
 c12:	87 95       	ror	r24
 c14:	77 95       	ror	r23
 c16:	67 95       	ror	r22
 c18:	b7 95       	ror	r27
 c1a:	f7 95       	ror	r31
 c1c:	9e 3f       	cpi	r25, 0xFE	; 254
 c1e:	08 f0       	brcs	.+2      	; 0xc22 <__addsf3x+0x9a>
 c20:	b0 cf       	rjmp	.-160    	; 0xb82 <__addsf3+0x28>
 c22:	93 95       	inc	r25
 c24:	88 0f       	add	r24, r24
 c26:	08 f0       	brcs	.+2      	; 0xc2a <__addsf3x+0xa2>
 c28:	99 27       	eor	r25, r25
 c2a:	ee 0f       	add	r30, r30
 c2c:	97 95       	ror	r25
 c2e:	87 95       	ror	r24
 c30:	08 95       	ret

00000c32 <__divsf3>:
 c32:	0e 94 2d 06 	call	0xc5a	; 0xc5a <__divsf3x>
 c36:	0c 94 0e 07 	jmp	0xe1c	; 0xe1c <__fp_round>
 c3a:	0e 94 07 07 	call	0xe0e	; 0xe0e <__fp_pscB>
 c3e:	58 f0       	brcs	.+22     	; 0xc56 <__divsf3+0x24>
 c40:	0e 94 00 07 	call	0xe00	; 0xe00 <__fp_pscA>
 c44:	40 f0       	brcs	.+16     	; 0xc56 <__divsf3+0x24>
 c46:	29 f4       	brne	.+10     	; 0xc52 <__divsf3+0x20>
 c48:	5f 3f       	cpi	r21, 0xFF	; 255
 c4a:	29 f0       	breq	.+10     	; 0xc56 <__divsf3+0x24>
 c4c:	0c 94 f7 06 	jmp	0xdee	; 0xdee <__fp_inf>
 c50:	51 11       	cpse	r21, r1
 c52:	0c 94 42 07 	jmp	0xe84	; 0xe84 <__fp_szero>
 c56:	0c 94 fd 06 	jmp	0xdfa	; 0xdfa <__fp_nan>

00000c5a <__divsf3x>:
 c5a:	0e 94 1f 07 	call	0xe3e	; 0xe3e <__fp_split3>
 c5e:	68 f3       	brcs	.-38     	; 0xc3a <__divsf3+0x8>

00000c60 <__divsf3_pse>:
 c60:	99 23       	and	r25, r25
 c62:	b1 f3       	breq	.-20     	; 0xc50 <__divsf3+0x1e>
 c64:	55 23       	and	r21, r21
 c66:	91 f3       	breq	.-28     	; 0xc4c <__divsf3+0x1a>
 c68:	95 1b       	sub	r25, r21
 c6a:	55 0b       	sbc	r21, r21
 c6c:	bb 27       	eor	r27, r27
 c6e:	aa 27       	eor	r26, r26
 c70:	62 17       	cp	r22, r18
 c72:	73 07       	cpc	r23, r19
 c74:	84 07       	cpc	r24, r20
 c76:	38 f0       	brcs	.+14     	; 0xc86 <__divsf3_pse+0x26>
 c78:	9f 5f       	subi	r25, 0xFF	; 255
 c7a:	5f 4f       	sbci	r21, 0xFF	; 255
 c7c:	22 0f       	add	r18, r18
 c7e:	33 1f       	adc	r19, r19
 c80:	44 1f       	adc	r20, r20
 c82:	aa 1f       	adc	r26, r26
 c84:	a9 f3       	breq	.-22     	; 0xc70 <__divsf3_pse+0x10>
 c86:	35 d0       	rcall	.+106    	; 0xcf2 <__divsf3_pse+0x92>
 c88:	0e 2e       	mov	r0, r30
 c8a:	3a f0       	brmi	.+14     	; 0xc9a <__divsf3_pse+0x3a>
 c8c:	e0 e8       	ldi	r30, 0x80	; 128
 c8e:	32 d0       	rcall	.+100    	; 0xcf4 <__divsf3_pse+0x94>
 c90:	91 50       	subi	r25, 0x01	; 1
 c92:	50 40       	sbci	r21, 0x00	; 0
 c94:	e6 95       	lsr	r30
 c96:	00 1c       	adc	r0, r0
 c98:	ca f7       	brpl	.-14     	; 0xc8c <__divsf3_pse+0x2c>
 c9a:	2b d0       	rcall	.+86     	; 0xcf2 <__divsf3_pse+0x92>
 c9c:	fe 2f       	mov	r31, r30
 c9e:	29 d0       	rcall	.+82     	; 0xcf2 <__divsf3_pse+0x92>
 ca0:	66 0f       	add	r22, r22
 ca2:	77 1f       	adc	r23, r23
 ca4:	88 1f       	adc	r24, r24
 ca6:	bb 1f       	adc	r27, r27
 ca8:	26 17       	cp	r18, r22
 caa:	37 07       	cpc	r19, r23
 cac:	48 07       	cpc	r20, r24
 cae:	ab 07       	cpc	r26, r27
 cb0:	b0 e8       	ldi	r27, 0x80	; 128
 cb2:	09 f0       	breq	.+2      	; 0xcb6 <__divsf3_pse+0x56>
 cb4:	bb 0b       	sbc	r27, r27
 cb6:	80 2d       	mov	r24, r0
 cb8:	bf 01       	movw	r22, r30
 cba:	ff 27       	eor	r31, r31
 cbc:	93 58       	subi	r25, 0x83	; 131
 cbe:	5f 4f       	sbci	r21, 0xFF	; 255
 cc0:	3a f0       	brmi	.+14     	; 0xcd0 <__divsf3_pse+0x70>
 cc2:	9e 3f       	cpi	r25, 0xFE	; 254
 cc4:	51 05       	cpc	r21, r1
 cc6:	78 f0       	brcs	.+30     	; 0xce6 <__divsf3_pse+0x86>
 cc8:	0c 94 f7 06 	jmp	0xdee	; 0xdee <__fp_inf>
 ccc:	0c 94 42 07 	jmp	0xe84	; 0xe84 <__fp_szero>
 cd0:	5f 3f       	cpi	r21, 0xFF	; 255
 cd2:	e4 f3       	brlt	.-8      	; 0xccc <__divsf3_pse+0x6c>
 cd4:	98 3e       	cpi	r25, 0xE8	; 232
 cd6:	d4 f3       	brlt	.-12     	; 0xccc <__divsf3_pse+0x6c>
 cd8:	86 95       	lsr	r24
 cda:	77 95       	ror	r23
 cdc:	67 95       	ror	r22
 cde:	b7 95       	ror	r27
 ce0:	f7 95       	ror	r31
 ce2:	9f 5f       	subi	r25, 0xFF	; 255
 ce4:	c9 f7       	brne	.-14     	; 0xcd8 <__divsf3_pse+0x78>
 ce6:	88 0f       	add	r24, r24
 ce8:	91 1d       	adc	r25, r1
 cea:	96 95       	lsr	r25
 cec:	87 95       	ror	r24
 cee:	97 f9       	bld	r25, 7
 cf0:	08 95       	ret
 cf2:	e1 e0       	ldi	r30, 0x01	; 1
 cf4:	66 0f       	add	r22, r22
 cf6:	77 1f       	adc	r23, r23
 cf8:	88 1f       	adc	r24, r24
 cfa:	bb 1f       	adc	r27, r27
 cfc:	62 17       	cp	r22, r18
 cfe:	73 07       	cpc	r23, r19
 d00:	84 07       	cpc	r24, r20
 d02:	ba 07       	cpc	r27, r26
 d04:	20 f0       	brcs	.+8      	; 0xd0e <__divsf3_pse+0xae>
 d06:	62 1b       	sub	r22, r18
 d08:	73 0b       	sbc	r23, r19
 d0a:	84 0b       	sbc	r24, r20
 d0c:	ba 0b       	sbc	r27, r26
 d0e:	ee 1f       	adc	r30, r30
 d10:	88 f7       	brcc	.-30     	; 0xcf4 <__divsf3_pse+0x94>
 d12:	e0 95       	com	r30
 d14:	08 95       	ret

00000d16 <__fixunssfsi>:
 d16:	0e 94 27 07 	call	0xe4e	; 0xe4e <__fp_splitA>
 d1a:	88 f0       	brcs	.+34     	; 0xd3e <__fixunssfsi+0x28>
 d1c:	9f 57       	subi	r25, 0x7F	; 127
 d1e:	98 f0       	brcs	.+38     	; 0xd46 <__fixunssfsi+0x30>
 d20:	b9 2f       	mov	r27, r25
 d22:	99 27       	eor	r25, r25
 d24:	b7 51       	subi	r27, 0x17	; 23
 d26:	b0 f0       	brcs	.+44     	; 0xd54 <__fixunssfsi+0x3e>
 d28:	e1 f0       	breq	.+56     	; 0xd62 <__fixunssfsi+0x4c>
 d2a:	66 0f       	add	r22, r22
 d2c:	77 1f       	adc	r23, r23
 d2e:	88 1f       	adc	r24, r24
 d30:	99 1f       	adc	r25, r25
 d32:	1a f0       	brmi	.+6      	; 0xd3a <__fixunssfsi+0x24>
 d34:	ba 95       	dec	r27
 d36:	c9 f7       	brne	.-14     	; 0xd2a <__fixunssfsi+0x14>
 d38:	14 c0       	rjmp	.+40     	; 0xd62 <__fixunssfsi+0x4c>
 d3a:	b1 30       	cpi	r27, 0x01	; 1
 d3c:	91 f0       	breq	.+36     	; 0xd62 <__fixunssfsi+0x4c>
 d3e:	0e 94 41 07 	call	0xe82	; 0xe82 <__fp_zero>
 d42:	b1 e0       	ldi	r27, 0x01	; 1
 d44:	08 95       	ret
 d46:	0c 94 41 07 	jmp	0xe82	; 0xe82 <__fp_zero>
 d4a:	67 2f       	mov	r22, r23
 d4c:	78 2f       	mov	r23, r24
 d4e:	88 27       	eor	r24, r24
 d50:	b8 5f       	subi	r27, 0xF8	; 248
 d52:	39 f0       	breq	.+14     	; 0xd62 <__fixunssfsi+0x4c>
 d54:	b9 3f       	cpi	r27, 0xF9	; 249
 d56:	cc f3       	brlt	.-14     	; 0xd4a <__fixunssfsi+0x34>
 d58:	86 95       	lsr	r24
 d5a:	77 95       	ror	r23
 d5c:	67 95       	ror	r22
 d5e:	b3 95       	inc	r27
 d60:	d9 f7       	brne	.-10     	; 0xd58 <__fixunssfsi+0x42>
 d62:	3e f4       	brtc	.+14     	; 0xd72 <__fixunssfsi+0x5c>
 d64:	90 95       	com	r25
 d66:	80 95       	com	r24
 d68:	70 95       	com	r23
 d6a:	61 95       	neg	r22
 d6c:	7f 4f       	sbci	r23, 0xFF	; 255
 d6e:	8f 4f       	sbci	r24, 0xFF	; 255
 d70:	9f 4f       	sbci	r25, 0xFF	; 255
 d72:	08 95       	ret

00000d74 <__floatunsisf>:
 d74:	e8 94       	clt
 d76:	09 c0       	rjmp	.+18     	; 0xd8a <__floatsisf+0x12>

00000d78 <__floatsisf>:
 d78:	97 fb       	bst	r25, 7
 d7a:	3e f4       	brtc	.+14     	; 0xd8a <__floatsisf+0x12>
 d7c:	90 95       	com	r25
 d7e:	80 95       	com	r24
 d80:	70 95       	com	r23
 d82:	61 95       	neg	r22
 d84:	7f 4f       	sbci	r23, 0xFF	; 255
 d86:	8f 4f       	sbci	r24, 0xFF	; 255
 d88:	9f 4f       	sbci	r25, 0xFF	; 255
 d8a:	99 23       	and	r25, r25
 d8c:	a9 f0       	breq	.+42     	; 0xdb8 <__floatsisf+0x40>
 d8e:	f9 2f       	mov	r31, r25
 d90:	96 e9       	ldi	r25, 0x96	; 150
 d92:	bb 27       	eor	r27, r27
 d94:	93 95       	inc	r25
 d96:	f6 95       	lsr	r31
 d98:	87 95       	ror	r24
 d9a:	77 95       	ror	r23
 d9c:	67 95       	ror	r22
 d9e:	b7 95       	ror	r27
 da0:	f1 11       	cpse	r31, r1
 da2:	f8 cf       	rjmp	.-16     	; 0xd94 <__floatsisf+0x1c>
 da4:	fa f4       	brpl	.+62     	; 0xde4 <__floatsisf+0x6c>
 da6:	bb 0f       	add	r27, r27
 da8:	11 f4       	brne	.+4      	; 0xdae <__floatsisf+0x36>
 daa:	60 ff       	sbrs	r22, 0
 dac:	1b c0       	rjmp	.+54     	; 0xde4 <__floatsisf+0x6c>
 dae:	6f 5f       	subi	r22, 0xFF	; 255
 db0:	7f 4f       	sbci	r23, 0xFF	; 255
 db2:	8f 4f       	sbci	r24, 0xFF	; 255
 db4:	9f 4f       	sbci	r25, 0xFF	; 255
 db6:	16 c0       	rjmp	.+44     	; 0xde4 <__floatsisf+0x6c>
 db8:	88 23       	and	r24, r24
 dba:	11 f0       	breq	.+4      	; 0xdc0 <__floatsisf+0x48>
 dbc:	96 e9       	ldi	r25, 0x96	; 150
 dbe:	11 c0       	rjmp	.+34     	; 0xde2 <__floatsisf+0x6a>
 dc0:	77 23       	and	r23, r23
 dc2:	21 f0       	breq	.+8      	; 0xdcc <__floatsisf+0x54>
 dc4:	9e e8       	ldi	r25, 0x8E	; 142
 dc6:	87 2f       	mov	r24, r23
 dc8:	76 2f       	mov	r23, r22
 dca:	05 c0       	rjmp	.+10     	; 0xdd6 <__floatsisf+0x5e>
 dcc:	66 23       	and	r22, r22
 dce:	71 f0       	breq	.+28     	; 0xdec <__floatsisf+0x74>
 dd0:	96 e8       	ldi	r25, 0x86	; 134
 dd2:	86 2f       	mov	r24, r22
 dd4:	70 e0       	ldi	r23, 0x00	; 0
 dd6:	60 e0       	ldi	r22, 0x00	; 0
 dd8:	2a f0       	brmi	.+10     	; 0xde4 <__floatsisf+0x6c>
 dda:	9a 95       	dec	r25
 ddc:	66 0f       	add	r22, r22
 dde:	77 1f       	adc	r23, r23
 de0:	88 1f       	adc	r24, r24
 de2:	da f7       	brpl	.-10     	; 0xdda <__floatsisf+0x62>
 de4:	88 0f       	add	r24, r24
 de6:	96 95       	lsr	r25
 de8:	87 95       	ror	r24
 dea:	97 f9       	bld	r25, 7
 dec:	08 95       	ret

00000dee <__fp_inf>:
 dee:	97 f9       	bld	r25, 7
 df0:	9f 67       	ori	r25, 0x7F	; 127
 df2:	80 e8       	ldi	r24, 0x80	; 128
 df4:	70 e0       	ldi	r23, 0x00	; 0
 df6:	60 e0       	ldi	r22, 0x00	; 0
 df8:	08 95       	ret

00000dfa <__fp_nan>:
 dfa:	9f ef       	ldi	r25, 0xFF	; 255
 dfc:	80 ec       	ldi	r24, 0xC0	; 192
 dfe:	08 95       	ret

00000e00 <__fp_pscA>:
 e00:	00 24       	eor	r0, r0
 e02:	0a 94       	dec	r0
 e04:	16 16       	cp	r1, r22
 e06:	17 06       	cpc	r1, r23
 e08:	18 06       	cpc	r1, r24
 e0a:	09 06       	cpc	r0, r25
 e0c:	08 95       	ret

00000e0e <__fp_pscB>:
 e0e:	00 24       	eor	r0, r0
 e10:	0a 94       	dec	r0
 e12:	12 16       	cp	r1, r18
 e14:	13 06       	cpc	r1, r19
 e16:	14 06       	cpc	r1, r20
 e18:	05 06       	cpc	r0, r21
 e1a:	08 95       	ret

00000e1c <__fp_round>:
 e1c:	09 2e       	mov	r0, r25
 e1e:	03 94       	inc	r0
 e20:	00 0c       	add	r0, r0
 e22:	11 f4       	brne	.+4      	; 0xe28 <__fp_round+0xc>
 e24:	88 23       	and	r24, r24
 e26:	52 f0       	brmi	.+20     	; 0xe3c <__fp_round+0x20>
 e28:	bb 0f       	add	r27, r27
 e2a:	40 f4       	brcc	.+16     	; 0xe3c <__fp_round+0x20>
 e2c:	bf 2b       	or	r27, r31
 e2e:	11 f4       	brne	.+4      	; 0xe34 <__fp_round+0x18>
 e30:	60 ff       	sbrs	r22, 0
 e32:	04 c0       	rjmp	.+8      	; 0xe3c <__fp_round+0x20>
 e34:	6f 5f       	subi	r22, 0xFF	; 255
 e36:	7f 4f       	sbci	r23, 0xFF	; 255
 e38:	8f 4f       	sbci	r24, 0xFF	; 255
 e3a:	9f 4f       	sbci	r25, 0xFF	; 255
 e3c:	08 95       	ret

00000e3e <__fp_split3>:
 e3e:	57 fd       	sbrc	r21, 7
 e40:	90 58       	subi	r25, 0x80	; 128
 e42:	44 0f       	add	r20, r20
 e44:	55 1f       	adc	r21, r21
 e46:	59 f0       	breq	.+22     	; 0xe5e <__fp_splitA+0x10>
 e48:	5f 3f       	cpi	r21, 0xFF	; 255
 e4a:	71 f0       	breq	.+28     	; 0xe68 <__fp_splitA+0x1a>
 e4c:	47 95       	ror	r20

00000e4e <__fp_splitA>:
 e4e:	88 0f       	add	r24, r24
 e50:	97 fb       	bst	r25, 7
 e52:	99 1f       	adc	r25, r25
 e54:	61 f0       	breq	.+24     	; 0xe6e <__fp_splitA+0x20>
 e56:	9f 3f       	cpi	r25, 0xFF	; 255
 e58:	79 f0       	breq	.+30     	; 0xe78 <__fp_splitA+0x2a>
 e5a:	87 95       	ror	r24
 e5c:	08 95       	ret
 e5e:	12 16       	cp	r1, r18
 e60:	13 06       	cpc	r1, r19
 e62:	14 06       	cpc	r1, r20
 e64:	55 1f       	adc	r21, r21
 e66:	f2 cf       	rjmp	.-28     	; 0xe4c <__fp_split3+0xe>
 e68:	46 95       	lsr	r20
 e6a:	f1 df       	rcall	.-30     	; 0xe4e <__fp_splitA>
 e6c:	08 c0       	rjmp	.+16     	; 0xe7e <__fp_splitA+0x30>
 e6e:	16 16       	cp	r1, r22
 e70:	17 06       	cpc	r1, r23
 e72:	18 06       	cpc	r1, r24
 e74:	99 1f       	adc	r25, r25
 e76:	f1 cf       	rjmp	.-30     	; 0xe5a <__fp_splitA+0xc>
 e78:	86 95       	lsr	r24
 e7a:	71 05       	cpc	r23, r1
 e7c:	61 05       	cpc	r22, r1
 e7e:	08 94       	sec
 e80:	08 95       	ret

00000e82 <__fp_zero>:
 e82:	e8 94       	clt

00000e84 <__fp_szero>:
 e84:	bb 27       	eor	r27, r27
 e86:	66 27       	eor	r22, r22
 e88:	77 27       	eor	r23, r23
 e8a:	cb 01       	movw	r24, r22
 e8c:	97 f9       	bld	r25, 7
 e8e:	08 95       	ret

00000e90 <__mulsf3>:
 e90:	0e 94 5b 07 	call	0xeb6	; 0xeb6 <__mulsf3x>
 e94:	0c 94 0e 07 	jmp	0xe1c	; 0xe1c <__fp_round>
 e98:	0e 94 00 07 	call	0xe00	; 0xe00 <__fp_pscA>
 e9c:	38 f0       	brcs	.+14     	; 0xeac <__mulsf3+0x1c>
 e9e:	0e 94 07 07 	call	0xe0e	; 0xe0e <__fp_pscB>
 ea2:	20 f0       	brcs	.+8      	; 0xeac <__mulsf3+0x1c>
 ea4:	95 23       	and	r25, r21
 ea6:	11 f0       	breq	.+4      	; 0xeac <__mulsf3+0x1c>
 ea8:	0c 94 f7 06 	jmp	0xdee	; 0xdee <__fp_inf>
 eac:	0c 94 fd 06 	jmp	0xdfa	; 0xdfa <__fp_nan>
 eb0:	11 24       	eor	r1, r1
 eb2:	0c 94 42 07 	jmp	0xe84	; 0xe84 <__fp_szero>

00000eb6 <__mulsf3x>:
 eb6:	0e 94 1f 07 	call	0xe3e	; 0xe3e <__fp_split3>
 eba:	70 f3       	brcs	.-36     	; 0xe98 <__mulsf3+0x8>

00000ebc <__mulsf3_pse>:
 ebc:	95 9f       	mul	r25, r21
 ebe:	c1 f3       	breq	.-16     	; 0xeb0 <__mulsf3+0x20>
 ec0:	95 0f       	add	r25, r21
 ec2:	50 e0       	ldi	r21, 0x00	; 0
 ec4:	55 1f       	adc	r21, r21
 ec6:	62 9f       	mul	r22, r18
 ec8:	f0 01       	movw	r30, r0
 eca:	72 9f       	mul	r23, r18
 ecc:	bb 27       	eor	r27, r27
 ece:	f0 0d       	add	r31, r0
 ed0:	b1 1d       	adc	r27, r1
 ed2:	63 9f       	mul	r22, r19
 ed4:	aa 27       	eor	r26, r26
 ed6:	f0 0d       	add	r31, r0
 ed8:	b1 1d       	adc	r27, r1
 eda:	aa 1f       	adc	r26, r26
 edc:	64 9f       	mul	r22, r20
 ede:	66 27       	eor	r22, r22
 ee0:	b0 0d       	add	r27, r0
 ee2:	a1 1d       	adc	r26, r1
 ee4:	66 1f       	adc	r22, r22
 ee6:	82 9f       	mul	r24, r18
 ee8:	22 27       	eor	r18, r18
 eea:	b0 0d       	add	r27, r0
 eec:	a1 1d       	adc	r26, r1
 eee:	62 1f       	adc	r22, r18
 ef0:	73 9f       	mul	r23, r19
 ef2:	b0 0d       	add	r27, r0
 ef4:	a1 1d       	adc	r26, r1
 ef6:	62 1f       	adc	r22, r18
 ef8:	83 9f       	mul	r24, r19
 efa:	a0 0d       	add	r26, r0
 efc:	61 1d       	adc	r22, r1
 efe:	22 1f       	adc	r18, r18
 f00:	74 9f       	mul	r23, r20
 f02:	33 27       	eor	r19, r19
 f04:	a0 0d       	add	r26, r0
 f06:	61 1d       	adc	r22, r1
 f08:	23 1f       	adc	r18, r19
 f0a:	84 9f       	mul	r24, r20
 f0c:	60 0d       	add	r22, r0
 f0e:	21 1d       	adc	r18, r1
 f10:	82 2f       	mov	r24, r18
 f12:	76 2f       	mov	r23, r22
 f14:	6a 2f       	mov	r22, r26
 f16:	11 24       	eor	r1, r1
 f18:	9f 57       	subi	r25, 0x7F	; 127
 f1a:	50 40       	sbci	r21, 0x00	; 0
 f1c:	9a f0       	brmi	.+38     	; 0xf44 <__mulsf3_pse+0x88>
 f1e:	f1 f0       	breq	.+60     	; 0xf5c <__mulsf3_pse+0xa0>
 f20:	88 23       	and	r24, r24
 f22:	4a f0       	brmi	.+18     	; 0xf36 <__mulsf3_pse+0x7a>
 f24:	ee 0f       	add	r30, r30
 f26:	ff 1f       	adc	r31, r31
 f28:	bb 1f       	adc	r27, r27
 f2a:	66 1f       	adc	r22, r22
 f2c:	77 1f       	adc	r23, r23
 f2e:	88 1f       	adc	r24, r24
 f30:	91 50       	subi	r25, 0x01	; 1
 f32:	50 40       	sbci	r21, 0x00	; 0
 f34:	a9 f7       	brne	.-22     	; 0xf20 <__mulsf3_pse+0x64>
 f36:	9e 3f       	cpi	r25, 0xFE	; 254
 f38:	51 05       	cpc	r21, r1
 f3a:	80 f0       	brcs	.+32     	; 0xf5c <__mulsf3_pse+0xa0>
 f3c:	0c 94 f7 06 	jmp	0xdee	; 0xdee <__fp_inf>
 f40:	0c 94 42 07 	jmp	0xe84	; 0xe84 <__fp_szero>
 f44:	5f 3f       	cpi	r21, 0xFF	; 255
 f46:	e4 f3       	brlt	.-8      	; 0xf40 <__mulsf3_pse+0x84>
 f48:	98 3e       	cpi	r25, 0xE8	; 232
 f4a:	d4 f3       	brlt	.-12     	; 0xf40 <__mulsf3_pse+0x84>
 f4c:	86 95       	lsr	r24
 f4e:	77 95       	ror	r23
 f50:	67 95       	ror	r22
 f52:	b7 95       	ror	r27
 f54:	f7 95       	ror	r31
 f56:	e7 95       	ror	r30
 f58:	9f 5f       	subi	r25, 0xFF	; 255
 f5a:	c1 f7       	brne	.-16     	; 0xf4c <__mulsf3_pse+0x90>
 f5c:	fe 2b       	or	r31, r30
 f5e:	88 0f       	add	r24, r24
 f60:	91 1d       	adc	r25, r1
 f62:	96 95       	lsr	r25
 f64:	87 95       	ror	r24
 f66:	97 f9       	bld	r25, 7
 f68:	08 95       	ret

00000f6a <__udivmodsi4>:
 f6a:	a1 e2       	ldi	r26, 0x21	; 33
 f6c:	1a 2e       	mov	r1, r26
 f6e:	aa 1b       	sub	r26, r26
 f70:	bb 1b       	sub	r27, r27
 f72:	fd 01       	movw	r30, r26
 f74:	0d c0       	rjmp	.+26     	; 0xf90 <__udivmodsi4_ep>

00000f76 <__udivmodsi4_loop>:
 f76:	aa 1f       	adc	r26, r26
 f78:	bb 1f       	adc	r27, r27
 f7a:	ee 1f       	adc	r30, r30
 f7c:	ff 1f       	adc	r31, r31
 f7e:	a2 17       	cp	r26, r18
 f80:	b3 07       	cpc	r27, r19
 f82:	e4 07       	cpc	r30, r20
 f84:	f5 07       	cpc	r31, r21
 f86:	20 f0       	brcs	.+8      	; 0xf90 <__udivmodsi4_ep>
 f88:	a2 1b       	sub	r26, r18
 f8a:	b3 0b       	sbc	r27, r19
 f8c:	e4 0b       	sbc	r30, r20
 f8e:	f5 0b       	sbc	r31, r21

00000f90 <__udivmodsi4_ep>:
 f90:	66 1f       	adc	r22, r22
 f92:	77 1f       	adc	r23, r23
 f94:	88 1f       	adc	r24, r24
 f96:	99 1f       	adc	r25, r25
 f98:	1a 94       	dec	r1
 f9a:	69 f7       	brne	.-38     	; 0xf76 <__udivmodsi4_loop>
 f9c:	60 95       	com	r22
 f9e:	70 95       	com	r23
 fa0:	80 95       	com	r24
 fa2:	90 95       	com	r25
 fa4:	9b 01       	movw	r18, r22
 fa6:	ac 01       	movw	r20, r24
 fa8:	bd 01       	movw	r22, r26
 faa:	cf 01       	movw	r24, r30
 fac:	08 95       	ret

00000fae <__divmodsi4>:
 fae:	05 2e       	mov	r0, r21
 fb0:	97 fb       	bst	r25, 7
 fb2:	1e f4       	brtc	.+6      	; 0xfba <__divmodsi4+0xc>
 fb4:	00 94       	com	r0
 fb6:	0e 94 ee 07 	call	0xfdc	; 0xfdc <__negsi2>
 fba:	57 fd       	sbrc	r21, 7
 fbc:	07 d0       	rcall	.+14     	; 0xfcc <__divmodsi4_neg2>
 fbe:	0e 94 b5 07 	call	0xf6a	; 0xf6a <__udivmodsi4>
 fc2:	07 fc       	sbrc	r0, 7
 fc4:	03 d0       	rcall	.+6      	; 0xfcc <__divmodsi4_neg2>
 fc6:	4e f4       	brtc	.+18     	; 0xfda <__divmodsi4_exit>
 fc8:	0c 94 ee 07 	jmp	0xfdc	; 0xfdc <__negsi2>

00000fcc <__divmodsi4_neg2>:
 fcc:	50 95       	com	r21
 fce:	40 95       	com	r20
 fd0:	30 95       	com	r19
 fd2:	21 95       	neg	r18
 fd4:	3f 4f       	sbci	r19, 0xFF	; 255
 fd6:	4f 4f       	sbci	r20, 0xFF	; 255
 fd8:	5f 4f       	sbci	r21, 0xFF	; 255

00000fda <__divmodsi4_exit>:
 fda:	08 95       	ret

00000fdc <__negsi2>:
 fdc:	90 95       	com	r25
 fde:	80 95       	com	r24
 fe0:	70 95       	com	r23
 fe2:	61 95       	neg	r22
 fe4:	7f 4f       	sbci	r23, 0xFF	; 255
 fe6:	8f 4f       	sbci	r24, 0xFF	; 255
 fe8:	9f 4f       	sbci	r25, 0xFF	; 255
 fea:	08 95       	ret

00000fec <_exit>:
 fec:	f8 94       	cli

00000fee <__stop_program>:
 fee:	ff cf       	rjmp	.-2      	; 0xfee <__stop_program>
