
Obstacle-avoidance-car.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00001c42  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         000000f0  00800060  00001c42  00001cd6  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000032  00800150  00800150  00001dc6  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  00001dc6  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00001df8  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000470  00000000  00000000  00001e34  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   0000478d  00000000  00000000  000022a4  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00001574  00000000  00000000  00006a31  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00002714  00000000  00000000  00007fa5  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000be8  00000000  00000000  0000a6bc  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00001564  00000000  00000000  0000b2a4  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    0000295d  00000000  00000000  0000c808  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000398  00000000  00000000  0000f165  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
       4:	0c 94 e0 08 	jmp	0x11c0	; 0x11c0 <__vector_1>
       8:	0c 94 09 09 	jmp	0x1212	; 0x1212 <__vector_2>
       c:	0c 94 32 09 	jmp	0x1264	; 0x1264 <__vector_3>
      10:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      14:	0c 94 9d 0b 	jmp	0x173a	; 0x173a <__vector_5>
      18:	0c 94 22 0b 	jmp	0x1644	; 0x1644 <__vector_6>
      1c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      20:	0c 94 f9 0a 	jmp	0x15f2	; 0x15f2 <__vector_8>
      24:	0c 94 d0 0a 	jmp	0x15a0	; 0x15a0 <__vector_9>
      28:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      2c:	0c 94 4f 0a 	jmp	0x149e	; 0x149e <__vector_11>
      30:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      34:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      38:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      3c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      40:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      44:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      48:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      4c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      50:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>

00000054 <__ctors_end>:
      54:	11 24       	eor	r1, r1
      56:	1f be       	out	0x3f, r1	; 63
      58:	cf e5       	ldi	r28, 0x5F	; 95
      5a:	d8 e0       	ldi	r29, 0x08	; 8
      5c:	de bf       	out	0x3e, r29	; 62
      5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_copy_data>:
      60:	11 e0       	ldi	r17, 0x01	; 1
      62:	a0 e6       	ldi	r26, 0x60	; 96
      64:	b0 e0       	ldi	r27, 0x00	; 0
      66:	e2 e4       	ldi	r30, 0x42	; 66
      68:	fc e1       	ldi	r31, 0x1C	; 28
      6a:	02 c0       	rjmp	.+4      	; 0x70 <__do_copy_data+0x10>
      6c:	05 90       	lpm	r0, Z+
      6e:	0d 92       	st	X+, r0
      70:	a0 35       	cpi	r26, 0x50	; 80
      72:	b1 07       	cpc	r27, r17
      74:	d9 f7       	brne	.-10     	; 0x6c <__do_copy_data+0xc>

00000076 <__do_clear_bss>:
      76:	21 e0       	ldi	r18, 0x01	; 1
      78:	a0 e5       	ldi	r26, 0x50	; 80
      7a:	b1 e0       	ldi	r27, 0x01	; 1
      7c:	01 c0       	rjmp	.+2      	; 0x80 <.do_clear_bss_start>

0000007e <.do_clear_bss_loop>:
      7e:	1d 92       	st	X+, r1

00000080 <.do_clear_bss_start>:
      80:	a2 38       	cpi	r26, 0x82	; 130
      82:	b2 07       	cpc	r27, r18
      84:	e1 f7       	brne	.-8      	; 0x7e <.do_clear_bss_loop>
      86:	0e 94 e5 05 	call	0xbca	; 0xbca <main>
      8a:	0c 94 1f 0e 	jmp	0x1c3e	; 0x1c3e <_exit>

0000008e <__bad_interrupt>:
      8e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000092 <Speed_50_check>:
	LCD_WriteNumber(g_distance);
	LCD_WriteString(" Cm");
}

void Speed_50_check()
{
      92:	0f 93       	push	r16
      94:	1f 93       	push	r17
	if(g_speed_flag == 1)
      96:	80 91 67 00 	lds	r24, 0x0067	; 0x800067 <g_speed_flag>
      9a:	81 30       	cpi	r24, 0x01	; 1
      9c:	c9 f5       	brne	.+114    	; 0x110 <Speed_50_check+0x7e>
	{
		
		if (ovf < mode_ovf ){
      9e:	80 91 51 01 	lds	r24, 0x0151	; 0x800151 <ovf>
      a2:	90 91 52 01 	lds	r25, 0x0152	; 0x800152 <ovf+0x1>
      a6:	a0 91 53 01 	lds	r26, 0x0153	; 0x800153 <ovf+0x2>
      aa:	b0 91 54 01 	lds	r27, 0x0154	; 0x800154 <ovf+0x3>
      ae:	40 91 71 01 	lds	r20, 0x0171	; 0x800171 <mode_ovf>
      b2:	50 91 72 01 	lds	r21, 0x0172	; 0x800172 <mode_ovf+0x1>
      b6:	60 91 73 01 	lds	r22, 0x0173	; 0x800173 <mode_ovf+0x2>
      ba:	70 91 74 01 	lds	r23, 0x0174	; 0x800174 <mode_ovf+0x3>
      be:	84 17       	cp	r24, r20
      c0:	95 07       	cpc	r25, r21
      c2:	a6 07       	cpc	r26, r22
      c4:	b7 07       	cpc	r27, r23
      c6:	60 f4       	brcc	.+24     	; 0xe0 <Speed_50_check+0x4e>
			ovf++;
      c8:	01 96       	adiw	r24, 0x01	; 1
      ca:	a1 1d       	adc	r26, r1
      cc:	b1 1d       	adc	r27, r1
      ce:	80 93 51 01 	sts	0x0151, r24	; 0x800151 <ovf>
      d2:	90 93 52 01 	sts	0x0152, r25	; 0x800152 <ovf+0x1>
      d6:	a0 93 53 01 	sts	0x0153, r26	; 0x800153 <ovf+0x2>
      da:	b0 93 54 01 	sts	0x0154, r27	; 0x800154 <ovf+0x3>
      de:	18 c0       	rjmp	.+48     	; 0x110 <Speed_50_check+0x7e>
		}
		else if ( ovf == mode_ovf && mode_ovf!=0)
      e0:	84 17       	cp	r24, r20
      e2:	95 07       	cpc	r25, r21
      e4:	a6 07       	cpc	r26, r22
      e6:	b7 07       	cpc	r27, r23
      e8:	99 f4       	brne	.+38     	; 0x110 <Speed_50_check+0x7e>
      ea:	45 2b       	or	r20, r21
      ec:	46 2b       	or	r20, r22
      ee:	47 2b       	or	r20, r23
      f0:	79 f0       	breq	.+30     	; 0x110 <Speed_50_check+0x7e>
		{
			ovf =0 ;
      f2:	10 92 51 01 	sts	0x0151, r1	; 0x800151 <ovf>
      f6:	10 92 52 01 	sts	0x0152, r1	; 0x800152 <ovf+0x1>
      fa:	10 92 53 01 	sts	0x0153, r1	; 0x800153 <ovf+0x2>
      fe:	10 92 54 01 	sts	0x0154, r1	; 0x800154 <ovf+0x3>
			if (car_mode ==0)
     102:	80 91 75 01 	lds	r24, 0x0175	; 0x800175 <car_mode>
     106:	81 11       	cpse	r24, r1
     108:	03 c0       	rjmp	.+6      	; 0x110 <Speed_50_check+0x7e>
			{
				car_mode=1;
     10a:	81 e0       	ldi	r24, 0x01	; 1
     10c:	80 93 75 01 	sts	0x0175, r24	; 0x800175 <car_mode>
			}
			
		}
	}
}
     110:	1f 91       	pop	r17
     112:	0f 91       	pop	r16
     114:	08 95       	ret

00000116 <STOP_check>:
static u8 g_Rotate_Counter;


void STOP_check (void)
{
	KEYPAD_getpressedkey(&g_keyPressed);
     116:	86 e5       	ldi	r24, 0x56	; 86
     118:	91 e0       	ldi	r25, 0x01	; 1
     11a:	0e 94 67 03 	call	0x6ce	; 0x6ce <KEYPAD_getpressedkey>
	if (g_keyPressed == '2')
     11e:	80 91 56 01 	lds	r24, 0x0156	; 0x800156 <g_keyPressed>
     122:	82 33       	cpi	r24, 0x32	; 50
     124:	a1 f4       	brne	.+40     	; 0x14e <STOP_check+0x38>
	{
		LCD_Clear();
     126:	0e 94 ba 04 	call	0x974	; 0x974 <LCD_Clear>
		LCD_SetCursor(0,4);
     12a:	64 e0       	ldi	r22, 0x04	; 4
     12c:	80 e0       	ldi	r24, 0x00	; 0
     12e:	0e 94 ac 04 	call	0x958	; 0x958 <LCD_SetCursor>
		LCD_WriteString("STOPPED!");
     132:	88 e6       	ldi	r24, 0x68	; 104
     134:	90 e0       	ldi	r25, 0x00	; 0
     136:	0e 94 99 04 	call	0x932	; 0x932 <LCD_WriteString>
		Car_Stop();
     13a:	0e 94 78 05 	call	0xaf0	; 0xaf0 <Car_Stop>
		do {
			KEYPAD_getpressedkey(&g_keyPressed);
     13e:	86 e5       	ldi	r24, 0x56	; 86
     140:	91 e0       	ldi	r25, 0x01	; 1
     142:	0e 94 67 03 	call	0x6ce	; 0x6ce <KEYPAD_getpressedkey>
		} while (g_keyPressed != '1');				//Key 1 is pressed.
     146:	80 91 56 01 	lds	r24, 0x0156	; 0x800156 <g_keyPressed>
     14a:	81 33       	cpi	r24, 0x31	; 49
     14c:	c1 f7       	brne	.-16     	; 0x13e <STOP_check+0x28>
     14e:	08 95       	ret

00000150 <car_Forward_30>:
	}
}

void car_Forward_30()
{	
	PWM_set_duty(30,100);
     150:	44 e6       	ldi	r20, 0x64	; 100
     152:	50 e0       	ldi	r21, 0x00	; 0
     154:	60 e0       	ldi	r22, 0x00	; 0
     156:	70 e0       	ldi	r23, 0x00	; 0
     158:	8e e1       	ldi	r24, 0x1E	; 30
     15a:	0e 94 bc 09 	call	0x1378	; 0x1378 <PWM_set_duty>
	Car_Moving_FWD();
     15e:	0e 94 54 05 	call	0xaa8	; 0xaa8 <Car_Moving_FWD>
	LCD_SetCursor(0,0);
     162:	60 e0       	ldi	r22, 0x00	; 0
     164:	80 e0       	ldi	r24, 0x00	; 0
     166:	0e 94 ac 04 	call	0x958	; 0x958 <LCD_SetCursor>
	LCD_WriteString("Speed:30% Dir:	F");
     16a:	81 e7       	ldi	r24, 0x71	; 113
     16c:	90 e0       	ldi	r25, 0x00	; 0
     16e:	0e 94 99 04 	call	0x932	; 0x932 <LCD_WriteString>
	LCD_SetCursor(1,0);
     172:	60 e0       	ldi	r22, 0x00	; 0
     174:	81 e0       	ldi	r24, 0x01	; 1
     176:	0e 94 ac 04 	call	0x958	; 0x958 <LCD_SetCursor>
	LCD_WriteString("Dist.:");
     17a:	82 e8       	ldi	r24, 0x82	; 130
     17c:	90 e0       	ldi	r25, 0x00	; 0
     17e:	0e 94 99 04 	call	0x932	; 0x932 <LCD_WriteString>
	LCD_WriteNumber(g_distance);
     182:	60 91 80 01 	lds	r22, 0x0180	; 0x800180 <g_distance>
     186:	70 91 81 01 	lds	r23, 0x0181	; 0x800181 <g_distance+0x1>
     18a:	80 e0       	ldi	r24, 0x00	; 0
     18c:	90 e0       	ldi	r25, 0x00	; 0
     18e:	0e 94 c4 04 	call	0x988	; 0x988 <LCD_WriteNumber>
	LCD_WriteString(" Cm");
     192:	89 e8       	ldi	r24, 0x89	; 137
     194:	90 e0       	ldi	r25, 0x00	; 0
     196:	0e 94 99 04 	call	0x932	; 0x932 <LCD_WriteString>
     19a:	08 95       	ret

0000019c <car_Forward_50>:
}

void car_Forward_50()
{
	PWM_set_duty(50,100);
     19c:	44 e6       	ldi	r20, 0x64	; 100
     19e:	50 e0       	ldi	r21, 0x00	; 0
     1a0:	60 e0       	ldi	r22, 0x00	; 0
     1a2:	70 e0       	ldi	r23, 0x00	; 0
     1a4:	82 e3       	ldi	r24, 0x32	; 50
     1a6:	0e 94 bc 09 	call	0x1378	; 0x1378 <PWM_set_duty>
	Car_Moving_FWD();
     1aa:	0e 94 54 05 	call	0xaa8	; 0xaa8 <Car_Moving_FWD>
	LCD_SetCursor(0,0);
     1ae:	60 e0       	ldi	r22, 0x00	; 0
     1b0:	80 e0       	ldi	r24, 0x00	; 0
     1b2:	0e 94 ac 04 	call	0x958	; 0x958 <LCD_SetCursor>
	LCD_WriteString("Speed:50% Dir:	F");
     1b6:	8d e8       	ldi	r24, 0x8D	; 141
     1b8:	90 e0       	ldi	r25, 0x00	; 0
     1ba:	0e 94 99 04 	call	0x932	; 0x932 <LCD_WriteString>
	LCD_SetCursor(1,0);
     1be:	60 e0       	ldi	r22, 0x00	; 0
     1c0:	81 e0       	ldi	r24, 0x01	; 1
     1c2:	0e 94 ac 04 	call	0x958	; 0x958 <LCD_SetCursor>
	LCD_WriteString("Dist.:");
     1c6:	82 e8       	ldi	r24, 0x82	; 130
     1c8:	90 e0       	ldi	r25, 0x00	; 0
     1ca:	0e 94 99 04 	call	0x932	; 0x932 <LCD_WriteString>
	LCD_WriteNumber(g_distance);
     1ce:	60 91 80 01 	lds	r22, 0x0180	; 0x800180 <g_distance>
     1d2:	70 91 81 01 	lds	r23, 0x0181	; 0x800181 <g_distance+0x1>
     1d6:	80 e0       	ldi	r24, 0x00	; 0
     1d8:	90 e0       	ldi	r25, 0x00	; 0
     1da:	0e 94 c4 04 	call	0x988	; 0x988 <LCD_WriteNumber>
	LCD_WriteString(" Cm");
     1de:	89 e8       	ldi	r24, 0x89	; 137
     1e0:	90 e0       	ldi	r25, 0x00	; 0
     1e2:	0e 94 99 04 	call	0x932	; 0x932 <LCD_WriteString>
     1e6:	08 95       	ret

000001e8 <car_Rotating>:
}

void car_Rotating()
{	
	while (car_mode == 0 && (g_distance <= 30 && g_distance > 20))
     1e8:	32 c0       	rjmp	.+100    	; 0x24e <car_Rotating+0x66>
	{
		
		US_getdistance(&g_distance);
     1ea:	80 e8       	ldi	r24, 0x80	; 128
     1ec:	91 e0       	ldi	r25, 0x01	; 1
     1ee:	0e 94 c1 05 	call	0xb82	; 0xb82 <US_getdistance>
		STOP_check ();
     1f2:	0e 94 8b 00 	call	0x116	; 0x116 <STOP_check>
		PWM_set_duty(30,100);
     1f6:	44 e6       	ldi	r20, 0x64	; 100
     1f8:	50 e0       	ldi	r21, 0x00	; 0
     1fa:	60 e0       	ldi	r22, 0x00	; 0
     1fc:	70 e0       	ldi	r23, 0x00	; 0
     1fe:	8e e1       	ldi	r24, 0x1E	; 30
     200:	0e 94 bc 09 	call	0x1378	; 0x1378 <PWM_set_duty>
		LCD_SetCursor(0,0);
     204:	60 e0       	ldi	r22, 0x00	; 0
     206:	80 e0       	ldi	r24, 0x00	; 0
     208:	0e 94 ac 04 	call	0x958	; 0x958 <LCD_SetCursor>
		LCD_WriteString("Speed:30% Dir:	R");
     20c:	8e e9       	ldi	r24, 0x9E	; 158
     20e:	90 e0       	ldi	r25, 0x00	; 0
     210:	0e 94 99 04 	call	0x932	; 0x932 <LCD_WriteString>
		LCD_SetCursor(1,0);
     214:	60 e0       	ldi	r22, 0x00	; 0
     216:	81 e0       	ldi	r24, 0x01	; 1
     218:	0e 94 ac 04 	call	0x958	; 0x958 <LCD_SetCursor>
		LCD_WriteString("Dist.:");
     21c:	82 e8       	ldi	r24, 0x82	; 130
     21e:	90 e0       	ldi	r25, 0x00	; 0
     220:	0e 94 99 04 	call	0x932	; 0x932 <LCD_WriteString>
		LCD_WriteNumber(g_distance);
     224:	60 91 80 01 	lds	r22, 0x0180	; 0x800180 <g_distance>
     228:	70 91 81 01 	lds	r23, 0x0181	; 0x800181 <g_distance+0x1>
     22c:	80 e0       	ldi	r24, 0x00	; 0
     22e:	90 e0       	ldi	r25, 0x00	; 0
     230:	0e 94 c4 04 	call	0x988	; 0x988 <LCD_WriteNumber>
		LCD_WriteString(" Cm");
     234:	89 e8       	ldi	r24, 0x89	; 137
     236:	90 e0       	ldi	r25, 0x00	; 0
     238:	0e 94 99 04 	call	0x932	; 0x932 <LCD_WriteString>
		if (g_buttonCounter %2 == 0)
     23c:	80 91 55 01 	lds	r24, 0x0155	; 0x800155 <g_buttonCounter>
     240:	80 fd       	sbrc	r24, 0
     242:	03 c0       	rjmp	.+6      	; 0x24a <car_Rotating+0x62>
		{
			Car_Rotate_Right();
     244:	0e 94 8a 05 	call	0xb14	; 0xb14 <Car_Rotate_Right>
     248:	02 c0       	rjmp	.+4      	; 0x24e <car_Rotating+0x66>
		}
		else
		{
			Car_Rotate_Left();
     24a:	0e 94 9c 05 	call	0xb38	; 0xb38 <Car_Rotate_Left>
	LCD_WriteString(" Cm");
}

void car_Rotating()
{	
	while (car_mode == 0 && (g_distance <= 30 && g_distance > 20))
     24e:	80 91 75 01 	lds	r24, 0x0175	; 0x800175 <car_mode>
     252:	81 11       	cpse	r24, r1
     254:	0d c0       	rjmp	.+26     	; 0x270 <car_Rotating+0x88>
     256:	80 91 80 01 	lds	r24, 0x0180	; 0x800180 <g_distance>
     25a:	90 91 81 01 	lds	r25, 0x0181	; 0x800181 <g_distance+0x1>
     25e:	4f 97       	sbiw	r24, 0x1f	; 31
     260:	38 f4       	brcc	.+14     	; 0x270 <car_Rotating+0x88>
     262:	80 91 80 01 	lds	r24, 0x0180	; 0x800180 <g_distance>
     266:	90 91 81 01 	lds	r25, 0x0181	; 0x800181 <g_distance+0x1>
     26a:	45 97       	sbiw	r24, 0x15	; 21
     26c:	08 f0       	brcs	.+2      	; 0x270 <car_Rotating+0x88>
     26e:	bd cf       	rjmp	.-134    	; 0x1ea <car_Rotating+0x2>
     270:	08 95       	ret

00000272 <car_Backword_30>:
	}
}

void car_Backword_30()
{
	while (g_distance <= 20)
     272:	2b c0       	rjmp	.+86     	; 0x2ca <car_Backword_30+0x58>
	{
		STOP_check();
     274:	0e 94 8b 00 	call	0x116	; 0x116 <STOP_check>
		US_getdistance(&g_distance);
     278:	80 e8       	ldi	r24, 0x80	; 128
     27a:	91 e0       	ldi	r25, 0x01	; 1
     27c:	0e 94 c1 05 	call	0xb82	; 0xb82 <US_getdistance>
		PWM_set_duty(30,100);
     280:	44 e6       	ldi	r20, 0x64	; 100
     282:	50 e0       	ldi	r21, 0x00	; 0
     284:	60 e0       	ldi	r22, 0x00	; 0
     286:	70 e0       	ldi	r23, 0x00	; 0
     288:	8e e1       	ldi	r24, 0x1E	; 30
     28a:	0e 94 bc 09 	call	0x1378	; 0x1378 <PWM_set_duty>
		Car_Moving_BWD();
     28e:	0e 94 66 05 	call	0xacc	; 0xacc <Car_Moving_BWD>
		LCD_SetCursor(0,0);
     292:	60 e0       	ldi	r22, 0x00	; 0
     294:	80 e0       	ldi	r24, 0x00	; 0
     296:	0e 94 ac 04 	call	0x958	; 0x958 <LCD_SetCursor>
		LCD_WriteString("Speed:30% Dir:	B");
     29a:	8f ea       	ldi	r24, 0xAF	; 175
     29c:	90 e0       	ldi	r25, 0x00	; 0
     29e:	0e 94 99 04 	call	0x932	; 0x932 <LCD_WriteString>
		LCD_SetCursor(1,0);
     2a2:	60 e0       	ldi	r22, 0x00	; 0
     2a4:	81 e0       	ldi	r24, 0x01	; 1
     2a6:	0e 94 ac 04 	call	0x958	; 0x958 <LCD_SetCursor>
		LCD_WriteString("Dist.:");
     2aa:	82 e8       	ldi	r24, 0x82	; 130
     2ac:	90 e0       	ldi	r25, 0x00	; 0
     2ae:	0e 94 99 04 	call	0x932	; 0x932 <LCD_WriteString>
		LCD_WriteNumber(g_distance);
     2b2:	60 91 80 01 	lds	r22, 0x0180	; 0x800180 <g_distance>
     2b6:	70 91 81 01 	lds	r23, 0x0181	; 0x800181 <g_distance+0x1>
     2ba:	80 e0       	ldi	r24, 0x00	; 0
     2bc:	90 e0       	ldi	r25, 0x00	; 0
     2be:	0e 94 c4 04 	call	0x988	; 0x988 <LCD_WriteNumber>
		LCD_WriteString(" Cm");
     2c2:	89 e8       	ldi	r24, 0x89	; 137
     2c4:	90 e0       	ldi	r25, 0x00	; 0
     2c6:	0e 94 99 04 	call	0x932	; 0x932 <LCD_WriteString>
	}
}

void car_Backword_30()
{
	while (g_distance <= 20)
     2ca:	80 91 80 01 	lds	r24, 0x0180	; 0x800180 <g_distance>
     2ce:	90 91 81 01 	lds	r25, 0x0181	; 0x800181 <g_distance+0x1>
     2d2:	45 97       	sbiw	r24, 0x15	; 21
     2d4:	78 f2       	brcs	.-98     	; 0x274 <car_Backword_30+0x2>
		LCD_WriteString("Dist.:");
		LCD_WriteNumber(g_distance);
		LCD_WriteString(" Cm");
	}
	
}
     2d6:	08 95       	ret

000002d8 <Car_Stopping>:

void Car_Stopping()
{
	PWM_set_duty(0,100);
     2d8:	44 e6       	ldi	r20, 0x64	; 100
     2da:	50 e0       	ldi	r21, 0x00	; 0
     2dc:	60 e0       	ldi	r22, 0x00	; 0
     2de:	70 e0       	ldi	r23, 0x00	; 0
     2e0:	80 e0       	ldi	r24, 0x00	; 0
     2e2:	0e 94 bc 09 	call	0x1378	; 0x1378 <PWM_set_duty>
	Car_Stop();
     2e6:	0e 94 78 05 	call	0xaf0	; 0xaf0 <Car_Stop>
	LCD_SetCursor(0,0);
     2ea:	60 e0       	ldi	r22, 0x00	; 0
     2ec:	80 e0       	ldi	r24, 0x00	; 0
     2ee:	0e 94 ac 04 	call	0x958	; 0x958 <LCD_SetCursor>
	LCD_WriteString("Speed:00% Dir:	S");
     2f2:	80 ec       	ldi	r24, 0xC0	; 192
     2f4:	90 e0       	ldi	r25, 0x00	; 0
     2f6:	0e 94 99 04 	call	0x932	; 0x932 <LCD_WriteString>
	LCD_SetCursor(1,0);
     2fa:	60 e0       	ldi	r22, 0x00	; 0
     2fc:	81 e0       	ldi	r24, 0x01	; 1
     2fe:	0e 94 ac 04 	call	0x958	; 0x958 <LCD_SetCursor>
	LCD_WriteString("Dist.:");
     302:	82 e8       	ldi	r24, 0x82	; 130
     304:	90 e0       	ldi	r25, 0x00	; 0
     306:	0e 94 99 04 	call	0x932	; 0x932 <LCD_WriteString>
	LCD_WriteNumber(g_distance);
     30a:	60 91 80 01 	lds	r22, 0x0180	; 0x800180 <g_distance>
     30e:	70 91 81 01 	lds	r23, 0x0181	; 0x800181 <g_distance+0x1>
     312:	80 e0       	ldi	r24, 0x00	; 0
     314:	90 e0       	ldi	r25, 0x00	; 0
     316:	0e 94 c4 04 	call	0x988	; 0x988 <LCD_WriteNumber>
	LCD_WriteString(" Cm");
     31a:	89 e8       	ldi	r24, 0x89	; 137
     31c:	90 e0       	ldi	r25, 0x00	; 0
     31e:	0e 94 99 04 	call	0x932	; 0x932 <LCD_WriteString>
     322:	08 95       	ret

00000324 <startStage>:
		}
	}
}

void startStage(void) 
{	
     324:	cf 93       	push	r28
     326:	df 93       	push	r29
     328:	1f 92       	push	r1
     32a:	cd b7       	in	r28, 0x3d	; 61
     32c:	de b7       	in	r29, 0x3e	; 62
	Button_State buttonState = 0;
     32e:	19 82       	std	Y+1, r1	; 0x01


	do {
		LCD_SetCursor(0,4);
     330:	64 e0       	ldi	r22, 0x04	; 4
     332:	80 e0       	ldi	r24, 0x00	; 0
     334:	0e 94 ac 04 	call	0x958	; 0x958 <LCD_SetCursor>
		LCD_WriteString("WELCOME!");
     338:	81 ed       	ldi	r24, 0xD1	; 209
     33a:	90 e0       	ldi	r25, 0x00	; 0
     33c:	0e 94 99 04 	call	0x932	; 0x932 <LCD_WriteString>
		LCD_SetCursor(1, 0);
     340:	60 e0       	ldi	r22, 0x00	; 0
     342:	81 e0       	ldi	r24, 0x01	; 1
     344:	0e 94 ac 04 	call	0x958	; 0x958 <LCD_SetCursor>
		LCD_WriteString("press 1 to start");				
     348:	8a ed       	ldi	r24, 0xDA	; 218
     34a:	90 e0       	ldi	r25, 0x00	; 0
     34c:	0e 94 99 04 	call	0x932	; 0x932 <LCD_WriteString>
		KEYPAD_getpressedkey(&g_keyPressed);
     350:	86 e5       	ldi	r24, 0x56	; 86
     352:	91 e0       	ldi	r25, 0x01	; 1
     354:	0e 94 67 03 	call	0x6ce	; 0x6ce <KEYPAD_getpressedkey>
		} while (g_keyPressed != '1');				//Key 1 is pressed. 
     358:	80 91 56 01 	lds	r24, 0x0156	; 0x800156 <g_keyPressed>
     35c:	81 33       	cpi	r24, 0x31	; 49
     35e:	41 f7       	brne	.-48     	; 0x330 <startStage+0xc>
	
	LCD_SetCursor(0, 0);
     360:	60 e0       	ldi	r22, 0x00	; 0
     362:	80 e0       	ldi	r24, 0x00	; 0
     364:	0e 94 ac 04 	call	0x958	; 0x958 <LCD_SetCursor>
	LCD_WriteString("Set Def Rot     ");
     368:	8b ee       	ldi	r24, 0xEB	; 235
     36a:	90 e0       	ldi	r25, 0x00	; 0
     36c:	0e 94 99 04 	call	0x932	; 0x932 <LCD_WriteString>
	LCD_SetCursor(1, 0);
     370:	60 e0       	ldi	r22, 0x00	; 0
     372:	81 e0       	ldi	r24, 0x01	; 1
     374:	0e 94 ac 04 	call	0x958	; 0x958 <LCD_SetCursor>
	LCD_WriteString("Right           ");
     378:	8c ef       	ldi	r24, 0xFC	; 252
     37a:	90 e0       	ldi	r25, 0x00	; 0
     37c:	0e 94 99 04 	call	0x932	; 0x932 <LCD_WriteString>
	
	ovf = 0;
     380:	10 92 51 01 	sts	0x0151, r1	; 0x800151 <ovf>
     384:	10 92 52 01 	sts	0x0152, r1	; 0x800152 <ovf+0x1>
     388:	10 92 53 01 	sts	0x0153, r1	; 0x800153 <ovf+0x2>
     38c:	10 92 54 01 	sts	0x0154, r1	; 0x800154 <ovf+0x3>
	mode_ovf = 156250;								//starts 5 seconds timer in ISR
     390:	8a e5       	ldi	r24, 0x5A	; 90
     392:	92 e6       	ldi	r25, 0x62	; 98
     394:	a2 e0       	ldi	r26, 0x02	; 2
     396:	b0 e0       	ldi	r27, 0x00	; 0
     398:	80 93 71 01 	sts	0x0171, r24	; 0x800171 <mode_ovf>
     39c:	90 93 72 01 	sts	0x0172, r25	; 0x800172 <mode_ovf+0x1>
     3a0:	a0 93 73 01 	sts	0x0173, r26	; 0x800173 <mode_ovf+0x2>
     3a4:	b0 93 74 01 	sts	0x0174, r27	; 0x800174 <mode_ovf+0x3>
	g_speed_flag = 1;
     3a8:	81 e0       	ldi	r24, 0x01	; 1
     3aa:	80 93 67 00 	sts	0x0067, r24	; 0x800067 <g_speed_flag>
	
	while (car_mode == 0)
     3ae:	56 c0       	rjmp	.+172    	; 0x45c <__EEPROM_REGION_LENGTH__+0x5c>
	{
		Is_pressed(BUTTON_PIN, &buttonState);
     3b0:	be 01       	movw	r22, r28
     3b2:	6f 5f       	subi	r22, 0xFF	; 255
     3b4:	7f 4f       	sbci	r23, 0xFF	; 255
     3b6:	8e e1       	ldi	r24, 0x1E	; 30
     3b8:	0e 94 2e 03 	call	0x65c	; 0x65c <Is_pressed>
			if (buttonState == pressed)
     3bc:	89 81       	ldd	r24, Y+1	; 0x01
     3be:	81 30       	cpi	r24, 0x01	; 1
     3c0:	79 f4       	brne	.+30     	; 0x3e0 <startStage+0xbc>
			{
				g_buttonCounter++;
     3c2:	80 91 55 01 	lds	r24, 0x0155	; 0x800155 <g_buttonCounter>
     3c6:	8f 5f       	subi	r24, 0xFF	; 255
     3c8:	80 93 55 01 	sts	0x0155, r24	; 0x800155 <g_buttonCounter>
				while (buttonState == pressed) {
     3cc:	06 c0       	rjmp	.+12     	; 0x3da <startStage+0xb6>
					Is_pressed(BUTTON_PIN, &buttonState);
     3ce:	be 01       	movw	r22, r28
     3d0:	6f 5f       	subi	r22, 0xFF	; 255
     3d2:	7f 4f       	sbci	r23, 0xFF	; 255
     3d4:	8e e1       	ldi	r24, 0x1E	; 30
     3d6:	0e 94 2e 03 	call	0x65c	; 0x65c <Is_pressed>
	{
		Is_pressed(BUTTON_PIN, &buttonState);
			if (buttonState == pressed)
			{
				g_buttonCounter++;
				while (buttonState == pressed) {
     3da:	89 81       	ldd	r24, Y+1	; 0x01
     3dc:	81 30       	cpi	r24, 0x01	; 1
     3de:	b9 f3       	breq	.-18     	; 0x3ce <startStage+0xaa>
					Is_pressed(BUTTON_PIN, &buttonState);
				}
			}
			if ( (g_buttonCounter % 2 == 0 || g_buttonCounter == 0) && lcdFlag == 0 )
     3e0:	80 91 55 01 	lds	r24, 0x0155	; 0x800155 <g_buttonCounter>
     3e4:	80 ff       	sbrs	r24, 0
     3e6:	04 c0       	rjmp	.+8      	; 0x3f0 <startStage+0xcc>
     3e8:	80 91 55 01 	lds	r24, 0x0155	; 0x800155 <g_buttonCounter>
     3ec:	81 11       	cpse	r24, r1
     3ee:	19 c0       	rjmp	.+50     	; 0x422 <__EEPROM_REGION_LENGTH__+0x22>
     3f0:	80 91 58 01 	lds	r24, 0x0158	; 0x800158 <lcdFlag>
     3f4:	81 11       	cpse	r24, r1
     3f6:	15 c0       	rjmp	.+42     	; 0x422 <__EEPROM_REGION_LENGTH__+0x22>
			{
				LCD_SetCursor(0, 0);
     3f8:	60 e0       	ldi	r22, 0x00	; 0
     3fa:	0e 94 ac 04 	call	0x958	; 0x958 <LCD_SetCursor>
				LCD_WriteString("Set Def. Rot.");
     3fe:	8d e0       	ldi	r24, 0x0D	; 13
     400:	91 e0       	ldi	r25, 0x01	; 1
     402:	0e 94 99 04 	call	0x932	; 0x932 <LCD_WriteString>
				LCD_SetCursor(1, 0);
     406:	60 e0       	ldi	r22, 0x00	; 0
     408:	81 e0       	ldi	r24, 0x01	; 1
     40a:	0e 94 ac 04 	call	0x958	; 0x958 <LCD_SetCursor>
				LCD_WriteString("Right");
     40e:	8b e1       	ldi	r24, 0x1B	; 27
     410:	91 e0       	ldi	r25, 0x01	; 1
     412:	0e 94 99 04 	call	0x932	; 0x932 <LCD_WriteString>
				lcdFlag = 1;
     416:	81 e0       	ldi	r24, 0x01	; 1
     418:	80 93 58 01 	sts	0x0158, r24	; 0x800158 <lcdFlag>
				lcdFlag2 = 0;
     41c:	10 92 57 01 	sts	0x0157, r1	; 0x800157 <lcdFlag2>
     420:	1d c0       	rjmp	.+58     	; 0x45c <__EEPROM_REGION_LENGTH__+0x5c>
			} 
			else if (lcdFlag2 == 0 && g_buttonCounter % 2 != 0)
     422:	80 91 57 01 	lds	r24, 0x0157	; 0x800157 <lcdFlag2>
     426:	81 11       	cpse	r24, r1
     428:	19 c0       	rjmp	.+50     	; 0x45c <__EEPROM_REGION_LENGTH__+0x5c>
     42a:	80 91 55 01 	lds	r24, 0x0155	; 0x800155 <g_buttonCounter>
     42e:	80 ff       	sbrs	r24, 0
     430:	15 c0       	rjmp	.+42     	; 0x45c <__EEPROM_REGION_LENGTH__+0x5c>
				{
					LCD_SetCursor(0, 0);
     432:	60 e0       	ldi	r22, 0x00	; 0
     434:	80 e0       	ldi	r24, 0x00	; 0
     436:	0e 94 ac 04 	call	0x958	; 0x958 <LCD_SetCursor>
					LCD_WriteString("Set Def. Rot.");
     43a:	8d e0       	ldi	r24, 0x0D	; 13
     43c:	91 e0       	ldi	r25, 0x01	; 1
     43e:	0e 94 99 04 	call	0x932	; 0x932 <LCD_WriteString>
					LCD_SetCursor(1, 0);
     442:	60 e0       	ldi	r22, 0x00	; 0
     444:	81 e0       	ldi	r24, 0x01	; 1
     446:	0e 94 ac 04 	call	0x958	; 0x958 <LCD_SetCursor>
					LCD_WriteString("Left ");
     44a:	81 e2       	ldi	r24, 0x21	; 33
     44c:	91 e0       	ldi	r25, 0x01	; 1
     44e:	0e 94 99 04 	call	0x932	; 0x932 <LCD_WriteString>
					lcdFlag2 = 1;
     452:	81 e0       	ldi	r24, 0x01	; 1
     454:	80 93 57 01 	sts	0x0157, r24	; 0x800157 <lcdFlag2>
					lcdFlag = 0;
     458:	10 92 58 01 	sts	0x0158, r1	; 0x800158 <lcdFlag>
	
	ovf = 0;
	mode_ovf = 156250;								//starts 5 seconds timer in ISR
	g_speed_flag = 1;
	
	while (car_mode == 0)
     45c:	80 91 75 01 	lds	r24, 0x0175	; 0x800175 <car_mode>
     460:	88 23       	and	r24, r24
     462:	09 f4       	brne	.+2      	; 0x466 <__EEPROM_REGION_LENGTH__+0x66>
     464:	a5 cf       	rjmp	.-182    	; 0x3b0 <startStage+0x8c>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     466:	2f ef       	ldi	r18, 0xFF	; 255
     468:	89 e6       	ldi	r24, 0x69	; 105
     46a:	98 e1       	ldi	r25, 0x18	; 24
     46c:	21 50       	subi	r18, 0x01	; 1
     46e:	80 40       	sbci	r24, 0x00	; 0
     470:	90 40       	sbci	r25, 0x00	; 0
     472:	e1 f7       	brne	.-8      	; 0x46c <__EEPROM_REGION_LENGTH__+0x6c>
     474:	00 c0       	rjmp	.+0      	; 0x476 <__EEPROM_REGION_LENGTH__+0x76>
     476:	00 00       	nop
					lcdFlag2 = 1;
					lcdFlag = 0;
				}
	}
	_delay_ms(1000);
	g_start_Flag = 1;
     478:	81 e0       	ldi	r24, 0x01	; 1
     47a:	80 93 60 00 	sts	0x0060, r24	; 0x800060 <__DATA_REGION_ORIGIN__>
	car_mode =0;
     47e:	10 92 75 01 	sts	0x0175, r1	; 0x800175 <car_mode>
	mode_ovf =0;
     482:	10 92 71 01 	sts	0x0171, r1	; 0x800171 <mode_ovf>
     486:	10 92 72 01 	sts	0x0172, r1	; 0x800172 <mode_ovf+0x1>
     48a:	10 92 73 01 	sts	0x0173, r1	; 0x800173 <mode_ovf+0x2>
     48e:	10 92 74 01 	sts	0x0174, r1	; 0x800174 <mode_ovf+0x3>
	g_speed_flag=0;
     492:	10 92 67 00 	sts	0x0067, r1	; 0x800067 <g_speed_flag>
	ovf = 0;
     496:	10 92 51 01 	sts	0x0151, r1	; 0x800151 <ovf>
     49a:	10 92 52 01 	sts	0x0152, r1	; 0x800152 <ovf+0x1>
     49e:	10 92 53 01 	sts	0x0153, r1	; 0x800153 <ovf+0x2>
     4a2:	10 92 54 01 	sts	0x0154, r1	; 0x800154 <ovf+0x3>
}
     4a6:	0f 90       	pop	r0
     4a8:	df 91       	pop	r29
     4aa:	cf 91       	pop	r28
     4ac:	08 95       	ret

000004ae <app_init>:



void app_init()
{
	LCD_PinsInit();
     4ae:	0e 94 25 05 	call	0xa4a	; 0xa4a <LCD_PinsInit>
	LCD_Init();
     4b2:	0e 94 77 04 	call	0x8ee	; 0x8ee <LCD_Init>
	GLOBALE_ENABLE();
     4b6:	78 94       	sei
	pwm_init();
     4b8:	0e 94 ae 09 	call	0x135c	; 0x135c <pwm_init>
	Car_Motors_init();
     4bc:	0e 94 42 05 	call	0xa84	; 0xa84 <Car_Motors_init>
	LCD_Init();
     4c0:	0e 94 77 04 	call	0x8ee	; 0x8ee <LCD_Init>
	KEYPAD_init();
     4c4:	0e 94 4d 03 	call	0x69a	; 0x69a <KEYPAD_init>
	DIO_initpin(PIND6,INPULL);
     4c8:	62 e0       	ldi	r22, 0x02	; 2
     4ca:	8e e1       	ldi	r24, 0x1E	; 30
     4cc:	0e 94 ea 05 	call	0xbd4	; 0xbd4 <DIO_initpin>
	DIO_Init_All();
     4d0:	0e 94 fb 06 	call	0xdf6	; 0xdf6 <DIO_Init_All>
	US_init();
     4d4:	0e 94 be 05 	call	0xb7c	; 0xb7c <US_init>
	TIMER_2_INT();
     4d8:	0e 94 8c 0b 	call	0x1718	; 0x1718 <TIMER_2_INT>
	TIMER2_OV_SetCallBack(Speed_50_check);
     4dc:	89 e4       	ldi	r24, 0x49	; 73
     4de:	90 e0       	ldi	r25, 0x00	; 0
     4e0:	0e 94 98 0b 	call	0x1730	; 0x1730 <TIMER2_OV_SetCallBack>
     4e4:	08 95       	ret

000004e6 <app_start>:
}

void app_start()
{
	
	startStage();
     4e6:	0e 94 92 01 	call	0x324	; 0x324 <startStage>
	
	
	while (g_start_Flag)
     4ea:	b3 c0       	rjmp	.+358    	; 0x652 <app_start+0x16c>
	{
		STOP_check ();
     4ec:	0e 94 8b 00 	call	0x116	; 0x116 <STOP_check>
		US_getdistance(&g_distance);
     4f0:	80 e8       	ldi	r24, 0x80	; 128
     4f2:	91 e0       	ldi	r25, 0x01	; 1
     4f4:	0e 94 c1 05 	call	0xb82	; 0xb82 <US_getdistance>
		if (g_distance > 70 && car_mode == 0)
     4f8:	80 91 80 01 	lds	r24, 0x0180	; 0x800180 <g_distance>
     4fc:	90 91 81 01 	lds	r25, 0x0181	; 0x800181 <g_distance+0x1>
     500:	87 34       	cpi	r24, 0x47	; 71
     502:	91 05       	cpc	r25, r1
     504:	b0 f0       	brcs	.+44     	; 0x532 <app_start+0x4c>
     506:	80 91 75 01 	lds	r24, 0x0175	; 0x800175 <car_mode>
     50a:	81 11       	cpse	r24, r1
     50c:	12 c0       	rjmp	.+36     	; 0x532 <app_start+0x4c>
		{
			car_Forward_30();
     50e:	0e 94 a8 00 	call	0x150	; 0x150 <car_Forward_30>
			g_speed_flag = 1;
     512:	81 e0       	ldi	r24, 0x01	; 1
     514:	80 93 67 00 	sts	0x0067, r24	; 0x800067 <g_speed_flag>
			mode_ovf = 156250;								//starts 5 sec. timer to increase the speed
     518:	8a e5       	ldi	r24, 0x5A	; 90
     51a:	92 e6       	ldi	r25, 0x62	; 98
     51c:	a2 e0       	ldi	r26, 0x02	; 2
     51e:	b0 e0       	ldi	r27, 0x00	; 0
     520:	80 93 71 01 	sts	0x0171, r24	; 0x800171 <mode_ovf>
     524:	90 93 72 01 	sts	0x0172, r25	; 0x800172 <mode_ovf+0x1>
     528:	a0 93 73 01 	sts	0x0173, r26	; 0x800173 <mode_ovf+0x2>
     52c:	b0 93 74 01 	sts	0x0174, r27	; 0x800174 <mode_ovf+0x3>
     530:	90 c0       	rjmp	.+288    	; 0x652 <app_start+0x16c>
		}
		else if (car_mode == 1 && g_distance > 70)
     532:	80 91 75 01 	lds	r24, 0x0175	; 0x800175 <car_mode>
     536:	81 30       	cpi	r24, 0x01	; 1
     538:	51 f4       	brne	.+20     	; 0x54e <app_start+0x68>
     53a:	80 91 80 01 	lds	r24, 0x0180	; 0x800180 <g_distance>
     53e:	90 91 81 01 	lds	r25, 0x0181	; 0x800181 <g_distance+0x1>
     542:	87 34       	cpi	r24, 0x47	; 71
     544:	91 05       	cpc	r25, r1
     546:	18 f0       	brcs	.+6      	; 0x54e <app_start+0x68>
		{
			car_Forward_50();
     548:	0e 94 ce 00 	call	0x19c	; 0x19c <car_Forward_50>
     54c:	82 c0       	rjmp	.+260    	; 0x652 <app_start+0x16c>
		}
		else if (g_distance <= 70 && g_distance > 30)
     54e:	80 91 80 01 	lds	r24, 0x0180	; 0x800180 <g_distance>
     552:	90 91 81 01 	lds	r25, 0x0181	; 0x800181 <g_distance+0x1>
     556:	87 34       	cpi	r24, 0x47	; 71
     558:	91 05       	cpc	r25, r1
     55a:	f8 f4       	brcc	.+62     	; 0x59a <app_start+0xb4>
     55c:	80 91 80 01 	lds	r24, 0x0180	; 0x800180 <g_distance>
     560:	90 91 81 01 	lds	r25, 0x0181	; 0x800181 <g_distance+0x1>
     564:	4f 97       	sbiw	r24, 0x1f	; 31
     566:	c8 f0       	brcs	.+50     	; 0x59a <app_start+0xb4>
		{
			car_mode = 0;
     568:	10 92 75 01 	sts	0x0175, r1	; 0x800175 <car_mode>
			mode_ovf=0;
     56c:	10 92 71 01 	sts	0x0171, r1	; 0x800171 <mode_ovf>
     570:	10 92 72 01 	sts	0x0172, r1	; 0x800172 <mode_ovf+0x1>
     574:	10 92 73 01 	sts	0x0173, r1	; 0x800173 <mode_ovf+0x2>
     578:	10 92 74 01 	sts	0x0174, r1	; 0x800174 <mode_ovf+0x3>
			ovf = 0;
     57c:	10 92 51 01 	sts	0x0151, r1	; 0x800151 <ovf>
     580:	10 92 52 01 	sts	0x0152, r1	; 0x800152 <ovf+0x1>
     584:	10 92 53 01 	sts	0x0153, r1	; 0x800153 <ovf+0x2>
     588:	10 92 54 01 	sts	0x0154, r1	; 0x800154 <ovf+0x3>
			g_speed_flag =0;
     58c:	10 92 67 00 	sts	0x0067, r1	; 0x800067 <g_speed_flag>
			g_Rotate_Counter = 0;
     590:	10 92 50 01 	sts	0x0150, r1	; 0x800150 <__data_end>
			car_Forward_30();
     594:	0e 94 a8 00 	call	0x150	; 0x150 <car_Forward_30>
     598:	5c c0       	rjmp	.+184    	; 0x652 <app_start+0x16c>
		}
		else if (g_distance <= 30 && g_distance > 20)
     59a:	80 91 80 01 	lds	r24, 0x0180	; 0x800180 <g_distance>
     59e:	90 91 81 01 	lds	r25, 0x0181	; 0x800181 <g_distance+0x1>
     5a2:	4f 97       	sbiw	r24, 0x1f	; 31
     5a4:	08 f0       	brcs	.+2      	; 0x5a8 <app_start+0xc2>
     5a6:	49 c0       	rjmp	.+146    	; 0x63a <app_start+0x154>
     5a8:	80 91 80 01 	lds	r24, 0x0180	; 0x800180 <g_distance>
     5ac:	90 91 81 01 	lds	r25, 0x0181	; 0x800181 <g_distance+0x1>
     5b0:	45 97       	sbiw	r24, 0x15	; 21
     5b2:	08 f4       	brcc	.+2      	; 0x5b6 <app_start+0xd0>
     5b4:	42 c0       	rjmp	.+132    	; 0x63a <app_start+0x154>
		{
			Car_Stopping();
     5b6:	0e 94 6c 01 	call	0x2d8	; 0x2d8 <Car_Stopping>
			g_speed_flag = 1;
     5ba:	81 e0       	ldi	r24, 0x01	; 1
     5bc:	80 93 67 00 	sts	0x0067, r24	; 0x800067 <g_speed_flag>
			ovf = 0;
     5c0:	10 92 51 01 	sts	0x0151, r1	; 0x800151 <ovf>
     5c4:	10 92 52 01 	sts	0x0152, r1	; 0x800152 <ovf+0x1>
     5c8:	10 92 53 01 	sts	0x0153, r1	; 0x800153 <ovf+0x2>
     5cc:	10 92 54 01 	sts	0x0154, r1	; 0x800154 <ovf+0x3>
			mode_ovf = 62500;								//starts timer for 90 degree rotation
     5d0:	84 e2       	ldi	r24, 0x24	; 36
     5d2:	94 ef       	ldi	r25, 0xF4	; 244
     5d4:	a0 e0       	ldi	r26, 0x00	; 0
     5d6:	b0 e0       	ldi	r27, 0x00	; 0
     5d8:	80 93 71 01 	sts	0x0171, r24	; 0x800171 <mode_ovf>
     5dc:	90 93 72 01 	sts	0x0172, r25	; 0x800172 <mode_ovf+0x1>
     5e0:	a0 93 73 01 	sts	0x0173, r26	; 0x800173 <mode_ovf+0x2>
     5e4:	b0 93 74 01 	sts	0x0174, r27	; 0x800174 <mode_ovf+0x3>
					
			car_Rotating();
     5e8:	0e 94 f4 00 	call	0x1e8	; 0x1e8 <car_Rotating>
						
			car_mode = 0;
     5ec:	10 92 75 01 	sts	0x0175, r1	; 0x800175 <car_mode>
			mode_ovf = 0;
     5f0:	10 92 71 01 	sts	0x0171, r1	; 0x800171 <mode_ovf>
     5f4:	10 92 72 01 	sts	0x0172, r1	; 0x800172 <mode_ovf+0x1>
     5f8:	10 92 73 01 	sts	0x0173, r1	; 0x800173 <mode_ovf+0x2>
     5fc:	10 92 74 01 	sts	0x0174, r1	; 0x800174 <mode_ovf+0x3>
			g_speed_flag = 0;
     600:	10 92 67 00 	sts	0x0067, r1	; 0x800067 <g_speed_flag>
			g_Rotate_Counter++;
     604:	80 91 50 01 	lds	r24, 0x0150	; 0x800150 <__data_end>
     608:	8f 5f       	subi	r24, 0xFF	; 255
     60a:	80 93 50 01 	sts	0x0150, r24	; 0x800150 <__data_end>
			if (g_Rotate_Counter == 4)
     60e:	84 30       	cpi	r24, 0x04	; 4
     610:	01 f5       	brne	.+64     	; 0x652 <app_start+0x16c>
     612:	06 c0       	rjmp	.+12     	; 0x620 <app_start+0x13a>
			{
				while (g_distance <= 30 && g_distance > 20)
				{
					US_getdistance(&g_distance);
     614:	80 e8       	ldi	r24, 0x80	; 128
     616:	91 e0       	ldi	r25, 0x01	; 1
     618:	0e 94 c1 05 	call	0xb82	; 0xb82 <US_getdistance>
					Car_Stopping();
     61c:	0e 94 6c 01 	call	0x2d8	; 0x2d8 <Car_Stopping>
			mode_ovf = 0;
			g_speed_flag = 0;
			g_Rotate_Counter++;
			if (g_Rotate_Counter == 4)
			{
				while (g_distance <= 30 && g_distance > 20)
     620:	80 91 80 01 	lds	r24, 0x0180	; 0x800180 <g_distance>
     624:	90 91 81 01 	lds	r25, 0x0181	; 0x800181 <g_distance+0x1>
     628:	4f 97       	sbiw	r24, 0x1f	; 31
     62a:	98 f4       	brcc	.+38     	; 0x652 <app_start+0x16c>
     62c:	80 91 80 01 	lds	r24, 0x0180	; 0x800180 <g_distance>
     630:	90 91 81 01 	lds	r25, 0x0181	; 0x800181 <g_distance+0x1>
     634:	45 97       	sbiw	r24, 0x15	; 21
     636:	70 f7       	brcc	.-36     	; 0x614 <app_start+0x12e>
     638:	0c c0       	rjmp	.+24     	; 0x652 <app_start+0x16c>
				}
				
			}
		}
		
		else if (g_distance <= 20)
     63a:	80 91 80 01 	lds	r24, 0x0180	; 0x800180 <g_distance>
     63e:	90 91 81 01 	lds	r25, 0x0181	; 0x800181 <g_distance+0x1>
     642:	45 97       	sbiw	r24, 0x15	; 21
     644:	30 f4       	brcc	.+12     	; 0x652 <app_start+0x16c>
		{
			g_Rotate_Counter = 0;
     646:	10 92 50 01 	sts	0x0150, r1	; 0x800150 <__data_end>
			Car_Stopping();
     64a:	0e 94 6c 01 	call	0x2d8	; 0x2d8 <Car_Stopping>
			car_Backword_30();
     64e:	0e 94 39 01 	call	0x272	; 0x272 <car_Backword_30>
{
	
	startStage();
	
	
	while (g_start_Flag)
     652:	80 91 60 00 	lds	r24, 0x0060	; 0x800060 <__DATA_REGION_ORIGIN__>
     656:	81 11       	cpse	r24, r1
     658:	49 cf       	rjmp	.-366    	; 0x4ec <app_start+0x6>
			g_Rotate_Counter = 0;
			Car_Stopping();
			car_Backword_30();
		}
	}
     65a:	08 95       	ret

0000065c <Is_pressed>:
     65c:	0f 93       	push	r16
     65e:	1f 93       	push	r17
     660:	cf 93       	push	r28
     662:	df 93       	push	r29
     664:	1f 92       	push	r1
     666:	cd b7       	in	r28, 0x3d	; 61
     668:	de b7       	in	r29, 0x3e	; 62
     66a:	8b 01       	movw	r16, r22
     66c:	19 82       	std	Y+1, r1	; 0x01
     66e:	be 01       	movw	r22, r28
     670:	6f 5f       	subi	r22, 0xFF	; 255
     672:	7f 4f       	sbci	r23, 0xFF	; 255
     674:	0e 94 a0 07 	call	0xf40	; 0xf40 <DIO_readpin>
     678:	81 11       	cpse	r24, r1
     67a:	05 c0       	rjmp	.+10     	; 0x686 <Is_pressed+0x2a>
     67c:	89 81       	ldd	r24, Y+1	; 0x01
     67e:	f8 01       	movw	r30, r16
     680:	80 83       	st	Z, r24
     682:	81 e0       	ldi	r24, 0x01	; 1
     684:	04 c0       	rjmp	.+8      	; 0x68e <Is_pressed+0x32>
     686:	89 81       	ldd	r24, Y+1	; 0x01
     688:	f8 01       	movw	r30, r16
     68a:	80 83       	st	Z, r24
     68c:	80 e0       	ldi	r24, 0x00	; 0
     68e:	0f 90       	pop	r0
     690:	df 91       	pop	r29
     692:	cf 91       	pop	r28
     694:	1f 91       	pop	r17
     696:	0f 91       	pop	r16
     698:	08 95       	ret

0000069a <KEYPAD_init>:
     69a:	61 e0       	ldi	r22, 0x01	; 1
     69c:	88 e1       	ldi	r24, 0x18	; 24
     69e:	0e 94 0b 07 	call	0xe16	; 0xe16 <DIO_writepin>
     6a2:	61 e0       	ldi	r22, 0x01	; 1
     6a4:	89 e1       	ldi	r24, 0x19	; 25
     6a6:	0e 94 0b 07 	call	0xe16	; 0xe16 <DIO_writepin>
     6aa:	61 e0       	ldi	r22, 0x01	; 1
     6ac:	8a e1       	ldi	r24, 0x1A	; 26
     6ae:	0e 94 0b 07 	call	0xe16	; 0xe16 <DIO_writepin>
     6b2:	61 e0       	ldi	r22, 0x01	; 1
     6b4:	84 e0       	ldi	r24, 0x04	; 4
     6b6:	0e 94 0b 07 	call	0xe16	; 0xe16 <DIO_writepin>
     6ba:	61 e0       	ldi	r22, 0x01	; 1
     6bc:	85 e0       	ldi	r24, 0x05	; 5
     6be:	0e 94 0b 07 	call	0xe16	; 0xe16 <DIO_writepin>
     6c2:	61 e0       	ldi	r22, 0x01	; 1
     6c4:	86 e0       	ldi	r24, 0x06	; 6
     6c6:	0e 94 0b 07 	call	0xe16	; 0xe16 <DIO_writepin>
     6ca:	80 e0       	ldi	r24, 0x00	; 0
     6cc:	08 95       	ret

000006ce <KEYPAD_getpressedkey>:
     6ce:	cf 92       	push	r12
     6d0:	df 92       	push	r13
     6d2:	ef 92       	push	r14
     6d4:	ff 92       	push	r15
     6d6:	0f 93       	push	r16
     6d8:	1f 93       	push	r17
     6da:	cf 93       	push	r28
     6dc:	df 93       	push	r29
     6de:	8c 01       	movw	r16, r24
     6e0:	d0 e0       	ldi	r29, 0x00	; 0
     6e2:	39 c0       	rjmp	.+114    	; 0x756 <KEYPAD_getpressedkey+0x88>
     6e4:	cd 2e       	mov	r12, r29
     6e6:	d1 2c       	mov	r13, r1
     6e8:	f6 01       	movw	r30, r12
     6ea:	ef 59       	subi	r30, 0x9F	; 159
     6ec:	ff 4f       	sbci	r31, 0xFF	; 255
     6ee:	60 e0       	ldi	r22, 0x00	; 0
     6f0:	80 81       	ld	r24, Z
     6f2:	0e 94 0b 07 	call	0xe16	; 0xe16 <DIO_writepin>
     6f6:	c0 e0       	ldi	r28, 0x00	; 0
     6f8:	24 c0       	rjmp	.+72     	; 0x742 <KEYPAD_getpressedkey+0x74>
     6fa:	ec 2e       	mov	r14, r28
     6fc:	f1 2c       	mov	r15, r1
     6fe:	f7 01       	movw	r30, r14
     700:	ec 59       	subi	r30, 0x9C	; 156
     702:	ff 4f       	sbci	r31, 0xFF	; 255
     704:	b8 01       	movw	r22, r16
     706:	80 81       	ld	r24, Z
     708:	0e 94 a0 07 	call	0xf40	; 0xf40 <DIO_readpin>
     70c:	f8 01       	movw	r30, r16
     70e:	80 81       	ld	r24, Z
     710:	81 11       	cpse	r24, r1
     712:	16 c0       	rjmp	.+44     	; 0x740 <KEYPAD_getpressedkey+0x72>
     714:	c6 01       	movw	r24, r12
     716:	88 0f       	add	r24, r24
     718:	99 1f       	adc	r25, r25
     71a:	8c 0d       	add	r24, r12
     71c:	9d 1d       	adc	r25, r13
     71e:	89 5d       	subi	r24, 0xD9	; 217
     720:	9e 4f       	sbci	r25, 0xFE	; 254
     722:	fc 01       	movw	r30, r24
     724:	ee 0d       	add	r30, r14
     726:	ff 1d       	adc	r31, r15
     728:	80 81       	ld	r24, Z
     72a:	f8 01       	movw	r30, r16
     72c:	80 83       	st	Z, r24
     72e:	f6 01       	movw	r30, r12
     730:	ef 59       	subi	r30, 0x9F	; 159
     732:	ff 4f       	sbci	r31, 0xFF	; 255
     734:	61 e0       	ldi	r22, 0x01	; 1
     736:	80 81       	ld	r24, Z
     738:	0e 94 0b 07 	call	0xe16	; 0xe16 <DIO_writepin>
     73c:	80 e0       	ldi	r24, 0x00	; 0
     73e:	0e c0       	rjmp	.+28     	; 0x75c <KEYPAD_getpressedkey+0x8e>
     740:	cf 5f       	subi	r28, 0xFF	; 255
     742:	c3 30       	cpi	r28, 0x03	; 3
     744:	d0 f2       	brcs	.-76     	; 0x6fa <KEYPAD_getpressedkey+0x2c>
     746:	f6 01       	movw	r30, r12
     748:	ef 59       	subi	r30, 0x9F	; 159
     74a:	ff 4f       	sbci	r31, 0xFF	; 255
     74c:	61 e0       	ldi	r22, 0x01	; 1
     74e:	80 81       	ld	r24, Z
     750:	0e 94 0b 07 	call	0xe16	; 0xe16 <DIO_writepin>
     754:	df 5f       	subi	r29, 0xFF	; 255
     756:	d3 30       	cpi	r29, 0x03	; 3
     758:	28 f2       	brcs	.-118    	; 0x6e4 <KEYPAD_getpressedkey+0x16>
     75a:	81 e0       	ldi	r24, 0x01	; 1
     75c:	df 91       	pop	r29
     75e:	cf 91       	pop	r28
     760:	1f 91       	pop	r17
     762:	0f 91       	pop	r16
     764:	ff 90       	pop	r15
     766:	ef 90       	pop	r14
     768:	df 90       	pop	r13
     76a:	cf 90       	pop	r12
     76c:	08 95       	ret

0000076e <WriteIns>:
     76e:	cf 93       	push	r28
     770:	c8 2f       	mov	r28, r24
     772:	60 e0       	ldi	r22, 0x00	; 0
     774:	81 e1       	ldi	r24, 0x11	; 17
     776:	0e 94 0b 07 	call	0xe16	; 0xe16 <DIO_writepin>
     77a:	6c 2f       	mov	r22, r28
     77c:	66 1f       	adc	r22, r22
     77e:	66 27       	eor	r22, r22
     780:	66 1f       	adc	r22, r22
     782:	87 e1       	ldi	r24, 0x17	; 23
     784:	0e 94 0b 07 	call	0xe16	; 0xe16 <DIO_writepin>
     788:	c6 fb       	bst	r28, 6
     78a:	66 27       	eor	r22, r22
     78c:	60 f9       	bld	r22, 0
     78e:	86 e1       	ldi	r24, 0x16	; 22
     790:	0e 94 0b 07 	call	0xe16	; 0xe16 <DIO_writepin>
     794:	c5 fb       	bst	r28, 5
     796:	66 27       	eor	r22, r22
     798:	60 f9       	bld	r22, 0
     79a:	85 e1       	ldi	r24, 0x15	; 21
     79c:	0e 94 0b 07 	call	0xe16	; 0xe16 <DIO_writepin>
     7a0:	c4 fb       	bst	r28, 4
     7a2:	66 27       	eor	r22, r22
     7a4:	60 f9       	bld	r22, 0
     7a6:	84 e1       	ldi	r24, 0x14	; 20
     7a8:	0e 94 0b 07 	call	0xe16	; 0xe16 <DIO_writepin>
     7ac:	61 e0       	ldi	r22, 0x01	; 1
     7ae:	83 e1       	ldi	r24, 0x13	; 19
     7b0:	0e 94 0b 07 	call	0xe16	; 0xe16 <DIO_writepin>
     7b4:	8f e9       	ldi	r24, 0x9F	; 159
     7b6:	9f e0       	ldi	r25, 0x0F	; 15
     7b8:	01 97       	sbiw	r24, 0x01	; 1
     7ba:	f1 f7       	brne	.-4      	; 0x7b8 <WriteIns+0x4a>
     7bc:	00 c0       	rjmp	.+0      	; 0x7be <WriteIns+0x50>
     7be:	00 00       	nop
     7c0:	60 e0       	ldi	r22, 0x00	; 0
     7c2:	83 e1       	ldi	r24, 0x13	; 19
     7c4:	0e 94 0b 07 	call	0xe16	; 0xe16 <DIO_writepin>
     7c8:	8f e9       	ldi	r24, 0x9F	; 159
     7ca:	9f e0       	ldi	r25, 0x0F	; 15
     7cc:	01 97       	sbiw	r24, 0x01	; 1
     7ce:	f1 f7       	brne	.-4      	; 0x7cc <WriteIns+0x5e>
     7d0:	00 c0       	rjmp	.+0      	; 0x7d2 <WriteIns+0x64>
     7d2:	00 00       	nop
     7d4:	c3 fb       	bst	r28, 3
     7d6:	66 27       	eor	r22, r22
     7d8:	60 f9       	bld	r22, 0
     7da:	87 e1       	ldi	r24, 0x17	; 23
     7dc:	0e 94 0b 07 	call	0xe16	; 0xe16 <DIO_writepin>
     7e0:	c2 fb       	bst	r28, 2
     7e2:	66 27       	eor	r22, r22
     7e4:	60 f9       	bld	r22, 0
     7e6:	86 e1       	ldi	r24, 0x16	; 22
     7e8:	0e 94 0b 07 	call	0xe16	; 0xe16 <DIO_writepin>
     7ec:	c1 fb       	bst	r28, 1
     7ee:	66 27       	eor	r22, r22
     7f0:	60 f9       	bld	r22, 0
     7f2:	85 e1       	ldi	r24, 0x15	; 21
     7f4:	0e 94 0b 07 	call	0xe16	; 0xe16 <DIO_writepin>
     7f8:	6c 2f       	mov	r22, r28
     7fa:	61 70       	andi	r22, 0x01	; 1
     7fc:	84 e1       	ldi	r24, 0x14	; 20
     7fe:	0e 94 0b 07 	call	0xe16	; 0xe16 <DIO_writepin>
     802:	61 e0       	ldi	r22, 0x01	; 1
     804:	83 e1       	ldi	r24, 0x13	; 19
     806:	0e 94 0b 07 	call	0xe16	; 0xe16 <DIO_writepin>
     80a:	8f e9       	ldi	r24, 0x9F	; 159
     80c:	9f e0       	ldi	r25, 0x0F	; 15
     80e:	01 97       	sbiw	r24, 0x01	; 1
     810:	f1 f7       	brne	.-4      	; 0x80e <__DATA_REGION_LENGTH__+0xe>
     812:	00 c0       	rjmp	.+0      	; 0x814 <__DATA_REGION_LENGTH__+0x14>
     814:	00 00       	nop
     816:	60 e0       	ldi	r22, 0x00	; 0
     818:	83 e1       	ldi	r24, 0x13	; 19
     81a:	0e 94 0b 07 	call	0xe16	; 0xe16 <DIO_writepin>
     81e:	8f e9       	ldi	r24, 0x9F	; 159
     820:	9f e0       	ldi	r25, 0x0F	; 15
     822:	01 97       	sbiw	r24, 0x01	; 1
     824:	f1 f7       	brne	.-4      	; 0x822 <__DATA_REGION_LENGTH__+0x22>
     826:	00 c0       	rjmp	.+0      	; 0x828 <__DATA_REGION_LENGTH__+0x28>
     828:	00 00       	nop
     82a:	cf 91       	pop	r28
     82c:	08 95       	ret

0000082e <WriteData>:
     82e:	cf 93       	push	r28
     830:	c8 2f       	mov	r28, r24
     832:	61 e0       	ldi	r22, 0x01	; 1
     834:	81 e1       	ldi	r24, 0x11	; 17
     836:	0e 94 0b 07 	call	0xe16	; 0xe16 <DIO_writepin>
     83a:	6c 2f       	mov	r22, r28
     83c:	66 1f       	adc	r22, r22
     83e:	66 27       	eor	r22, r22
     840:	66 1f       	adc	r22, r22
     842:	87 e1       	ldi	r24, 0x17	; 23
     844:	0e 94 0b 07 	call	0xe16	; 0xe16 <DIO_writepin>
     848:	c6 fb       	bst	r28, 6
     84a:	66 27       	eor	r22, r22
     84c:	60 f9       	bld	r22, 0
     84e:	86 e1       	ldi	r24, 0x16	; 22
     850:	0e 94 0b 07 	call	0xe16	; 0xe16 <DIO_writepin>
     854:	c5 fb       	bst	r28, 5
     856:	66 27       	eor	r22, r22
     858:	60 f9       	bld	r22, 0
     85a:	85 e1       	ldi	r24, 0x15	; 21
     85c:	0e 94 0b 07 	call	0xe16	; 0xe16 <DIO_writepin>
     860:	c4 fb       	bst	r28, 4
     862:	66 27       	eor	r22, r22
     864:	60 f9       	bld	r22, 0
     866:	84 e1       	ldi	r24, 0x14	; 20
     868:	0e 94 0b 07 	call	0xe16	; 0xe16 <DIO_writepin>
     86c:	61 e0       	ldi	r22, 0x01	; 1
     86e:	83 e1       	ldi	r24, 0x13	; 19
     870:	0e 94 0b 07 	call	0xe16	; 0xe16 <DIO_writepin>
     874:	8f e9       	ldi	r24, 0x9F	; 159
     876:	9f e0       	ldi	r25, 0x0F	; 15
     878:	01 97       	sbiw	r24, 0x01	; 1
     87a:	f1 f7       	brne	.-4      	; 0x878 <__stack+0x19>
     87c:	00 c0       	rjmp	.+0      	; 0x87e <__stack+0x1f>
     87e:	00 00       	nop
     880:	60 e0       	ldi	r22, 0x00	; 0
     882:	83 e1       	ldi	r24, 0x13	; 19
     884:	0e 94 0b 07 	call	0xe16	; 0xe16 <DIO_writepin>
     888:	8f e9       	ldi	r24, 0x9F	; 159
     88a:	9f e0       	ldi	r25, 0x0F	; 15
     88c:	01 97       	sbiw	r24, 0x01	; 1
     88e:	f1 f7       	brne	.-4      	; 0x88c <__stack+0x2d>
     890:	00 c0       	rjmp	.+0      	; 0x892 <__stack+0x33>
     892:	00 00       	nop
     894:	c3 fb       	bst	r28, 3
     896:	66 27       	eor	r22, r22
     898:	60 f9       	bld	r22, 0
     89a:	87 e1       	ldi	r24, 0x17	; 23
     89c:	0e 94 0b 07 	call	0xe16	; 0xe16 <DIO_writepin>
     8a0:	c2 fb       	bst	r28, 2
     8a2:	66 27       	eor	r22, r22
     8a4:	60 f9       	bld	r22, 0
     8a6:	86 e1       	ldi	r24, 0x16	; 22
     8a8:	0e 94 0b 07 	call	0xe16	; 0xe16 <DIO_writepin>
     8ac:	c1 fb       	bst	r28, 1
     8ae:	66 27       	eor	r22, r22
     8b0:	60 f9       	bld	r22, 0
     8b2:	85 e1       	ldi	r24, 0x15	; 21
     8b4:	0e 94 0b 07 	call	0xe16	; 0xe16 <DIO_writepin>
     8b8:	6c 2f       	mov	r22, r28
     8ba:	61 70       	andi	r22, 0x01	; 1
     8bc:	84 e1       	ldi	r24, 0x14	; 20
     8be:	0e 94 0b 07 	call	0xe16	; 0xe16 <DIO_writepin>
     8c2:	61 e0       	ldi	r22, 0x01	; 1
     8c4:	83 e1       	ldi	r24, 0x13	; 19
     8c6:	0e 94 0b 07 	call	0xe16	; 0xe16 <DIO_writepin>
     8ca:	8f e9       	ldi	r24, 0x9F	; 159
     8cc:	9f e0       	ldi	r25, 0x0F	; 15
     8ce:	01 97       	sbiw	r24, 0x01	; 1
     8d0:	f1 f7       	brne	.-4      	; 0x8ce <__stack+0x6f>
     8d2:	00 c0       	rjmp	.+0      	; 0x8d4 <__stack+0x75>
     8d4:	00 00       	nop
     8d6:	60 e0       	ldi	r22, 0x00	; 0
     8d8:	83 e1       	ldi	r24, 0x13	; 19
     8da:	0e 94 0b 07 	call	0xe16	; 0xe16 <DIO_writepin>
     8de:	8f e9       	ldi	r24, 0x9F	; 159
     8e0:	9f e0       	ldi	r25, 0x0F	; 15
     8e2:	01 97       	sbiw	r24, 0x01	; 1
     8e4:	f1 f7       	brne	.-4      	; 0x8e2 <__stack+0x83>
     8e6:	00 c0       	rjmp	.+0      	; 0x8e8 <__stack+0x89>
     8e8:	00 00       	nop
     8ea:	cf 91       	pop	r28
     8ec:	08 95       	ret

000008ee <LCD_Init>:
     8ee:	2f ef       	ldi	r18, 0xFF	; 255
     8f0:	80 e7       	ldi	r24, 0x70	; 112
     8f2:	92 e0       	ldi	r25, 0x02	; 2
     8f4:	21 50       	subi	r18, 0x01	; 1
     8f6:	80 40       	sbci	r24, 0x00	; 0
     8f8:	90 40       	sbci	r25, 0x00	; 0
     8fa:	e1 f7       	brne	.-8      	; 0x8f4 <LCD_Init+0x6>
     8fc:	00 c0       	rjmp	.+0      	; 0x8fe <LCD_Init+0x10>
     8fe:	00 00       	nop
     900:	82 e0       	ldi	r24, 0x02	; 2
     902:	0e 94 b7 03 	call	0x76e	; 0x76e <WriteIns>
     906:	88 e2       	ldi	r24, 0x28	; 40
     908:	0e 94 b7 03 	call	0x76e	; 0x76e <WriteIns>
     90c:	8c e0       	ldi	r24, 0x0C	; 12
     90e:	0e 94 b7 03 	call	0x76e	; 0x76e <WriteIns>
     912:	81 e0       	ldi	r24, 0x01	; 1
     914:	0e 94 b7 03 	call	0x76e	; 0x76e <WriteIns>
     918:	8f e9       	ldi	r24, 0x9F	; 159
     91a:	9f e0       	ldi	r25, 0x0F	; 15
     91c:	01 97       	sbiw	r24, 0x01	; 1
     91e:	f1 f7       	brne	.-4      	; 0x91c <LCD_Init+0x2e>
     920:	00 c0       	rjmp	.+0      	; 0x922 <LCD_Init+0x34>
     922:	00 00       	nop
     924:	86 e0       	ldi	r24, 0x06	; 6
     926:	0e 94 b7 03 	call	0x76e	; 0x76e <WriteIns>
     92a:	08 95       	ret

0000092c <LCD_WriteChar>:
     92c:	0e 94 17 04 	call	0x82e	; 0x82e <WriteData>
     930:	08 95       	ret

00000932 <LCD_WriteString>:
     932:	0f 93       	push	r16
     934:	1f 93       	push	r17
     936:	cf 93       	push	r28
     938:	8c 01       	movw	r16, r24
     93a:	c0 e0       	ldi	r28, 0x00	; 0
     93c:	03 c0       	rjmp	.+6      	; 0x944 <LCD_WriteString+0x12>
     93e:	0e 94 96 04 	call	0x92c	; 0x92c <LCD_WriteChar>
     942:	cf 5f       	subi	r28, 0xFF	; 255
     944:	f8 01       	movw	r30, r16
     946:	ec 0f       	add	r30, r28
     948:	f1 1d       	adc	r31, r1
     94a:	80 81       	ld	r24, Z
     94c:	81 11       	cpse	r24, r1
     94e:	f7 cf       	rjmp	.-18     	; 0x93e <LCD_WriteString+0xc>
     950:	cf 91       	pop	r28
     952:	1f 91       	pop	r17
     954:	0f 91       	pop	r16
     956:	08 95       	ret

00000958 <LCD_SetCursor>:
     958:	81 11       	cpse	r24, r1
     95a:	05 c0       	rjmp	.+10     	; 0x966 <LCD_SetCursor+0xe>
     95c:	86 2f       	mov	r24, r22
     95e:	80 68       	ori	r24, 0x80	; 128
     960:	0e 94 b7 03 	call	0x76e	; 0x76e <WriteIns>
     964:	08 95       	ret
     966:	81 30       	cpi	r24, 0x01	; 1
     968:	21 f4       	brne	.+8      	; 0x972 <LCD_SetCursor+0x1a>
     96a:	80 ec       	ldi	r24, 0xC0	; 192
     96c:	86 0f       	add	r24, r22
     96e:	0e 94 b7 03 	call	0x76e	; 0x76e <WriteIns>
     972:	08 95       	ret

00000974 <LCD_Clear>:
     974:	81 e0       	ldi	r24, 0x01	; 1
     976:	0e 94 b7 03 	call	0x76e	; 0x76e <WriteIns>
     97a:	8f e9       	ldi	r24, 0x9F	; 159
     97c:	9f e0       	ldi	r25, 0x0F	; 15
     97e:	01 97       	sbiw	r24, 0x01	; 1
     980:	f1 f7       	brne	.-4      	; 0x97e <LCD_Clear+0xa>
     982:	00 c0       	rjmp	.+0      	; 0x984 <LCD_Clear+0x10>
     984:	00 00       	nop
     986:	08 95       	ret

00000988 <LCD_WriteNumber>:
     988:	cf 92       	push	r12
     98a:	df 92       	push	r13
     98c:	ef 92       	push	r14
     98e:	ff 92       	push	r15
     990:	1f 93       	push	r17
     992:	cf 93       	push	r28
     994:	df 93       	push	r29
     996:	cd b7       	in	r28, 0x3d	; 61
     998:	de b7       	in	r29, 0x3e	; 62
     99a:	2a 97       	sbiw	r28, 0x0a	; 10
     99c:	0f b6       	in	r0, 0x3f	; 63
     99e:	f8 94       	cli
     9a0:	de bf       	out	0x3e, r29	; 62
     9a2:	0f be       	out	0x3f, r0	; 63
     9a4:	cd bf       	out	0x3d, r28	; 61
     9a6:	6b 01       	movw	r12, r22
     9a8:	7c 01       	movw	r14, r24
     9aa:	61 15       	cp	r22, r1
     9ac:	71 05       	cpc	r23, r1
     9ae:	81 05       	cpc	r24, r1
     9b0:	91 05       	cpc	r25, r1
     9b2:	21 f4       	brne	.+8      	; 0x9bc <LCD_WriteNumber+0x34>
     9b4:	80 e3       	ldi	r24, 0x30	; 48
     9b6:	0e 94 96 04 	call	0x92c	; 0x92c <LCD_WriteChar>
     9ba:	39 c0       	rjmp	.+114    	; 0xa2e <LCD_WriteNumber+0xa6>
     9bc:	99 23       	and	r25, r25
     9be:	5c f4       	brge	.+22     	; 0x9d6 <LCD_WriteNumber+0x4e>
     9c0:	f0 94       	com	r15
     9c2:	e0 94       	com	r14
     9c4:	d0 94       	com	r13
     9c6:	c0 94       	com	r12
     9c8:	c1 1c       	adc	r12, r1
     9ca:	d1 1c       	adc	r13, r1
     9cc:	e1 1c       	adc	r14, r1
     9ce:	f1 1c       	adc	r15, r1
     9d0:	8d e2       	ldi	r24, 0x2D	; 45
     9d2:	0e 94 96 04 	call	0x92c	; 0x92c <LCD_WriteChar>
     9d6:	10 e0       	ldi	r17, 0x00	; 0
     9d8:	15 c0       	rjmp	.+42     	; 0xa04 <LCD_WriteNumber+0x7c>
     9da:	c7 01       	movw	r24, r14
     9dc:	b6 01       	movw	r22, r12
     9de:	2a e0       	ldi	r18, 0x0A	; 10
     9e0:	30 e0       	ldi	r19, 0x00	; 0
     9e2:	40 e0       	ldi	r20, 0x00	; 0
     9e4:	50 e0       	ldi	r21, 0x00	; 0
     9e6:	0e 94 cf 0d 	call	0x1b9e	; 0x1b9e <__divmodsi4>
     9ea:	e1 e0       	ldi	r30, 0x01	; 1
     9ec:	f0 e0       	ldi	r31, 0x00	; 0
     9ee:	ec 0f       	add	r30, r28
     9f0:	fd 1f       	adc	r31, r29
     9f2:	e1 0f       	add	r30, r17
     9f4:	f1 1d       	adc	r31, r1
     9f6:	60 5d       	subi	r22, 0xD0	; 208
     9f8:	60 83       	st	Z, r22
     9fa:	1f 5f       	subi	r17, 0xFF	; 255
     9fc:	c2 2e       	mov	r12, r18
     9fe:	d3 2e       	mov	r13, r19
     a00:	e4 2e       	mov	r14, r20
     a02:	f5 2e       	mov	r15, r21
     a04:	c1 14       	cp	r12, r1
     a06:	d1 04       	cpc	r13, r1
     a08:	e1 04       	cpc	r14, r1
     a0a:	f1 04       	cpc	r15, r1
     a0c:	31 f7       	brne	.-52     	; 0x9da <LCD_WriteNumber+0x52>
     a0e:	0d c0       	rjmp	.+26     	; 0xa2a <LCD_WriteNumber+0xa2>
     a10:	e1 2f       	mov	r30, r17
     a12:	f0 e0       	ldi	r31, 0x00	; 0
     a14:	31 97       	sbiw	r30, 0x01	; 1
     a16:	81 e0       	ldi	r24, 0x01	; 1
     a18:	90 e0       	ldi	r25, 0x00	; 0
     a1a:	8c 0f       	add	r24, r28
     a1c:	9d 1f       	adc	r25, r29
     a1e:	e8 0f       	add	r30, r24
     a20:	f9 1f       	adc	r31, r25
     a22:	80 81       	ld	r24, Z
     a24:	0e 94 96 04 	call	0x92c	; 0x92c <LCD_WriteChar>
     a28:	11 50       	subi	r17, 0x01	; 1
     a2a:	11 11       	cpse	r17, r1
     a2c:	f1 cf       	rjmp	.-30     	; 0xa10 <LCD_WriteNumber+0x88>
     a2e:	2a 96       	adiw	r28, 0x0a	; 10
     a30:	0f b6       	in	r0, 0x3f	; 63
     a32:	f8 94       	cli
     a34:	de bf       	out	0x3e, r29	; 62
     a36:	0f be       	out	0x3f, r0	; 63
     a38:	cd bf       	out	0x3d, r28	; 61
     a3a:	df 91       	pop	r29
     a3c:	cf 91       	pop	r28
     a3e:	1f 91       	pop	r17
     a40:	ff 90       	pop	r15
     a42:	ef 90       	pop	r14
     a44:	df 90       	pop	r13
     a46:	cf 90       	pop	r12
     a48:	08 95       	ret

00000a4a <LCD_PinsInit>:
     a4a:	60 e0       	ldi	r22, 0x00	; 0
     a4c:	81 e1       	ldi	r24, 0x11	; 17
     a4e:	0e 94 ea 05 	call	0xbd4	; 0xbd4 <DIO_initpin>
     a52:	60 e0       	ldi	r22, 0x00	; 0
     a54:	83 e1       	ldi	r24, 0x13	; 19
     a56:	0e 94 ea 05 	call	0xbd4	; 0xbd4 <DIO_initpin>
     a5a:	60 e0       	ldi	r22, 0x00	; 0
     a5c:	82 e1       	ldi	r24, 0x12	; 18
     a5e:	0e 94 ea 05 	call	0xbd4	; 0xbd4 <DIO_initpin>
     a62:	60 e0       	ldi	r22, 0x00	; 0
     a64:	84 e1       	ldi	r24, 0x14	; 20
     a66:	0e 94 ea 05 	call	0xbd4	; 0xbd4 <DIO_initpin>
     a6a:	60 e0       	ldi	r22, 0x00	; 0
     a6c:	85 e1       	ldi	r24, 0x15	; 21
     a6e:	0e 94 ea 05 	call	0xbd4	; 0xbd4 <DIO_initpin>
     a72:	60 e0       	ldi	r22, 0x00	; 0
     a74:	86 e1       	ldi	r24, 0x16	; 22
     a76:	0e 94 ea 05 	call	0xbd4	; 0xbd4 <DIO_initpin>
     a7a:	60 e0       	ldi	r22, 0x00	; 0
     a7c:	87 e1       	ldi	r24, 0x17	; 23
     a7e:	0e 94 ea 05 	call	0xbd4	; 0xbd4 <DIO_initpin>
     a82:	08 95       	ret

00000a84 <Car_Motors_init>:
     a84:	60 e0       	ldi	r22, 0x00	; 0
     a86:	80 e0       	ldi	r24, 0x00	; 0
     a88:	0e 94 ea 05 	call	0xbd4	; 0xbd4 <DIO_initpin>
     a8c:	60 e0       	ldi	r22, 0x00	; 0
     a8e:	81 e0       	ldi	r24, 0x01	; 1
     a90:	0e 94 ea 05 	call	0xbd4	; 0xbd4 <DIO_initpin>
     a94:	60 e0       	ldi	r22, 0x00	; 0
     a96:	82 e0       	ldi	r24, 0x02	; 2
     a98:	0e 94 ea 05 	call	0xbd4	; 0xbd4 <DIO_initpin>
     a9c:	60 e0       	ldi	r22, 0x00	; 0
     a9e:	83 e0       	ldi	r24, 0x03	; 3
     aa0:	0e 94 ea 05 	call	0xbd4	; 0xbd4 <DIO_initpin>
     aa4:	80 e0       	ldi	r24, 0x00	; 0
     aa6:	08 95       	ret

00000aa8 <Car_Moving_FWD>:
     aa8:	60 e0       	ldi	r22, 0x00	; 0
     aaa:	80 e0       	ldi	r24, 0x00	; 0
     aac:	0e 94 0b 07 	call	0xe16	; 0xe16 <DIO_writepin>
     ab0:	61 e0       	ldi	r22, 0x01	; 1
     ab2:	81 e0       	ldi	r24, 0x01	; 1
     ab4:	0e 94 0b 07 	call	0xe16	; 0xe16 <DIO_writepin>
     ab8:	60 e0       	ldi	r22, 0x00	; 0
     aba:	82 e0       	ldi	r24, 0x02	; 2
     abc:	0e 94 0b 07 	call	0xe16	; 0xe16 <DIO_writepin>
     ac0:	61 e0       	ldi	r22, 0x01	; 1
     ac2:	83 e0       	ldi	r24, 0x03	; 3
     ac4:	0e 94 0b 07 	call	0xe16	; 0xe16 <DIO_writepin>
     ac8:	80 e0       	ldi	r24, 0x00	; 0
     aca:	08 95       	ret

00000acc <Car_Moving_BWD>:
     acc:	61 e0       	ldi	r22, 0x01	; 1
     ace:	80 e0       	ldi	r24, 0x00	; 0
     ad0:	0e 94 0b 07 	call	0xe16	; 0xe16 <DIO_writepin>
     ad4:	60 e0       	ldi	r22, 0x00	; 0
     ad6:	81 e0       	ldi	r24, 0x01	; 1
     ad8:	0e 94 0b 07 	call	0xe16	; 0xe16 <DIO_writepin>
     adc:	61 e0       	ldi	r22, 0x01	; 1
     ade:	82 e0       	ldi	r24, 0x02	; 2
     ae0:	0e 94 0b 07 	call	0xe16	; 0xe16 <DIO_writepin>
     ae4:	60 e0       	ldi	r22, 0x00	; 0
     ae6:	83 e0       	ldi	r24, 0x03	; 3
     ae8:	0e 94 0b 07 	call	0xe16	; 0xe16 <DIO_writepin>
     aec:	80 e0       	ldi	r24, 0x00	; 0
     aee:	08 95       	ret

00000af0 <Car_Stop>:
     af0:	60 e0       	ldi	r22, 0x00	; 0
     af2:	80 e0       	ldi	r24, 0x00	; 0
     af4:	0e 94 0b 07 	call	0xe16	; 0xe16 <DIO_writepin>
     af8:	60 e0       	ldi	r22, 0x00	; 0
     afa:	81 e0       	ldi	r24, 0x01	; 1
     afc:	0e 94 0b 07 	call	0xe16	; 0xe16 <DIO_writepin>
     b00:	60 e0       	ldi	r22, 0x00	; 0
     b02:	82 e0       	ldi	r24, 0x02	; 2
     b04:	0e 94 0b 07 	call	0xe16	; 0xe16 <DIO_writepin>
     b08:	60 e0       	ldi	r22, 0x00	; 0
     b0a:	83 e0       	ldi	r24, 0x03	; 3
     b0c:	0e 94 0b 07 	call	0xe16	; 0xe16 <DIO_writepin>
     b10:	80 e0       	ldi	r24, 0x00	; 0
     b12:	08 95       	ret

00000b14 <Car_Rotate_Right>:
     b14:	61 e0       	ldi	r22, 0x01	; 1
     b16:	80 e0       	ldi	r24, 0x00	; 0
     b18:	0e 94 0b 07 	call	0xe16	; 0xe16 <DIO_writepin>
     b1c:	60 e0       	ldi	r22, 0x00	; 0
     b1e:	81 e0       	ldi	r24, 0x01	; 1
     b20:	0e 94 0b 07 	call	0xe16	; 0xe16 <DIO_writepin>
     b24:	60 e0       	ldi	r22, 0x00	; 0
     b26:	82 e0       	ldi	r24, 0x02	; 2
     b28:	0e 94 0b 07 	call	0xe16	; 0xe16 <DIO_writepin>
     b2c:	61 e0       	ldi	r22, 0x01	; 1
     b2e:	83 e0       	ldi	r24, 0x03	; 3
     b30:	0e 94 0b 07 	call	0xe16	; 0xe16 <DIO_writepin>
     b34:	80 e0       	ldi	r24, 0x00	; 0
     b36:	08 95       	ret

00000b38 <Car_Rotate_Left>:
     b38:	60 e0       	ldi	r22, 0x00	; 0
     b3a:	80 e0       	ldi	r24, 0x00	; 0
     b3c:	0e 94 0b 07 	call	0xe16	; 0xe16 <DIO_writepin>
     b40:	61 e0       	ldi	r22, 0x01	; 1
     b42:	81 e0       	ldi	r24, 0x01	; 1
     b44:	0e 94 0b 07 	call	0xe16	; 0xe16 <DIO_writepin>
     b48:	61 e0       	ldi	r22, 0x01	; 1
     b4a:	82 e0       	ldi	r24, 0x02	; 2
     b4c:	0e 94 0b 07 	call	0xe16	; 0xe16 <DIO_writepin>
     b50:	60 e0       	ldi	r22, 0x00	; 0
     b52:	83 e0       	ldi	r24, 0x03	; 3
     b54:	0e 94 0b 07 	call	0xe16	; 0xe16 <DIO_writepin>
     b58:	80 e0       	ldi	r24, 0x00	; 0
     b5a:	08 95       	ret

00000b5c <US_trigger>:
     b5c:	61 e0       	ldi	r22, 0x01	; 1
     b5e:	8b e0       	ldi	r24, 0x0B	; 11
     b60:	0e 94 0b 07 	call	0xe16	; 0xe16 <DIO_writepin>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     b64:	8a e1       	ldi	r24, 0x1A	; 26
     b66:	8a 95       	dec	r24
     b68:	f1 f7       	brne	.-4      	; 0xb66 <US_trigger+0xa>
     b6a:	00 c0       	rjmp	.+0      	; 0xb6c <US_trigger+0x10>
     b6c:	60 e0       	ldi	r22, 0x00	; 0
     b6e:	8b e0       	ldi	r24, 0x0B	; 11
     b70:	0e 94 0b 07 	call	0xe16	; 0xe16 <DIO_writepin>
     b74:	80 e0       	ldi	r24, 0x00	; 0
     b76:	0e 94 51 0b 	call	0x16a2	; 0x16a2 <timer1_setTimerValue>
     b7a:	08 95       	ret

00000b7c <US_init>:
     b7c:	0e 94 0d 08 	call	0x101a	; 0x101a <ICU_init>
     b80:	08 95       	ret

00000b82 <US_getdistance>:
     b82:	0f 93       	push	r16
     b84:	1f 93       	push	r17
     b86:	cf 93       	push	r28
     b88:	df 93       	push	r29
     b8a:	00 d0       	rcall	.+0      	; 0xb8c <US_getdistance+0xa>
     b8c:	cd b7       	in	r28, 0x3d	; 61
     b8e:	de b7       	in	r29, 0x3e	; 62
     b90:	8c 01       	movw	r16, r24
     b92:	0e 94 ae 05 	call	0xb5c	; 0xb5c <US_trigger>
     b96:	ce 01       	movw	r24, r28
     b98:	01 96       	adiw	r24, 0x01	; 1
     b9a:	0e 94 1e 08 	call	0x103c	; 0x103c <ICU_Read>
     b9e:	29 81       	ldd	r18, Y+1	; 0x01
     ba0:	3a 81       	ldd	r19, Y+2	; 0x02
     ba2:	af e9       	ldi	r26, 0x9F	; 159
     ba4:	b6 e4       	ldi	r27, 0x46	; 70
     ba6:	0e 94 ee 0d 	call	0x1bdc	; 0x1bdc <__umulhisi3>
     baa:	92 95       	swap	r25
     bac:	82 95       	swap	r24
     bae:	8f 70       	andi	r24, 0x0F	; 15
     bb0:	89 27       	eor	r24, r25
     bb2:	9f 70       	andi	r25, 0x0F	; 15
     bb4:	89 27       	eor	r24, r25
     bb6:	f8 01       	movw	r30, r16
     bb8:	91 83       	std	Z+1, r25	; 0x01
     bba:	80 83       	st	Z, r24
     bbc:	0f 90       	pop	r0
     bbe:	0f 90       	pop	r0
     bc0:	df 91       	pop	r29
     bc2:	cf 91       	pop	r28
     bc4:	1f 91       	pop	r17
     bc6:	0f 91       	pop	r16
     bc8:	08 95       	ret

00000bca <main>:
     bca:	0e 94 57 02 	call	0x4ae	; 0x4ae <app_init>
     bce:	0e 94 73 02 	call	0x4e6	; 0x4e6 <app_start>
     bd2:	fd cf       	rjmp	.-6      	; 0xbce <main+0x4>

00000bd4 <DIO_initpin>:
     bd4:	98 2f       	mov	r25, r24
     bd6:	96 95       	lsr	r25
     bd8:	96 95       	lsr	r25
     bda:	96 95       	lsr	r25
     bdc:	87 70       	andi	r24, 0x07	; 7
     bde:	61 30       	cpi	r22, 0x01	; 1
     be0:	09 f4       	brne	.+2      	; 0xbe4 <DIO_initpin+0x10>
     be2:	59 c0       	rjmp	.+178    	; 0xc96 <DIO_initpin+0xc2>
     be4:	20 f0       	brcs	.+8      	; 0xbee <DIO_initpin+0x1a>
     be6:	62 30       	cpi	r22, 0x02	; 2
     be8:	09 f4       	brne	.+2      	; 0xbec <DIO_initpin+0x18>
     bea:	a9 c0       	rjmp	.+338    	; 0xd3e <DIO_initpin+0x16a>
     bec:	fc c0       	rjmp	.+504    	; 0xde6 <DIO_initpin+0x212>
     bee:	91 30       	cpi	r25, 0x01	; 1
     bf0:	c9 f0       	breq	.+50     	; 0xc24 <DIO_initpin+0x50>
     bf2:	28 f0       	brcs	.+10     	; 0xbfe <DIO_initpin+0x2a>
     bf4:	92 30       	cpi	r25, 0x02	; 2
     bf6:	49 f1       	breq	.+82     	; 0xc4a <DIO_initpin+0x76>
     bf8:	93 30       	cpi	r25, 0x03	; 3
     bfa:	d1 f1       	breq	.+116    	; 0xc70 <DIO_initpin+0x9c>
     bfc:	f6 c0       	rjmp	.+492    	; 0xdea <DIO_initpin+0x216>
     bfe:	4a b3       	in	r20, 0x1a	; 26
     c00:	21 e0       	ldi	r18, 0x01	; 1
     c02:	30 e0       	ldi	r19, 0x00	; 0
     c04:	b9 01       	movw	r22, r18
     c06:	02 c0       	rjmp	.+4      	; 0xc0c <DIO_initpin+0x38>
     c08:	66 0f       	add	r22, r22
     c0a:	77 1f       	adc	r23, r23
     c0c:	8a 95       	dec	r24
     c0e:	e2 f7       	brpl	.-8      	; 0xc08 <DIO_initpin+0x34>
     c10:	cb 01       	movw	r24, r22
     c12:	94 2f       	mov	r25, r20
     c14:	98 2b       	or	r25, r24
     c16:	9a bb       	out	0x1a, r25	; 26
     c18:	9b b3       	in	r25, 0x1b	; 27
     c1a:	80 95       	com	r24
     c1c:	89 23       	and	r24, r25
     c1e:	8b bb       	out	0x1b, r24	; 27
     c20:	80 e0       	ldi	r24, 0x00	; 0
     c22:	08 95       	ret
     c24:	47 b3       	in	r20, 0x17	; 23
     c26:	21 e0       	ldi	r18, 0x01	; 1
     c28:	30 e0       	ldi	r19, 0x00	; 0
     c2a:	b9 01       	movw	r22, r18
     c2c:	02 c0       	rjmp	.+4      	; 0xc32 <DIO_initpin+0x5e>
     c2e:	66 0f       	add	r22, r22
     c30:	77 1f       	adc	r23, r23
     c32:	8a 95       	dec	r24
     c34:	e2 f7       	brpl	.-8      	; 0xc2e <DIO_initpin+0x5a>
     c36:	cb 01       	movw	r24, r22
     c38:	94 2f       	mov	r25, r20
     c3a:	98 2b       	or	r25, r24
     c3c:	97 bb       	out	0x17, r25	; 23
     c3e:	98 b3       	in	r25, 0x18	; 24
     c40:	80 95       	com	r24
     c42:	89 23       	and	r24, r25
     c44:	88 bb       	out	0x18, r24	; 24
     c46:	80 e0       	ldi	r24, 0x00	; 0
     c48:	08 95       	ret
     c4a:	44 b3       	in	r20, 0x14	; 20
     c4c:	21 e0       	ldi	r18, 0x01	; 1
     c4e:	30 e0       	ldi	r19, 0x00	; 0
     c50:	b9 01       	movw	r22, r18
     c52:	02 c0       	rjmp	.+4      	; 0xc58 <DIO_initpin+0x84>
     c54:	66 0f       	add	r22, r22
     c56:	77 1f       	adc	r23, r23
     c58:	8a 95       	dec	r24
     c5a:	e2 f7       	brpl	.-8      	; 0xc54 <DIO_initpin+0x80>
     c5c:	cb 01       	movw	r24, r22
     c5e:	94 2f       	mov	r25, r20
     c60:	98 2b       	or	r25, r24
     c62:	94 bb       	out	0x14, r25	; 20
     c64:	95 b3       	in	r25, 0x15	; 21
     c66:	80 95       	com	r24
     c68:	89 23       	and	r24, r25
     c6a:	85 bb       	out	0x15, r24	; 21
     c6c:	80 e0       	ldi	r24, 0x00	; 0
     c6e:	08 95       	ret
     c70:	41 b3       	in	r20, 0x11	; 17
     c72:	21 e0       	ldi	r18, 0x01	; 1
     c74:	30 e0       	ldi	r19, 0x00	; 0
     c76:	b9 01       	movw	r22, r18
     c78:	02 c0       	rjmp	.+4      	; 0xc7e <DIO_initpin+0xaa>
     c7a:	66 0f       	add	r22, r22
     c7c:	77 1f       	adc	r23, r23
     c7e:	8a 95       	dec	r24
     c80:	e2 f7       	brpl	.-8      	; 0xc7a <DIO_initpin+0xa6>
     c82:	cb 01       	movw	r24, r22
     c84:	94 2f       	mov	r25, r20
     c86:	98 2b       	or	r25, r24
     c88:	91 bb       	out	0x11, r25	; 17
     c8a:	92 b3       	in	r25, 0x12	; 18
     c8c:	80 95       	com	r24
     c8e:	89 23       	and	r24, r25
     c90:	82 bb       	out	0x12, r24	; 18
     c92:	80 e0       	ldi	r24, 0x00	; 0
     c94:	08 95       	ret
     c96:	91 30       	cpi	r25, 0x01	; 1
     c98:	c9 f0       	breq	.+50     	; 0xccc <DIO_initpin+0xf8>
     c9a:	28 f0       	brcs	.+10     	; 0xca6 <DIO_initpin+0xd2>
     c9c:	92 30       	cpi	r25, 0x02	; 2
     c9e:	49 f1       	breq	.+82     	; 0xcf2 <DIO_initpin+0x11e>
     ca0:	93 30       	cpi	r25, 0x03	; 3
     ca2:	d1 f1       	breq	.+116    	; 0xd18 <DIO_initpin+0x144>
     ca4:	a4 c0       	rjmp	.+328    	; 0xdee <DIO_initpin+0x21a>
     ca6:	4a b3       	in	r20, 0x1a	; 26
     ca8:	21 e0       	ldi	r18, 0x01	; 1
     caa:	30 e0       	ldi	r19, 0x00	; 0
     cac:	b9 01       	movw	r22, r18
     cae:	02 c0       	rjmp	.+4      	; 0xcb4 <DIO_initpin+0xe0>
     cb0:	66 0f       	add	r22, r22
     cb2:	77 1f       	adc	r23, r23
     cb4:	8a 95       	dec	r24
     cb6:	e2 f7       	brpl	.-8      	; 0xcb0 <DIO_initpin+0xdc>
     cb8:	cb 01       	movw	r24, r22
     cba:	80 95       	com	r24
     cbc:	94 2f       	mov	r25, r20
     cbe:	98 23       	and	r25, r24
     cc0:	9a bb       	out	0x1a, r25	; 26
     cc2:	9b b3       	in	r25, 0x1b	; 27
     cc4:	89 23       	and	r24, r25
     cc6:	8b bb       	out	0x1b, r24	; 27
     cc8:	80 e0       	ldi	r24, 0x00	; 0
     cca:	08 95       	ret
     ccc:	47 b3       	in	r20, 0x17	; 23
     cce:	21 e0       	ldi	r18, 0x01	; 1
     cd0:	30 e0       	ldi	r19, 0x00	; 0
     cd2:	b9 01       	movw	r22, r18
     cd4:	02 c0       	rjmp	.+4      	; 0xcda <DIO_initpin+0x106>
     cd6:	66 0f       	add	r22, r22
     cd8:	77 1f       	adc	r23, r23
     cda:	8a 95       	dec	r24
     cdc:	e2 f7       	brpl	.-8      	; 0xcd6 <DIO_initpin+0x102>
     cde:	cb 01       	movw	r24, r22
     ce0:	80 95       	com	r24
     ce2:	94 2f       	mov	r25, r20
     ce4:	98 23       	and	r25, r24
     ce6:	97 bb       	out	0x17, r25	; 23
     ce8:	98 b3       	in	r25, 0x18	; 24
     cea:	89 23       	and	r24, r25
     cec:	88 bb       	out	0x18, r24	; 24
     cee:	80 e0       	ldi	r24, 0x00	; 0
     cf0:	08 95       	ret
     cf2:	44 b3       	in	r20, 0x14	; 20
     cf4:	21 e0       	ldi	r18, 0x01	; 1
     cf6:	30 e0       	ldi	r19, 0x00	; 0
     cf8:	b9 01       	movw	r22, r18
     cfa:	02 c0       	rjmp	.+4      	; 0xd00 <DIO_initpin+0x12c>
     cfc:	66 0f       	add	r22, r22
     cfe:	77 1f       	adc	r23, r23
     d00:	8a 95       	dec	r24
     d02:	e2 f7       	brpl	.-8      	; 0xcfc <DIO_initpin+0x128>
     d04:	cb 01       	movw	r24, r22
     d06:	80 95       	com	r24
     d08:	94 2f       	mov	r25, r20
     d0a:	98 23       	and	r25, r24
     d0c:	94 bb       	out	0x14, r25	; 20
     d0e:	95 b3       	in	r25, 0x15	; 21
     d10:	89 23       	and	r24, r25
     d12:	85 bb       	out	0x15, r24	; 21
     d14:	80 e0       	ldi	r24, 0x00	; 0
     d16:	08 95       	ret
     d18:	41 b3       	in	r20, 0x11	; 17
     d1a:	21 e0       	ldi	r18, 0x01	; 1
     d1c:	30 e0       	ldi	r19, 0x00	; 0
     d1e:	b9 01       	movw	r22, r18
     d20:	02 c0       	rjmp	.+4      	; 0xd26 <DIO_initpin+0x152>
     d22:	66 0f       	add	r22, r22
     d24:	77 1f       	adc	r23, r23
     d26:	8a 95       	dec	r24
     d28:	e2 f7       	brpl	.-8      	; 0xd22 <DIO_initpin+0x14e>
     d2a:	cb 01       	movw	r24, r22
     d2c:	80 95       	com	r24
     d2e:	94 2f       	mov	r25, r20
     d30:	98 23       	and	r25, r24
     d32:	91 bb       	out	0x11, r25	; 17
     d34:	92 b3       	in	r25, 0x12	; 18
     d36:	89 23       	and	r24, r25
     d38:	82 bb       	out	0x12, r24	; 18
     d3a:	80 e0       	ldi	r24, 0x00	; 0
     d3c:	08 95       	ret
     d3e:	91 30       	cpi	r25, 0x01	; 1
     d40:	c9 f0       	breq	.+50     	; 0xd74 <DIO_initpin+0x1a0>
     d42:	28 f0       	brcs	.+10     	; 0xd4e <DIO_initpin+0x17a>
     d44:	92 30       	cpi	r25, 0x02	; 2
     d46:	49 f1       	breq	.+82     	; 0xd9a <DIO_initpin+0x1c6>
     d48:	93 30       	cpi	r25, 0x03	; 3
     d4a:	d1 f1       	breq	.+116    	; 0xdc0 <DIO_initpin+0x1ec>
     d4c:	52 c0       	rjmp	.+164    	; 0xdf2 <DIO_initpin+0x21e>
     d4e:	4a b3       	in	r20, 0x1a	; 26
     d50:	21 e0       	ldi	r18, 0x01	; 1
     d52:	30 e0       	ldi	r19, 0x00	; 0
     d54:	b9 01       	movw	r22, r18
     d56:	02 c0       	rjmp	.+4      	; 0xd5c <DIO_initpin+0x188>
     d58:	66 0f       	add	r22, r22
     d5a:	77 1f       	adc	r23, r23
     d5c:	8a 95       	dec	r24
     d5e:	e2 f7       	brpl	.-8      	; 0xd58 <DIO_initpin+0x184>
     d60:	cb 01       	movw	r24, r22
     d62:	96 2f       	mov	r25, r22
     d64:	90 95       	com	r25
     d66:	94 23       	and	r25, r20
     d68:	9a bb       	out	0x1a, r25	; 26
     d6a:	9b b3       	in	r25, 0x1b	; 27
     d6c:	89 2b       	or	r24, r25
     d6e:	8b bb       	out	0x1b, r24	; 27
     d70:	80 e0       	ldi	r24, 0x00	; 0
     d72:	08 95       	ret
     d74:	47 b3       	in	r20, 0x17	; 23
     d76:	21 e0       	ldi	r18, 0x01	; 1
     d78:	30 e0       	ldi	r19, 0x00	; 0
     d7a:	b9 01       	movw	r22, r18
     d7c:	02 c0       	rjmp	.+4      	; 0xd82 <DIO_initpin+0x1ae>
     d7e:	66 0f       	add	r22, r22
     d80:	77 1f       	adc	r23, r23
     d82:	8a 95       	dec	r24
     d84:	e2 f7       	brpl	.-8      	; 0xd7e <DIO_initpin+0x1aa>
     d86:	cb 01       	movw	r24, r22
     d88:	96 2f       	mov	r25, r22
     d8a:	90 95       	com	r25
     d8c:	94 23       	and	r25, r20
     d8e:	97 bb       	out	0x17, r25	; 23
     d90:	98 b3       	in	r25, 0x18	; 24
     d92:	89 2b       	or	r24, r25
     d94:	88 bb       	out	0x18, r24	; 24
     d96:	80 e0       	ldi	r24, 0x00	; 0
     d98:	08 95       	ret
     d9a:	44 b3       	in	r20, 0x14	; 20
     d9c:	21 e0       	ldi	r18, 0x01	; 1
     d9e:	30 e0       	ldi	r19, 0x00	; 0
     da0:	b9 01       	movw	r22, r18
     da2:	02 c0       	rjmp	.+4      	; 0xda8 <DIO_initpin+0x1d4>
     da4:	66 0f       	add	r22, r22
     da6:	77 1f       	adc	r23, r23
     da8:	8a 95       	dec	r24
     daa:	e2 f7       	brpl	.-8      	; 0xda4 <DIO_initpin+0x1d0>
     dac:	cb 01       	movw	r24, r22
     dae:	96 2f       	mov	r25, r22
     db0:	90 95       	com	r25
     db2:	94 23       	and	r25, r20
     db4:	94 bb       	out	0x14, r25	; 20
     db6:	95 b3       	in	r25, 0x15	; 21
     db8:	89 2b       	or	r24, r25
     dba:	85 bb       	out	0x15, r24	; 21
     dbc:	80 e0       	ldi	r24, 0x00	; 0
     dbe:	08 95       	ret
     dc0:	41 b3       	in	r20, 0x11	; 17
     dc2:	21 e0       	ldi	r18, 0x01	; 1
     dc4:	30 e0       	ldi	r19, 0x00	; 0
     dc6:	b9 01       	movw	r22, r18
     dc8:	02 c0       	rjmp	.+4      	; 0xdce <DIO_initpin+0x1fa>
     dca:	66 0f       	add	r22, r22
     dcc:	77 1f       	adc	r23, r23
     dce:	8a 95       	dec	r24
     dd0:	e2 f7       	brpl	.-8      	; 0xdca <DIO_initpin+0x1f6>
     dd2:	cb 01       	movw	r24, r22
     dd4:	96 2f       	mov	r25, r22
     dd6:	90 95       	com	r25
     dd8:	94 23       	and	r25, r20
     dda:	91 bb       	out	0x11, r25	; 17
     ddc:	92 b3       	in	r25, 0x12	; 18
     dde:	89 2b       	or	r24, r25
     de0:	82 bb       	out	0x12, r24	; 18
     de2:	80 e0       	ldi	r24, 0x00	; 0
     de4:	08 95       	ret
     de6:	81 e0       	ldi	r24, 0x01	; 1
     de8:	08 95       	ret
     dea:	81 e0       	ldi	r24, 0x01	; 1
     dec:	08 95       	ret
     dee:	81 e0       	ldi	r24, 0x01	; 1
     df0:	08 95       	ret
     df2:	81 e0       	ldi	r24, 0x01	; 1
     df4:	08 95       	ret

00000df6 <DIO_Init_All>:
     df6:	cf 93       	push	r28
     df8:	c0 e0       	ldi	r28, 0x00	; 0
     dfa:	09 c0       	rjmp	.+18     	; 0xe0e <DIO_Init_All+0x18>
     dfc:	ec 2f       	mov	r30, r28
     dfe:	f0 e0       	ldi	r31, 0x00	; 0
     e00:	e0 5d       	subi	r30, 0xD0	; 208
     e02:	fe 4f       	sbci	r31, 0xFE	; 254
     e04:	60 81       	ld	r22, Z
     e06:	8c 2f       	mov	r24, r28
     e08:	0e 94 ea 05 	call	0xbd4	; 0xbd4 <DIO_initpin>
     e0c:	cf 5f       	subi	r28, 0xFF	; 255
     e0e:	c0 32       	cpi	r28, 0x20	; 32
     e10:	a8 f3       	brcs	.-22     	; 0xdfc <DIO_Init_All+0x6>
     e12:	cf 91       	pop	r28
     e14:	08 95       	ret

00000e16 <DIO_writepin>:
     e16:	98 2f       	mov	r25, r24
     e18:	96 95       	lsr	r25
     e1a:	96 95       	lsr	r25
     e1c:	96 95       	lsr	r25
     e1e:	87 70       	andi	r24, 0x07	; 7
     e20:	66 23       	and	r22, r22
     e22:	09 f4       	brne	.+2      	; 0xe26 <DIO_writepin+0x10>
     e24:	43 c0       	rjmp	.+134    	; 0xeac <DIO_writepin+0x96>
     e26:	61 30       	cpi	r22, 0x01	; 1
     e28:	09 f0       	breq	.+2      	; 0xe2c <DIO_writepin+0x16>
     e2a:	84 c0       	rjmp	.+264    	; 0xf34 <DIO_writepin+0x11e>
     e2c:	91 30       	cpi	r25, 0x01	; 1
     e2e:	a1 f0       	breq	.+40     	; 0xe58 <DIO_writepin+0x42>
     e30:	28 f0       	brcs	.+10     	; 0xe3c <DIO_writepin+0x26>
     e32:	92 30       	cpi	r25, 0x02	; 2
     e34:	f9 f0       	breq	.+62     	; 0xe74 <DIO_writepin+0x5e>
     e36:	93 30       	cpi	r25, 0x03	; 3
     e38:	59 f1       	breq	.+86     	; 0xe90 <DIO_writepin+0x7a>
     e3a:	7e c0       	rjmp	.+252    	; 0xf38 <DIO_writepin+0x122>
     e3c:	4b b3       	in	r20, 0x1b	; 27
     e3e:	21 e0       	ldi	r18, 0x01	; 1
     e40:	30 e0       	ldi	r19, 0x00	; 0
     e42:	b9 01       	movw	r22, r18
     e44:	02 c0       	rjmp	.+4      	; 0xe4a <DIO_writepin+0x34>
     e46:	66 0f       	add	r22, r22
     e48:	77 1f       	adc	r23, r23
     e4a:	8a 95       	dec	r24
     e4c:	e2 f7       	brpl	.-8      	; 0xe46 <DIO_writepin+0x30>
     e4e:	cb 01       	movw	r24, r22
     e50:	84 2b       	or	r24, r20
     e52:	8b bb       	out	0x1b, r24	; 27
     e54:	80 e0       	ldi	r24, 0x00	; 0
     e56:	08 95       	ret
     e58:	48 b3       	in	r20, 0x18	; 24
     e5a:	21 e0       	ldi	r18, 0x01	; 1
     e5c:	30 e0       	ldi	r19, 0x00	; 0
     e5e:	b9 01       	movw	r22, r18
     e60:	02 c0       	rjmp	.+4      	; 0xe66 <DIO_writepin+0x50>
     e62:	66 0f       	add	r22, r22
     e64:	77 1f       	adc	r23, r23
     e66:	8a 95       	dec	r24
     e68:	e2 f7       	brpl	.-8      	; 0xe62 <DIO_writepin+0x4c>
     e6a:	cb 01       	movw	r24, r22
     e6c:	84 2b       	or	r24, r20
     e6e:	88 bb       	out	0x18, r24	; 24
     e70:	80 e0       	ldi	r24, 0x00	; 0
     e72:	08 95       	ret
     e74:	45 b3       	in	r20, 0x15	; 21
     e76:	21 e0       	ldi	r18, 0x01	; 1
     e78:	30 e0       	ldi	r19, 0x00	; 0
     e7a:	b9 01       	movw	r22, r18
     e7c:	02 c0       	rjmp	.+4      	; 0xe82 <DIO_writepin+0x6c>
     e7e:	66 0f       	add	r22, r22
     e80:	77 1f       	adc	r23, r23
     e82:	8a 95       	dec	r24
     e84:	e2 f7       	brpl	.-8      	; 0xe7e <DIO_writepin+0x68>
     e86:	cb 01       	movw	r24, r22
     e88:	84 2b       	or	r24, r20
     e8a:	85 bb       	out	0x15, r24	; 21
     e8c:	80 e0       	ldi	r24, 0x00	; 0
     e8e:	08 95       	ret
     e90:	42 b3       	in	r20, 0x12	; 18
     e92:	21 e0       	ldi	r18, 0x01	; 1
     e94:	30 e0       	ldi	r19, 0x00	; 0
     e96:	b9 01       	movw	r22, r18
     e98:	02 c0       	rjmp	.+4      	; 0xe9e <DIO_writepin+0x88>
     e9a:	66 0f       	add	r22, r22
     e9c:	77 1f       	adc	r23, r23
     e9e:	8a 95       	dec	r24
     ea0:	e2 f7       	brpl	.-8      	; 0xe9a <DIO_writepin+0x84>
     ea2:	cb 01       	movw	r24, r22
     ea4:	84 2b       	or	r24, r20
     ea6:	82 bb       	out	0x12, r24	; 18
     ea8:	80 e0       	ldi	r24, 0x00	; 0
     eaa:	08 95       	ret
     eac:	91 30       	cpi	r25, 0x01	; 1
     eae:	a9 f0       	breq	.+42     	; 0xeda <DIO_writepin+0xc4>
     eb0:	28 f0       	brcs	.+10     	; 0xebc <DIO_writepin+0xa6>
     eb2:	92 30       	cpi	r25, 0x02	; 2
     eb4:	09 f1       	breq	.+66     	; 0xef8 <DIO_writepin+0xe2>
     eb6:	93 30       	cpi	r25, 0x03	; 3
     eb8:	71 f1       	breq	.+92     	; 0xf16 <DIO_writepin+0x100>
     eba:	40 c0       	rjmp	.+128    	; 0xf3c <DIO_writepin+0x126>
     ebc:	4b b3       	in	r20, 0x1b	; 27
     ebe:	21 e0       	ldi	r18, 0x01	; 1
     ec0:	30 e0       	ldi	r19, 0x00	; 0
     ec2:	b9 01       	movw	r22, r18
     ec4:	02 c0       	rjmp	.+4      	; 0xeca <DIO_writepin+0xb4>
     ec6:	66 0f       	add	r22, r22
     ec8:	77 1f       	adc	r23, r23
     eca:	8a 95       	dec	r24
     ecc:	e2 f7       	brpl	.-8      	; 0xec6 <DIO_writepin+0xb0>
     ece:	cb 01       	movw	r24, r22
     ed0:	80 95       	com	r24
     ed2:	84 23       	and	r24, r20
     ed4:	8b bb       	out	0x1b, r24	; 27
     ed6:	80 e0       	ldi	r24, 0x00	; 0
     ed8:	08 95       	ret
     eda:	48 b3       	in	r20, 0x18	; 24
     edc:	21 e0       	ldi	r18, 0x01	; 1
     ede:	30 e0       	ldi	r19, 0x00	; 0
     ee0:	b9 01       	movw	r22, r18
     ee2:	02 c0       	rjmp	.+4      	; 0xee8 <DIO_writepin+0xd2>
     ee4:	66 0f       	add	r22, r22
     ee6:	77 1f       	adc	r23, r23
     ee8:	8a 95       	dec	r24
     eea:	e2 f7       	brpl	.-8      	; 0xee4 <DIO_writepin+0xce>
     eec:	cb 01       	movw	r24, r22
     eee:	80 95       	com	r24
     ef0:	84 23       	and	r24, r20
     ef2:	88 bb       	out	0x18, r24	; 24
     ef4:	80 e0       	ldi	r24, 0x00	; 0
     ef6:	08 95       	ret
     ef8:	45 b3       	in	r20, 0x15	; 21
     efa:	21 e0       	ldi	r18, 0x01	; 1
     efc:	30 e0       	ldi	r19, 0x00	; 0
     efe:	b9 01       	movw	r22, r18
     f00:	02 c0       	rjmp	.+4      	; 0xf06 <DIO_writepin+0xf0>
     f02:	66 0f       	add	r22, r22
     f04:	77 1f       	adc	r23, r23
     f06:	8a 95       	dec	r24
     f08:	e2 f7       	brpl	.-8      	; 0xf02 <DIO_writepin+0xec>
     f0a:	cb 01       	movw	r24, r22
     f0c:	80 95       	com	r24
     f0e:	84 23       	and	r24, r20
     f10:	85 bb       	out	0x15, r24	; 21
     f12:	80 e0       	ldi	r24, 0x00	; 0
     f14:	08 95       	ret
     f16:	42 b3       	in	r20, 0x12	; 18
     f18:	21 e0       	ldi	r18, 0x01	; 1
     f1a:	30 e0       	ldi	r19, 0x00	; 0
     f1c:	b9 01       	movw	r22, r18
     f1e:	02 c0       	rjmp	.+4      	; 0xf24 <DIO_writepin+0x10e>
     f20:	66 0f       	add	r22, r22
     f22:	77 1f       	adc	r23, r23
     f24:	8a 95       	dec	r24
     f26:	e2 f7       	brpl	.-8      	; 0xf20 <DIO_writepin+0x10a>
     f28:	cb 01       	movw	r24, r22
     f2a:	80 95       	com	r24
     f2c:	84 23       	and	r24, r20
     f2e:	82 bb       	out	0x12, r24	; 18
     f30:	80 e0       	ldi	r24, 0x00	; 0
     f32:	08 95       	ret
     f34:	83 e0       	ldi	r24, 0x03	; 3
     f36:	08 95       	ret
     f38:	81 e0       	ldi	r24, 0x01	; 1
     f3a:	08 95       	ret
     f3c:	81 e0       	ldi	r24, 0x01	; 1
     f3e:	08 95       	ret

00000f40 <DIO_readpin>:
     f40:	98 2f       	mov	r25, r24
     f42:	96 95       	lsr	r25
     f44:	96 95       	lsr	r25
     f46:	96 95       	lsr	r25
     f48:	87 70       	andi	r24, 0x07	; 7
     f4a:	91 30       	cpi	r25, 0x01	; 1
     f4c:	a1 f0       	breq	.+40     	; 0xf76 <DIO_readpin+0x36>
     f4e:	28 f0       	brcs	.+10     	; 0xf5a <DIO_readpin+0x1a>
     f50:	92 30       	cpi	r25, 0x02	; 2
     f52:	f9 f0       	breq	.+62     	; 0xf92 <DIO_readpin+0x52>
     f54:	93 30       	cpi	r25, 0x03	; 3
     f56:	59 f1       	breq	.+86     	; 0xfae <DIO_readpin+0x6e>
     f58:	38 c0       	rjmp	.+112    	; 0xfca <DIO_readpin+0x8a>
     f5a:	29 b3       	in	r18, 0x19	; 25
     f5c:	30 e0       	ldi	r19, 0x00	; 0
     f5e:	a9 01       	movw	r20, r18
     f60:	02 c0       	rjmp	.+4      	; 0xf66 <DIO_readpin+0x26>
     f62:	55 95       	asr	r21
     f64:	47 95       	ror	r20
     f66:	8a 95       	dec	r24
     f68:	e2 f7       	brpl	.-8      	; 0xf62 <DIO_readpin+0x22>
     f6a:	ca 01       	movw	r24, r20
     f6c:	81 70       	andi	r24, 0x01	; 1
     f6e:	fb 01       	movw	r30, r22
     f70:	80 83       	st	Z, r24
     f72:	80 e0       	ldi	r24, 0x00	; 0
     f74:	08 95       	ret
     f76:	26 b3       	in	r18, 0x16	; 22
     f78:	30 e0       	ldi	r19, 0x00	; 0
     f7a:	a9 01       	movw	r20, r18
     f7c:	02 c0       	rjmp	.+4      	; 0xf82 <DIO_readpin+0x42>
     f7e:	55 95       	asr	r21
     f80:	47 95       	ror	r20
     f82:	8a 95       	dec	r24
     f84:	e2 f7       	brpl	.-8      	; 0xf7e <DIO_readpin+0x3e>
     f86:	ca 01       	movw	r24, r20
     f88:	81 70       	andi	r24, 0x01	; 1
     f8a:	fb 01       	movw	r30, r22
     f8c:	80 83       	st	Z, r24
     f8e:	80 e0       	ldi	r24, 0x00	; 0
     f90:	08 95       	ret
     f92:	23 b3       	in	r18, 0x13	; 19
     f94:	30 e0       	ldi	r19, 0x00	; 0
     f96:	a9 01       	movw	r20, r18
     f98:	02 c0       	rjmp	.+4      	; 0xf9e <DIO_readpin+0x5e>
     f9a:	55 95       	asr	r21
     f9c:	47 95       	ror	r20
     f9e:	8a 95       	dec	r24
     fa0:	e2 f7       	brpl	.-8      	; 0xf9a <DIO_readpin+0x5a>
     fa2:	ca 01       	movw	r24, r20
     fa4:	81 70       	andi	r24, 0x01	; 1
     fa6:	fb 01       	movw	r30, r22
     fa8:	80 83       	st	Z, r24
     faa:	80 e0       	ldi	r24, 0x00	; 0
     fac:	08 95       	ret
     fae:	20 b3       	in	r18, 0x10	; 16
     fb0:	30 e0       	ldi	r19, 0x00	; 0
     fb2:	a9 01       	movw	r20, r18
     fb4:	02 c0       	rjmp	.+4      	; 0xfba <DIO_readpin+0x7a>
     fb6:	55 95       	asr	r21
     fb8:	47 95       	ror	r20
     fba:	8a 95       	dec	r24
     fbc:	e2 f7       	brpl	.-8      	; 0xfb6 <DIO_readpin+0x76>
     fbe:	ca 01       	movw	r24, r20
     fc0:	81 70       	andi	r24, 0x01	; 1
     fc2:	fb 01       	movw	r30, r22
     fc4:	80 83       	st	Z, r24
     fc6:	80 e0       	ldi	r24, 0x00	; 0
     fc8:	08 95       	ret
     fca:	81 e0       	ldi	r24, 0x01	; 1
     fcc:	08 95       	ret

00000fce <ICU_Read_callbackfun>:
     fce:	80 91 59 01 	lds	r24, 0x0159	; 0x800159 <ICU_flag>
     fd2:	90 91 5a 01 	lds	r25, 0x015A	; 0x80015a <ICU_flag+0x1>
     fd6:	89 2b       	or	r24, r25
     fd8:	79 f4       	brne	.+30     	; 0xff8 <ICU_Read_callbackfun+0x2a>
     fda:	8d e5       	ldi	r24, 0x5D	; 93
     fdc:	91 e0       	ldi	r25, 0x01	; 1
     fde:	0e 94 4b 0b 	call	0x1696	; 0x1696 <timer1_ReadCounts>
     fe2:	62 e0       	ldi	r22, 0x02	; 2
     fe4:	82 e0       	ldi	r24, 0x02	; 2
     fe6:	0e 94 6b 08 	call	0x10d6	; 0x10d6 <EXI_TriggerEdge>
     fea:	81 e0       	ldi	r24, 0x01	; 1
     fec:	90 e0       	ldi	r25, 0x00	; 0
     fee:	90 93 5a 01 	sts	0x015A, r25	; 0x80015a <ICU_flag+0x1>
     ff2:	80 93 59 01 	sts	0x0159, r24	; 0x800159 <ICU_flag>
     ff6:	08 95       	ret
     ff8:	80 91 59 01 	lds	r24, 0x0159	; 0x800159 <ICU_flag>
     ffc:	90 91 5a 01 	lds	r25, 0x015A	; 0x80015a <ICU_flag+0x1>
    1000:	01 97       	sbiw	r24, 0x01	; 1
    1002:	51 f4       	brne	.+20     	; 0x1018 <ICU_Read_callbackfun+0x4a>
    1004:	8b e5       	ldi	r24, 0x5B	; 91
    1006:	91 e0       	ldi	r25, 0x01	; 1
    1008:	0e 94 4b 0b 	call	0x1696	; 0x1696 <timer1_ReadCounts>
    100c:	82 e0       	ldi	r24, 0x02	; 2
    100e:	90 e0       	ldi	r25, 0x00	; 0
    1010:	90 93 5a 01 	sts	0x015A, r25	; 0x80015a <ICU_flag+0x1>
    1014:	80 93 59 01 	sts	0x0159, r24	; 0x800159 <ICU_flag>
    1018:	08 95       	ret

0000101a <ICU_init>:
    101a:	62 e0       	ldi	r22, 0x02	; 2
    101c:	80 e0       	ldi	r24, 0x00	; 0
    101e:	0e 94 7c 0a 	call	0x14f8	; 0x14f8 <Timer1_Init>
    1022:	82 e0       	ldi	r24, 0x02	; 2
    1024:	0e 94 59 08 	call	0x10b2	; 0x10b2 <EXI_Enable>
    1028:	63 e0       	ldi	r22, 0x03	; 3
    102a:	82 e0       	ldi	r24, 0x02	; 2
    102c:	0e 94 6b 08 	call	0x10d6	; 0x10d6 <EXI_TriggerEdge>
    1030:	67 ee       	ldi	r22, 0xE7	; 231
    1032:	77 e0       	ldi	r23, 0x07	; 7
    1034:	82 e0       	ldi	r24, 0x02	; 2
    1036:	0e 94 cb 08 	call	0x1196	; 0x1196 <EXI_SetCallBack>
    103a:	08 95       	ret

0000103c <ICU_Read>:
    103c:	0f 93       	push	r16
    103e:	1f 93       	push	r17
    1040:	cf 93       	push	r28
    1042:	df 93       	push	r29
    1044:	8c 01       	movw	r16, r24
    1046:	63 e0       	ldi	r22, 0x03	; 3
    1048:	82 e0       	ldi	r24, 0x02	; 2
    104a:	0e 94 6b 08 	call	0x10d6	; 0x10d6 <EXI_TriggerEdge>
    104e:	80 e0       	ldi	r24, 0x00	; 0
    1050:	0e 94 51 0b 	call	0x16a2	; 0x16a2 <timer1_setTimerValue>
    1054:	10 92 5a 01 	sts	0x015A, r1	; 0x80015a <ICU_flag+0x1>
    1058:	10 92 59 01 	sts	0x0159, r1	; 0x800159 <ICU_flag>
    105c:	05 c0       	rjmp	.+10     	; 0x1068 <ICU_Read+0x2c>
    105e:	21 96       	adiw	r28, 0x01	; 1
    1060:	82 e0       	ldi	r24, 0x02	; 2
    1062:	8a 95       	dec	r24
    1064:	f1 f7       	brne	.-4      	; 0x1062 <ICU_Read+0x26>
    1066:	00 c0       	rjmp	.+0      	; 0x1068 <ICU_Read+0x2c>
    1068:	80 91 59 01 	lds	r24, 0x0159	; 0x800159 <ICU_flag>
    106c:	90 91 5a 01 	lds	r25, 0x015A	; 0x80015a <ICU_flag+0x1>
    1070:	02 97       	sbiw	r24, 0x02	; 2
    1072:	20 f4       	brcc	.+8      	; 0x107c <ICU_Read+0x40>
    1074:	c8 3d       	cpi	r28, 0xD8	; 216
    1076:	e9 e5       	ldi	r30, 0x59	; 89
    1078:	de 07       	cpc	r29, r30
    107a:	88 f3       	brcs	.-30     	; 0x105e <ICU_Read+0x22>
    107c:	80 91 59 01 	lds	r24, 0x0159	; 0x800159 <ICU_flag>
    1080:	90 91 5a 01 	lds	r25, 0x015A	; 0x80015a <ICU_flag+0x1>
    1084:	02 97       	sbiw	r24, 0x02	; 2
    1086:	79 f4       	brne	.+30     	; 0x10a6 <ICU_Read+0x6a>
    1088:	80 91 5b 01 	lds	r24, 0x015B	; 0x80015b <t2>
    108c:	90 91 5c 01 	lds	r25, 0x015C	; 0x80015c <t2+0x1>
    1090:	20 91 5d 01 	lds	r18, 0x015D	; 0x80015d <t1>
    1094:	30 91 5e 01 	lds	r19, 0x015E	; 0x80015e <t1+0x1>
    1098:	82 1b       	sub	r24, r18
    109a:	93 0b       	sbc	r25, r19
    109c:	f8 01       	movw	r30, r16
    109e:	91 83       	std	Z+1, r25	; 0x01
    10a0:	80 83       	st	Z, r24
    10a2:	81 e0       	ldi	r24, 0x01	; 1
    10a4:	01 c0       	rjmp	.+2      	; 0x10a8 <ICU_Read+0x6c>
    10a6:	80 e0       	ldi	r24, 0x00	; 0
    10a8:	df 91       	pop	r29
    10aa:	cf 91       	pop	r28
    10ac:	1f 91       	pop	r17
    10ae:	0f 91       	pop	r16
    10b0:	08 95       	ret

000010b2 <EXI_Enable>:
    10b2:	81 30       	cpi	r24, 0x01	; 1
    10b4:	41 f0       	breq	.+16     	; 0x10c6 <EXI_Enable+0x14>
    10b6:	18 f0       	brcs	.+6      	; 0x10be <EXI_Enable+0xc>
    10b8:	82 30       	cpi	r24, 0x02	; 2
    10ba:	49 f0       	breq	.+18     	; 0x10ce <EXI_Enable+0x1c>
    10bc:	08 95       	ret
    10be:	8b b7       	in	r24, 0x3b	; 59
    10c0:	80 64       	ori	r24, 0x40	; 64
    10c2:	8b bf       	out	0x3b, r24	; 59
    10c4:	08 95       	ret
    10c6:	8b b7       	in	r24, 0x3b	; 59
    10c8:	80 68       	ori	r24, 0x80	; 128
    10ca:	8b bf       	out	0x3b, r24	; 59
    10cc:	08 95       	ret
    10ce:	8b b7       	in	r24, 0x3b	; 59
    10d0:	80 62       	ori	r24, 0x20	; 32
    10d2:	8b bf       	out	0x3b, r24	; 59
    10d4:	08 95       	ret

000010d6 <EXI_TriggerEdge>:
    10d6:	81 30       	cpi	r24, 0x01	; 1
    10d8:	49 f1       	breq	.+82     	; 0x112c <EXI_TriggerEdge+0x56>
    10da:	20 f0       	brcs	.+8      	; 0x10e4 <EXI_TriggerEdge+0xe>
    10dc:	82 30       	cpi	r24, 0x02	; 2
    10de:	09 f4       	brne	.+2      	; 0x10e2 <EXI_TriggerEdge+0xc>
    10e0:	49 c0       	rjmp	.+146    	; 0x1174 <EXI_TriggerEdge+0x9e>
    10e2:	08 95       	ret
    10e4:	61 30       	cpi	r22, 0x01	; 1
    10e6:	69 f0       	breq	.+26     	; 0x1102 <EXI_TriggerEdge+0x2c>
    10e8:	28 f0       	brcs	.+10     	; 0x10f4 <EXI_TriggerEdge+0x1e>
    10ea:	62 30       	cpi	r22, 0x02	; 2
    10ec:	89 f0       	breq	.+34     	; 0x1110 <EXI_TriggerEdge+0x3a>
    10ee:	63 30       	cpi	r22, 0x03	; 3
    10f0:	b1 f0       	breq	.+44     	; 0x111e <EXI_TriggerEdge+0x48>
    10f2:	08 95       	ret
    10f4:	85 b7       	in	r24, 0x35	; 53
    10f6:	8e 7f       	andi	r24, 0xFE	; 254
    10f8:	85 bf       	out	0x35, r24	; 53
    10fa:	85 b7       	in	r24, 0x35	; 53
    10fc:	8d 7f       	andi	r24, 0xFD	; 253
    10fe:	85 bf       	out	0x35, r24	; 53
    1100:	08 95       	ret
    1102:	85 b7       	in	r24, 0x35	; 53
    1104:	81 60       	ori	r24, 0x01	; 1
    1106:	85 bf       	out	0x35, r24	; 53
    1108:	85 b7       	in	r24, 0x35	; 53
    110a:	8d 7f       	andi	r24, 0xFD	; 253
    110c:	85 bf       	out	0x35, r24	; 53
    110e:	08 95       	ret
    1110:	85 b7       	in	r24, 0x35	; 53
    1112:	8e 7f       	andi	r24, 0xFE	; 254
    1114:	85 bf       	out	0x35, r24	; 53
    1116:	85 b7       	in	r24, 0x35	; 53
    1118:	82 60       	ori	r24, 0x02	; 2
    111a:	85 bf       	out	0x35, r24	; 53
    111c:	08 95       	ret
    111e:	85 b7       	in	r24, 0x35	; 53
    1120:	81 60       	ori	r24, 0x01	; 1
    1122:	85 bf       	out	0x35, r24	; 53
    1124:	85 b7       	in	r24, 0x35	; 53
    1126:	82 60       	ori	r24, 0x02	; 2
    1128:	85 bf       	out	0x35, r24	; 53
    112a:	08 95       	ret
    112c:	61 30       	cpi	r22, 0x01	; 1
    112e:	69 f0       	breq	.+26     	; 0x114a <EXI_TriggerEdge+0x74>
    1130:	28 f0       	brcs	.+10     	; 0x113c <EXI_TriggerEdge+0x66>
    1132:	62 30       	cpi	r22, 0x02	; 2
    1134:	89 f0       	breq	.+34     	; 0x1158 <EXI_TriggerEdge+0x82>
    1136:	63 30       	cpi	r22, 0x03	; 3
    1138:	b1 f0       	breq	.+44     	; 0x1166 <EXI_TriggerEdge+0x90>
    113a:	08 95       	ret
    113c:	85 b7       	in	r24, 0x35	; 53
    113e:	8b 7f       	andi	r24, 0xFB	; 251
    1140:	85 bf       	out	0x35, r24	; 53
    1142:	85 b7       	in	r24, 0x35	; 53
    1144:	87 7f       	andi	r24, 0xF7	; 247
    1146:	85 bf       	out	0x35, r24	; 53
    1148:	08 95       	ret
    114a:	85 b7       	in	r24, 0x35	; 53
    114c:	84 60       	ori	r24, 0x04	; 4
    114e:	85 bf       	out	0x35, r24	; 53
    1150:	85 b7       	in	r24, 0x35	; 53
    1152:	87 7f       	andi	r24, 0xF7	; 247
    1154:	85 bf       	out	0x35, r24	; 53
    1156:	08 95       	ret
    1158:	85 b7       	in	r24, 0x35	; 53
    115a:	8b 7f       	andi	r24, 0xFB	; 251
    115c:	85 bf       	out	0x35, r24	; 53
    115e:	85 b7       	in	r24, 0x35	; 53
    1160:	88 60       	ori	r24, 0x08	; 8
    1162:	85 bf       	out	0x35, r24	; 53
    1164:	08 95       	ret
    1166:	85 b7       	in	r24, 0x35	; 53
    1168:	84 60       	ori	r24, 0x04	; 4
    116a:	85 bf       	out	0x35, r24	; 53
    116c:	85 b7       	in	r24, 0x35	; 53
    116e:	88 60       	ori	r24, 0x08	; 8
    1170:	85 bf       	out	0x35, r24	; 53
    1172:	08 95       	ret
    1174:	62 30       	cpi	r22, 0x02	; 2
    1176:	19 f0       	breq	.+6      	; 0x117e <EXI_TriggerEdge+0xa8>
    1178:	63 30       	cpi	r22, 0x03	; 3
    117a:	29 f0       	breq	.+10     	; 0x1186 <EXI_TriggerEdge+0xb0>
    117c:	08 c0       	rjmp	.+16     	; 0x118e <EXI_TriggerEdge+0xb8>
    117e:	84 b7       	in	r24, 0x34	; 52
    1180:	8f 7b       	andi	r24, 0xBF	; 191
    1182:	84 bf       	out	0x34, r24	; 52
    1184:	08 95       	ret
    1186:	84 b7       	in	r24, 0x34	; 52
    1188:	80 64       	ori	r24, 0x40	; 64
    118a:	84 bf       	out	0x34, r24	; 52
    118c:	08 95       	ret
    118e:	84 b7       	in	r24, 0x34	; 52
    1190:	8f 7b       	andi	r24, 0xBF	; 191
    1192:	84 bf       	out	0x34, r24	; 52
    1194:	08 95       	ret

00001196 <EXI_SetCallBack>:
    1196:	81 30       	cpi	r24, 0x01	; 1
    1198:	49 f0       	breq	.+18     	; 0x11ac <EXI_SetCallBack+0x16>
    119a:	18 f0       	brcs	.+6      	; 0x11a2 <EXI_SetCallBack+0xc>
    119c:	82 30       	cpi	r24, 0x02	; 2
    119e:	59 f0       	breq	.+22     	; 0x11b6 <EXI_SetCallBack+0x20>
    11a0:	08 95       	ret
    11a2:	70 93 64 01 	sts	0x0164, r23	; 0x800164 <INT0_Fptr+0x1>
    11a6:	60 93 63 01 	sts	0x0163, r22	; 0x800163 <INT0_Fptr>
    11aa:	08 95       	ret
    11ac:	70 93 62 01 	sts	0x0162, r23	; 0x800162 <INT1_Fptr+0x1>
    11b0:	60 93 61 01 	sts	0x0161, r22	; 0x800161 <INT1_Fptr>
    11b4:	08 95       	ret
    11b6:	70 93 60 01 	sts	0x0160, r23	; 0x800160 <INT2_Fptr+0x1>
    11ba:	60 93 5f 01 	sts	0x015F, r22	; 0x80015f <INT2_Fptr>
    11be:	08 95       	ret

000011c0 <__vector_1>:
    11c0:	1f 92       	push	r1
    11c2:	0f 92       	push	r0
    11c4:	0f b6       	in	r0, 0x3f	; 63
    11c6:	0f 92       	push	r0
    11c8:	11 24       	eor	r1, r1
    11ca:	2f 93       	push	r18
    11cc:	3f 93       	push	r19
    11ce:	4f 93       	push	r20
    11d0:	5f 93       	push	r21
    11d2:	6f 93       	push	r22
    11d4:	7f 93       	push	r23
    11d6:	8f 93       	push	r24
    11d8:	9f 93       	push	r25
    11da:	af 93       	push	r26
    11dc:	bf 93       	push	r27
    11de:	ef 93       	push	r30
    11e0:	ff 93       	push	r31
    11e2:	e0 91 63 01 	lds	r30, 0x0163	; 0x800163 <INT0_Fptr>
    11e6:	f0 91 64 01 	lds	r31, 0x0164	; 0x800164 <INT0_Fptr+0x1>
    11ea:	30 97       	sbiw	r30, 0x00	; 0
    11ec:	09 f0       	breq	.+2      	; 0x11f0 <__vector_1+0x30>
    11ee:	09 95       	icall
    11f0:	ff 91       	pop	r31
    11f2:	ef 91       	pop	r30
    11f4:	bf 91       	pop	r27
    11f6:	af 91       	pop	r26
    11f8:	9f 91       	pop	r25
    11fa:	8f 91       	pop	r24
    11fc:	7f 91       	pop	r23
    11fe:	6f 91       	pop	r22
    1200:	5f 91       	pop	r21
    1202:	4f 91       	pop	r20
    1204:	3f 91       	pop	r19
    1206:	2f 91       	pop	r18
    1208:	0f 90       	pop	r0
    120a:	0f be       	out	0x3f, r0	; 63
    120c:	0f 90       	pop	r0
    120e:	1f 90       	pop	r1
    1210:	18 95       	reti

00001212 <__vector_2>:
    1212:	1f 92       	push	r1
    1214:	0f 92       	push	r0
    1216:	0f b6       	in	r0, 0x3f	; 63
    1218:	0f 92       	push	r0
    121a:	11 24       	eor	r1, r1
    121c:	2f 93       	push	r18
    121e:	3f 93       	push	r19
    1220:	4f 93       	push	r20
    1222:	5f 93       	push	r21
    1224:	6f 93       	push	r22
    1226:	7f 93       	push	r23
    1228:	8f 93       	push	r24
    122a:	9f 93       	push	r25
    122c:	af 93       	push	r26
    122e:	bf 93       	push	r27
    1230:	ef 93       	push	r30
    1232:	ff 93       	push	r31
    1234:	e0 91 61 01 	lds	r30, 0x0161	; 0x800161 <INT1_Fptr>
    1238:	f0 91 62 01 	lds	r31, 0x0162	; 0x800162 <INT1_Fptr+0x1>
    123c:	30 97       	sbiw	r30, 0x00	; 0
    123e:	09 f0       	breq	.+2      	; 0x1242 <__vector_2+0x30>
    1240:	09 95       	icall
    1242:	ff 91       	pop	r31
    1244:	ef 91       	pop	r30
    1246:	bf 91       	pop	r27
    1248:	af 91       	pop	r26
    124a:	9f 91       	pop	r25
    124c:	8f 91       	pop	r24
    124e:	7f 91       	pop	r23
    1250:	6f 91       	pop	r22
    1252:	5f 91       	pop	r21
    1254:	4f 91       	pop	r20
    1256:	3f 91       	pop	r19
    1258:	2f 91       	pop	r18
    125a:	0f 90       	pop	r0
    125c:	0f be       	out	0x3f, r0	; 63
    125e:	0f 90       	pop	r0
    1260:	1f 90       	pop	r1
    1262:	18 95       	reti

00001264 <__vector_3>:
    1264:	1f 92       	push	r1
    1266:	0f 92       	push	r0
    1268:	0f b6       	in	r0, 0x3f	; 63
    126a:	0f 92       	push	r0
    126c:	11 24       	eor	r1, r1
    126e:	2f 93       	push	r18
    1270:	3f 93       	push	r19
    1272:	4f 93       	push	r20
    1274:	5f 93       	push	r21
    1276:	6f 93       	push	r22
    1278:	7f 93       	push	r23
    127a:	8f 93       	push	r24
    127c:	9f 93       	push	r25
    127e:	af 93       	push	r26
    1280:	bf 93       	push	r27
    1282:	ef 93       	push	r30
    1284:	ff 93       	push	r31
    1286:	e0 91 5f 01 	lds	r30, 0x015F	; 0x80015f <INT2_Fptr>
    128a:	f0 91 60 01 	lds	r31, 0x0160	; 0x800160 <INT2_Fptr+0x1>
    128e:	30 97       	sbiw	r30, 0x00	; 0
    1290:	09 f0       	breq	.+2      	; 0x1294 <__vector_3+0x30>
    1292:	09 95       	icall
    1294:	ff 91       	pop	r31
    1296:	ef 91       	pop	r30
    1298:	bf 91       	pop	r27
    129a:	af 91       	pop	r26
    129c:	9f 91       	pop	r25
    129e:	8f 91       	pop	r24
    12a0:	7f 91       	pop	r23
    12a2:	6f 91       	pop	r22
    12a4:	5f 91       	pop	r21
    12a6:	4f 91       	pop	r20
    12a8:	3f 91       	pop	r19
    12aa:	2f 91       	pop	r18
    12ac:	0f 90       	pop	r0
    12ae:	0f be       	out	0x3f, r0	; 63
    12b0:	0f 90       	pop	r0
    12b2:	1f 90       	pop	r1
    12b4:	18 95       	reti

000012b6 <waveGen>:
    12b6:	0f 93       	push	r16
    12b8:	1f 93       	push	r17
    12ba:	86 e0       	ldi	r24, 0x06	; 6
    12bc:	82 bf       	out	0x32, r24	; 50
    12be:	80 91 65 01 	lds	r24, 0x0165	; 0x800165 <OV.2058>
    12c2:	90 91 66 01 	lds	r25, 0x0166	; 0x800166 <OV.2058+0x1>
    12c6:	a0 91 67 01 	lds	r26, 0x0167	; 0x800167 <OV.2058+0x2>
    12ca:	b0 91 68 01 	lds	r27, 0x0168	; 0x800168 <OV.2058+0x3>
    12ce:	01 96       	adiw	r24, 0x01	; 1
    12d0:	a1 1d       	adc	r26, r1
    12d2:	b1 1d       	adc	r27, r1
    12d4:	80 93 65 01 	sts	0x0165, r24	; 0x800165 <OV.2058>
    12d8:	90 93 66 01 	sts	0x0166, r25	; 0x800166 <OV.2058+0x1>
    12dc:	a0 93 67 01 	sts	0x0167, r26	; 0x800167 <OV.2058+0x2>
    12e0:	b0 93 68 01 	sts	0x0168, r27	; 0x800168 <OV.2058+0x3>
    12e4:	00 91 69 01 	lds	r16, 0x0169	; 0x800169 <u32_OFFTicks>
    12e8:	10 91 6a 01 	lds	r17, 0x016A	; 0x80016a <u32_OFFTicks+0x1>
    12ec:	20 91 6b 01 	lds	r18, 0x016B	; 0x80016b <u32_OFFTicks+0x2>
    12f0:	30 91 6c 01 	lds	r19, 0x016C	; 0x80016c <u32_OFFTicks+0x3>
    12f4:	b9 01       	movw	r22, r18
    12f6:	a8 01       	movw	r20, r16
    12f8:	4f 5f       	subi	r20, 0xFF	; 255
    12fa:	5f 4f       	sbci	r21, 0xFF	; 255
    12fc:	6f 4f       	sbci	r22, 0xFF	; 255
    12fe:	7f 4f       	sbci	r23, 0xFF	; 255
    1300:	84 17       	cp	r24, r20
    1302:	95 07       	cpc	r25, r21
    1304:	a6 07       	cpc	r26, r22
    1306:	b7 07       	cpc	r27, r23
    1308:	29 f4       	brne	.+10     	; 0x1314 <waveGen+0x5e>
    130a:	61 e0       	ldi	r22, 0x01	; 1
    130c:	88 e0       	ldi	r24, 0x08	; 8
    130e:	0e 94 0b 07 	call	0xe16	; 0xe16 <DIO_writepin>
    1312:	21 c0       	rjmp	.+66     	; 0x1356 <waveGen+0xa0>
    1314:	40 91 6d 01 	lds	r20, 0x016D	; 0x80016d <u32_ONTicks>
    1318:	50 91 6e 01 	lds	r21, 0x016E	; 0x80016e <u32_ONTicks+0x1>
    131c:	60 91 6f 01 	lds	r22, 0x016F	; 0x80016f <u32_ONTicks+0x2>
    1320:	70 91 70 01 	lds	r23, 0x0170	; 0x800170 <u32_ONTicks+0x3>
    1324:	40 0f       	add	r20, r16
    1326:	51 1f       	adc	r21, r17
    1328:	62 1f       	adc	r22, r18
    132a:	73 1f       	adc	r23, r19
    132c:	4e 5f       	subi	r20, 0xFE	; 254
    132e:	5f 4f       	sbci	r21, 0xFF	; 255
    1330:	6f 4f       	sbci	r22, 0xFF	; 255
    1332:	7f 4f       	sbci	r23, 0xFF	; 255
    1334:	84 17       	cp	r24, r20
    1336:	95 07       	cpc	r25, r21
    1338:	a6 07       	cpc	r26, r22
    133a:	b7 07       	cpc	r27, r23
    133c:	61 f4       	brne	.+24     	; 0x1356 <waveGen+0xa0>
    133e:	60 e0       	ldi	r22, 0x00	; 0
    1340:	88 e0       	ldi	r24, 0x08	; 8
    1342:	0e 94 0b 07 	call	0xe16	; 0xe16 <DIO_writepin>
    1346:	10 92 65 01 	sts	0x0165, r1	; 0x800165 <OV.2058>
    134a:	10 92 66 01 	sts	0x0166, r1	; 0x800166 <OV.2058+0x1>
    134e:	10 92 67 01 	sts	0x0167, r1	; 0x800167 <OV.2058+0x2>
    1352:	10 92 68 01 	sts	0x0168, r1	; 0x800168 <OV.2058+0x3>
    1356:	1f 91       	pop	r17
    1358:	0f 91       	pop	r16
    135a:	08 95       	ret

0000135c <pwm_init>:
    135c:	60 e0       	ldi	r22, 0x00	; 0
    135e:	88 e0       	ldi	r24, 0x08	; 8
    1360:	0e 94 ea 05 	call	0xbd4	; 0xbd4 <DIO_initpin>
    1364:	80 e0       	ldi	r24, 0x00	; 0
    1366:	0e 94 26 0a 	call	0x144c	; 0x144c <TIMER0_Init>
    136a:	0e 94 78 0a 	call	0x14f0	; 0x14f0 <TIMER0_OV_InterruptEnable>
    136e:	8b e5       	ldi	r24, 0x5B	; 91
    1370:	99 e0       	ldi	r25, 0x09	; 9
    1372:	0e 94 4a 0a 	call	0x1494	; 0x1494 <TIMER0_OV_SetCallBack>
    1376:	08 95       	ret

00001378 <PWM_set_duty>:
    1378:	8f 92       	push	r8
    137a:	9f 92       	push	r9
    137c:	af 92       	push	r10
    137e:	bf 92       	push	r11
    1380:	cf 92       	push	r12
    1382:	df 92       	push	r13
    1384:	ef 92       	push	r14
    1386:	ff 92       	push	r15
    1388:	cf 93       	push	r28
    138a:	c8 2f       	mov	r28, r24
    138c:	cb 01       	movw	r24, r22
    138e:	ba 01       	movw	r22, r20
    1390:	0e 94 d4 0c 	call	0x19a8	; 0x19a8 <__floatunsisf>
    1394:	9b 01       	movw	r18, r22
    1396:	ac 01       	movw	r20, r24
    1398:	60 e0       	ldi	r22, 0x00	; 0
    139a:	70 e0       	ldi	r23, 0x00	; 0
    139c:	80 e8       	ldi	r24, 0x80	; 128
    139e:	9f e3       	ldi	r25, 0x3F	; 63
    13a0:	0e 94 33 0c 	call	0x1866	; 0x1866 <__divsf3>
    13a4:	20 e0       	ldi	r18, 0x00	; 0
    13a6:	34 e2       	ldi	r19, 0x24	; 36
    13a8:	44 e7       	ldi	r20, 0x74	; 116
    13aa:	59 e4       	ldi	r21, 0x49	; 73
    13ac:	0e 94 62 0d 	call	0x1ac4	; 0x1ac4 <__mulsf3>
    13b0:	4b 01       	movw	r8, r22
    13b2:	5c 01       	movw	r10, r24
    13b4:	6c 2f       	mov	r22, r28
    13b6:	70 e0       	ldi	r23, 0x00	; 0
    13b8:	80 e0       	ldi	r24, 0x00	; 0
    13ba:	90 e0       	ldi	r25, 0x00	; 0
    13bc:	0e 94 d6 0c 	call	0x19ac	; 0x19ac <__floatsisf>
    13c0:	a5 01       	movw	r20, r10
    13c2:	94 01       	movw	r18, r8
    13c4:	0e 94 62 0d 	call	0x1ac4	; 0x1ac4 <__mulsf3>
    13c8:	20 e0       	ldi	r18, 0x00	; 0
    13ca:	30 e0       	ldi	r19, 0x00	; 0
    13cc:	48 ec       	ldi	r20, 0xC8	; 200
    13ce:	52 e4       	ldi	r21, 0x42	; 66
    13d0:	0e 94 33 0c 	call	0x1866	; 0x1866 <__divsf3>
    13d4:	6b 01       	movw	r12, r22
    13d6:	7c 01       	movw	r14, r24
    13d8:	9b 01       	movw	r18, r22
    13da:	ac 01       	movw	r20, r24
    13dc:	c5 01       	movw	r24, r10
    13de:	b4 01       	movw	r22, r8
    13e0:	0e 94 c6 0b 	call	0x178c	; 0x178c <__subsf3>
    13e4:	4b 01       	movw	r8, r22
    13e6:	5c 01       	movw	r10, r24
    13e8:	20 e0       	ldi	r18, 0x00	; 0
    13ea:	30 e0       	ldi	r19, 0x00	; 0
    13ec:	4a e7       	ldi	r20, 0x7A	; 122
    13ee:	53 e4       	ldi	r21, 0x43	; 67
    13f0:	c7 01       	movw	r24, r14
    13f2:	b6 01       	movw	r22, r12
    13f4:	0e 94 33 0c 	call	0x1866	; 0x1866 <__divsf3>
    13f8:	0e 94 a5 0c 	call	0x194a	; 0x194a <__fixunssfsi>
    13fc:	60 93 6d 01 	sts	0x016D, r22	; 0x80016d <u32_ONTicks>
    1400:	70 93 6e 01 	sts	0x016E, r23	; 0x80016e <u32_ONTicks+0x1>
    1404:	80 93 6f 01 	sts	0x016F, r24	; 0x80016f <u32_ONTicks+0x2>
    1408:	90 93 70 01 	sts	0x0170, r25	; 0x800170 <u32_ONTicks+0x3>
    140c:	20 e0       	ldi	r18, 0x00	; 0
    140e:	30 e0       	ldi	r19, 0x00	; 0
    1410:	4a e7       	ldi	r20, 0x7A	; 122
    1412:	53 e4       	ldi	r21, 0x43	; 67
    1414:	c5 01       	movw	r24, r10
    1416:	b4 01       	movw	r22, r8
    1418:	0e 94 33 0c 	call	0x1866	; 0x1866 <__divsf3>
    141c:	0e 94 a5 0c 	call	0x194a	; 0x194a <__fixunssfsi>
    1420:	60 93 69 01 	sts	0x0169, r22	; 0x800169 <u32_OFFTicks>
    1424:	70 93 6a 01 	sts	0x016A, r23	; 0x80016a <u32_OFFTicks+0x1>
    1428:	80 93 6b 01 	sts	0x016B, r24	; 0x80016b <u32_OFFTicks+0x2>
    142c:	90 93 6c 01 	sts	0x016C, r25	; 0x80016c <u32_OFFTicks+0x3>
    1430:	61 e0       	ldi	r22, 0x01	; 1
    1432:	88 e0       	ldi	r24, 0x08	; 8
    1434:	0e 94 0b 07 	call	0xe16	; 0xe16 <DIO_writepin>
    1438:	cf 91       	pop	r28
    143a:	ff 90       	pop	r15
    143c:	ef 90       	pop	r14
    143e:	df 90       	pop	r13
    1440:	cf 90       	pop	r12
    1442:	bf 90       	pop	r11
    1444:	af 90       	pop	r10
    1446:	9f 90       	pop	r9
    1448:	8f 90       	pop	r8
    144a:	08 95       	ret

0000144c <TIMER0_Init>:
    144c:	81 30       	cpi	r24, 0x01	; 1
    144e:	69 f0       	breq	.+26     	; 0x146a <TIMER0_Init+0x1e>
    1450:	28 f0       	brcs	.+10     	; 0x145c <TIMER0_Init+0x10>
    1452:	82 30       	cpi	r24, 0x02	; 2
    1454:	89 f0       	breq	.+34     	; 0x1478 <TIMER0_Init+0x2c>
    1456:	83 30       	cpi	r24, 0x03	; 3
    1458:	b1 f0       	breq	.+44     	; 0x1486 <TIMER0_Init+0x3a>
    145a:	08 95       	ret
    145c:	83 b7       	in	r24, 0x33	; 51
    145e:	8f 7b       	andi	r24, 0xBF	; 191
    1460:	83 bf       	out	0x33, r24	; 51
    1462:	83 b7       	in	r24, 0x33	; 51
    1464:	87 7f       	andi	r24, 0xF7	; 247
    1466:	83 bf       	out	0x33, r24	; 51
    1468:	08 95       	ret
    146a:	83 b7       	in	r24, 0x33	; 51
    146c:	80 64       	ori	r24, 0x40	; 64
    146e:	83 bf       	out	0x33, r24	; 51
    1470:	83 b7       	in	r24, 0x33	; 51
    1472:	87 7f       	andi	r24, 0xF7	; 247
    1474:	83 bf       	out	0x33, r24	; 51
    1476:	08 95       	ret
    1478:	83 b7       	in	r24, 0x33	; 51
    147a:	8f 7b       	andi	r24, 0xBF	; 191
    147c:	83 bf       	out	0x33, r24	; 51
    147e:	83 b7       	in	r24, 0x33	; 51
    1480:	88 60       	ori	r24, 0x08	; 8
    1482:	83 bf       	out	0x33, r24	; 51
    1484:	08 95       	ret
    1486:	83 b7       	in	r24, 0x33	; 51
    1488:	80 64       	ori	r24, 0x40	; 64
    148a:	83 bf       	out	0x33, r24	; 51
    148c:	83 b7       	in	r24, 0x33	; 51
    148e:	88 60       	ori	r24, 0x08	; 8
    1490:	83 bf       	out	0x33, r24	; 51
    1492:	08 95       	ret

00001494 <TIMER0_OV_SetCallBack>:
    1494:	90 93 7f 01 	sts	0x017F, r25	; 0x80017f <Timer0_OVF_Fptr+0x1>
    1498:	80 93 7e 01 	sts	0x017E, r24	; 0x80017e <Timer0_OVF_Fptr>
    149c:	08 95       	ret

0000149e <__vector_11>:
    149e:	1f 92       	push	r1
    14a0:	0f 92       	push	r0
    14a2:	0f b6       	in	r0, 0x3f	; 63
    14a4:	0f 92       	push	r0
    14a6:	11 24       	eor	r1, r1
    14a8:	2f 93       	push	r18
    14aa:	3f 93       	push	r19
    14ac:	4f 93       	push	r20
    14ae:	5f 93       	push	r21
    14b0:	6f 93       	push	r22
    14b2:	7f 93       	push	r23
    14b4:	8f 93       	push	r24
    14b6:	9f 93       	push	r25
    14b8:	af 93       	push	r26
    14ba:	bf 93       	push	r27
    14bc:	ef 93       	push	r30
    14be:	ff 93       	push	r31
    14c0:	e0 91 7e 01 	lds	r30, 0x017E	; 0x80017e <Timer0_OVF_Fptr>
    14c4:	f0 91 7f 01 	lds	r31, 0x017F	; 0x80017f <Timer0_OVF_Fptr+0x1>
    14c8:	30 97       	sbiw	r30, 0x00	; 0
    14ca:	09 f0       	breq	.+2      	; 0x14ce <__vector_11+0x30>
    14cc:	09 95       	icall
    14ce:	ff 91       	pop	r31
    14d0:	ef 91       	pop	r30
    14d2:	bf 91       	pop	r27
    14d4:	af 91       	pop	r26
    14d6:	9f 91       	pop	r25
    14d8:	8f 91       	pop	r24
    14da:	7f 91       	pop	r23
    14dc:	6f 91       	pop	r22
    14de:	5f 91       	pop	r21
    14e0:	4f 91       	pop	r20
    14e2:	3f 91       	pop	r19
    14e4:	2f 91       	pop	r18
    14e6:	0f 90       	pop	r0
    14e8:	0f be       	out	0x3f, r0	; 63
    14ea:	0f 90       	pop	r0
    14ec:	1f 90       	pop	r1
    14ee:	18 95       	reti

000014f0 <TIMER0_OV_InterruptEnable>:
    14f0:	89 b7       	in	r24, 0x39	; 57
    14f2:	81 60       	ori	r24, 0x01	; 1
    14f4:	89 bf       	out	0x39, r24	; 57
    14f6:	08 95       	ret

000014f8 <Timer1_Init>:
    14f8:	82 30       	cpi	r24, 0x02	; 2
    14fa:	29 f1       	breq	.+74     	; 0x1546 <Timer1_Init+0x4e>
    14fc:	28 f4       	brcc	.+10     	; 0x1508 <Timer1_Init+0x10>
    14fe:	88 23       	and	r24, r24
    1500:	41 f0       	breq	.+16     	; 0x1512 <Timer1_Init+0x1a>
    1502:	81 30       	cpi	r24, 0x01	; 1
    1504:	99 f0       	breq	.+38     	; 0x152c <Timer1_Init+0x34>
    1506:	45 c0       	rjmp	.+138    	; 0x1592 <Timer1_Init+0x9a>
    1508:	83 30       	cpi	r24, 0x03	; 3
    150a:	51 f1       	breq	.+84     	; 0x1560 <Timer1_Init+0x68>
    150c:	84 30       	cpi	r24, 0x04	; 4
    150e:	a9 f1       	breq	.+106    	; 0x157a <Timer1_Init+0x82>
    1510:	40 c0       	rjmp	.+128    	; 0x1592 <Timer1_Init+0x9a>
    1512:	8f b5       	in	r24, 0x2f	; 47
    1514:	8e 7f       	andi	r24, 0xFE	; 254
    1516:	8f bd       	out	0x2f, r24	; 47
    1518:	8f b5       	in	r24, 0x2f	; 47
    151a:	8d 7f       	andi	r24, 0xFD	; 253
    151c:	8f bd       	out	0x2f, r24	; 47
    151e:	8e b5       	in	r24, 0x2e	; 46
    1520:	87 7f       	andi	r24, 0xF7	; 247
    1522:	8e bd       	out	0x2e, r24	; 46
    1524:	8e b5       	in	r24, 0x2e	; 46
    1526:	8f 7e       	andi	r24, 0xEF	; 239
    1528:	8e bd       	out	0x2e, r24	; 46
    152a:	33 c0       	rjmp	.+102    	; 0x1592 <Timer1_Init+0x9a>
    152c:	8f b5       	in	r24, 0x2f	; 47
    152e:	8e 7f       	andi	r24, 0xFE	; 254
    1530:	8f bd       	out	0x2f, r24	; 47
    1532:	8f b5       	in	r24, 0x2f	; 47
    1534:	8d 7f       	andi	r24, 0xFD	; 253
    1536:	8f bd       	out	0x2f, r24	; 47
    1538:	8e b5       	in	r24, 0x2e	; 46
    153a:	88 60       	ori	r24, 0x08	; 8
    153c:	8e bd       	out	0x2e, r24	; 46
    153e:	8e b5       	in	r24, 0x2e	; 46
    1540:	80 61       	ori	r24, 0x10	; 16
    1542:	8e bd       	out	0x2e, r24	; 46
    1544:	26 c0       	rjmp	.+76     	; 0x1592 <Timer1_Init+0x9a>
    1546:	8f b5       	in	r24, 0x2f	; 47
    1548:	8e 7f       	andi	r24, 0xFE	; 254
    154a:	8f bd       	out	0x2f, r24	; 47
    154c:	8f b5       	in	r24, 0x2f	; 47
    154e:	8d 7f       	andi	r24, 0xFD	; 253
    1550:	8f bd       	out	0x2f, r24	; 47
    1552:	8e b5       	in	r24, 0x2e	; 46
    1554:	88 60       	ori	r24, 0x08	; 8
    1556:	8e bd       	out	0x2e, r24	; 46
    1558:	8e b5       	in	r24, 0x2e	; 46
    155a:	8f 7e       	andi	r24, 0xEF	; 239
    155c:	8e bd       	out	0x2e, r24	; 46
    155e:	19 c0       	rjmp	.+50     	; 0x1592 <Timer1_Init+0x9a>
    1560:	8f b5       	in	r24, 0x2f	; 47
    1562:	8e 7f       	andi	r24, 0xFE	; 254
    1564:	8f bd       	out	0x2f, r24	; 47
    1566:	8f b5       	in	r24, 0x2f	; 47
    1568:	82 60       	ori	r24, 0x02	; 2
    156a:	8f bd       	out	0x2f, r24	; 47
    156c:	8e b5       	in	r24, 0x2e	; 46
    156e:	88 60       	ori	r24, 0x08	; 8
    1570:	8e bd       	out	0x2e, r24	; 46
    1572:	8e b5       	in	r24, 0x2e	; 46
    1574:	80 61       	ori	r24, 0x10	; 16
    1576:	8e bd       	out	0x2e, r24	; 46
    1578:	0c c0       	rjmp	.+24     	; 0x1592 <Timer1_Init+0x9a>
    157a:	8f b5       	in	r24, 0x2f	; 47
    157c:	81 60       	ori	r24, 0x01	; 1
    157e:	8f bd       	out	0x2f, r24	; 47
    1580:	8f b5       	in	r24, 0x2f	; 47
    1582:	82 60       	ori	r24, 0x02	; 2
    1584:	8f bd       	out	0x2f, r24	; 47
    1586:	8e b5       	in	r24, 0x2e	; 46
    1588:	88 60       	ori	r24, 0x08	; 8
    158a:	8e bd       	out	0x2e, r24	; 46
    158c:	8e b5       	in	r24, 0x2e	; 46
    158e:	80 61       	ori	r24, 0x10	; 16
    1590:	8e bd       	out	0x2e, r24	; 46
    1592:	8e b5       	in	r24, 0x2e	; 46
    1594:	88 7f       	andi	r24, 0xF8	; 248
    1596:	8e bd       	out	0x2e, r24	; 46
    1598:	8e b5       	in	r24, 0x2e	; 46
    159a:	68 2b       	or	r22, r24
    159c:	6e bd       	out	0x2e, r22	; 46
    159e:	08 95       	ret

000015a0 <__vector_9>:
    15a0:	1f 92       	push	r1
    15a2:	0f 92       	push	r0
    15a4:	0f b6       	in	r0, 0x3f	; 63
    15a6:	0f 92       	push	r0
    15a8:	11 24       	eor	r1, r1
    15aa:	2f 93       	push	r18
    15ac:	3f 93       	push	r19
    15ae:	4f 93       	push	r20
    15b0:	5f 93       	push	r21
    15b2:	6f 93       	push	r22
    15b4:	7f 93       	push	r23
    15b6:	8f 93       	push	r24
    15b8:	9f 93       	push	r25
    15ba:	af 93       	push	r26
    15bc:	bf 93       	push	r27
    15be:	ef 93       	push	r30
    15c0:	ff 93       	push	r31
    15c2:	e0 91 7c 01 	lds	r30, 0x017C	; 0x80017c <Timer1_OVF_Fptr>
    15c6:	f0 91 7d 01 	lds	r31, 0x017D	; 0x80017d <Timer1_OVF_Fptr+0x1>
    15ca:	30 97       	sbiw	r30, 0x00	; 0
    15cc:	09 f0       	breq	.+2      	; 0x15d0 <__vector_9+0x30>
    15ce:	09 95       	icall
    15d0:	ff 91       	pop	r31
    15d2:	ef 91       	pop	r30
    15d4:	bf 91       	pop	r27
    15d6:	af 91       	pop	r26
    15d8:	9f 91       	pop	r25
    15da:	8f 91       	pop	r24
    15dc:	7f 91       	pop	r23
    15de:	6f 91       	pop	r22
    15e0:	5f 91       	pop	r21
    15e2:	4f 91       	pop	r20
    15e4:	3f 91       	pop	r19
    15e6:	2f 91       	pop	r18
    15e8:	0f 90       	pop	r0
    15ea:	0f be       	out	0x3f, r0	; 63
    15ec:	0f 90       	pop	r0
    15ee:	1f 90       	pop	r1
    15f0:	18 95       	reti

000015f2 <__vector_8>:
    15f2:	1f 92       	push	r1
    15f4:	0f 92       	push	r0
    15f6:	0f b6       	in	r0, 0x3f	; 63
    15f8:	0f 92       	push	r0
    15fa:	11 24       	eor	r1, r1
    15fc:	2f 93       	push	r18
    15fe:	3f 93       	push	r19
    1600:	4f 93       	push	r20
    1602:	5f 93       	push	r21
    1604:	6f 93       	push	r22
    1606:	7f 93       	push	r23
    1608:	8f 93       	push	r24
    160a:	9f 93       	push	r25
    160c:	af 93       	push	r26
    160e:	bf 93       	push	r27
    1610:	ef 93       	push	r30
    1612:	ff 93       	push	r31
    1614:	e0 91 7a 01 	lds	r30, 0x017A	; 0x80017a <Timer1_OCB_Fptr>
    1618:	f0 91 7b 01 	lds	r31, 0x017B	; 0x80017b <Timer1_OCB_Fptr+0x1>
    161c:	30 97       	sbiw	r30, 0x00	; 0
    161e:	09 f0       	breq	.+2      	; 0x1622 <__vector_8+0x30>
    1620:	09 95       	icall
    1622:	ff 91       	pop	r31
    1624:	ef 91       	pop	r30
    1626:	bf 91       	pop	r27
    1628:	af 91       	pop	r26
    162a:	9f 91       	pop	r25
    162c:	8f 91       	pop	r24
    162e:	7f 91       	pop	r23
    1630:	6f 91       	pop	r22
    1632:	5f 91       	pop	r21
    1634:	4f 91       	pop	r20
    1636:	3f 91       	pop	r19
    1638:	2f 91       	pop	r18
    163a:	0f 90       	pop	r0
    163c:	0f be       	out	0x3f, r0	; 63
    163e:	0f 90       	pop	r0
    1640:	1f 90       	pop	r1
    1642:	18 95       	reti

00001644 <__vector_6>:
    1644:	1f 92       	push	r1
    1646:	0f 92       	push	r0
    1648:	0f b6       	in	r0, 0x3f	; 63
    164a:	0f 92       	push	r0
    164c:	11 24       	eor	r1, r1
    164e:	2f 93       	push	r18
    1650:	3f 93       	push	r19
    1652:	4f 93       	push	r20
    1654:	5f 93       	push	r21
    1656:	6f 93       	push	r22
    1658:	7f 93       	push	r23
    165a:	8f 93       	push	r24
    165c:	9f 93       	push	r25
    165e:	af 93       	push	r26
    1660:	bf 93       	push	r27
    1662:	ef 93       	push	r30
    1664:	ff 93       	push	r31
    1666:	e0 91 78 01 	lds	r30, 0x0178	; 0x800178 <Timer1_ICU_Fptr>
    166a:	f0 91 79 01 	lds	r31, 0x0179	; 0x800179 <Timer1_ICU_Fptr+0x1>
    166e:	30 97       	sbiw	r30, 0x00	; 0
    1670:	09 f0       	breq	.+2      	; 0x1674 <__vector_6+0x30>
    1672:	09 95       	icall
    1674:	ff 91       	pop	r31
    1676:	ef 91       	pop	r30
    1678:	bf 91       	pop	r27
    167a:	af 91       	pop	r26
    167c:	9f 91       	pop	r25
    167e:	8f 91       	pop	r24
    1680:	7f 91       	pop	r23
    1682:	6f 91       	pop	r22
    1684:	5f 91       	pop	r21
    1686:	4f 91       	pop	r20
    1688:	3f 91       	pop	r19
    168a:	2f 91       	pop	r18
    168c:	0f 90       	pop	r0
    168e:	0f be       	out	0x3f, r0	; 63
    1690:	0f 90       	pop	r0
    1692:	1f 90       	pop	r1
    1694:	18 95       	reti

00001696 <timer1_ReadCounts>:
    1696:	2c b5       	in	r18, 0x2c	; 44
    1698:	3d b5       	in	r19, 0x2d	; 45
    169a:	fc 01       	movw	r30, r24
    169c:	31 83       	std	Z+1, r19	; 0x01
    169e:	20 83       	st	Z, r18
    16a0:	08 95       	ret

000016a2 <timer1_setTimerValue>:
    16a2:	90 e0       	ldi	r25, 0x00	; 0
    16a4:	9d bd       	out	0x2d, r25	; 45
    16a6:	8c bd       	out	0x2c, r24	; 44
    16a8:	08 95       	ret

000016aa <TIMER2_Init>:
    16aa:	81 30       	cpi	r24, 0x01	; 1
    16ac:	69 f0       	breq	.+26     	; 0x16c8 <TIMER2_Init+0x1e>
    16ae:	28 f0       	brcs	.+10     	; 0x16ba <TIMER2_Init+0x10>
    16b0:	82 30       	cpi	r24, 0x02	; 2
    16b2:	89 f0       	breq	.+34     	; 0x16d6 <TIMER2_Init+0x2c>
    16b4:	83 30       	cpi	r24, 0x03	; 3
    16b6:	b1 f0       	breq	.+44     	; 0x16e4 <TIMER2_Init+0x3a>
    16b8:	08 95       	ret
    16ba:	85 b5       	in	r24, 0x25	; 37
    16bc:	8f 7b       	andi	r24, 0xBF	; 191
    16be:	85 bd       	out	0x25, r24	; 37
    16c0:	85 b5       	in	r24, 0x25	; 37
    16c2:	87 7f       	andi	r24, 0xF7	; 247
    16c4:	85 bd       	out	0x25, r24	; 37
    16c6:	08 95       	ret
    16c8:	85 b5       	in	r24, 0x25	; 37
    16ca:	80 64       	ori	r24, 0x40	; 64
    16cc:	85 bd       	out	0x25, r24	; 37
    16ce:	85 b5       	in	r24, 0x25	; 37
    16d0:	87 7f       	andi	r24, 0xF7	; 247
    16d2:	85 bd       	out	0x25, r24	; 37
    16d4:	08 95       	ret
    16d6:	85 b5       	in	r24, 0x25	; 37
    16d8:	8f 7b       	andi	r24, 0xBF	; 191
    16da:	85 bd       	out	0x25, r24	; 37
    16dc:	85 b5       	in	r24, 0x25	; 37
    16de:	88 60       	ori	r24, 0x08	; 8
    16e0:	85 bd       	out	0x25, r24	; 37
    16e2:	08 95       	ret
    16e4:	85 b5       	in	r24, 0x25	; 37
    16e6:	80 64       	ori	r24, 0x40	; 64
    16e8:	85 bd       	out	0x25, r24	; 37
    16ea:	85 b5       	in	r24, 0x25	; 37
    16ec:	88 60       	ori	r24, 0x08	; 8
    16ee:	85 bd       	out	0x25, r24	; 37
    16f0:	08 95       	ret

000016f2 <TIMER_2_setIntialValue>:
    16f2:	84 bd       	out	0x24, r24	; 36
    16f4:	84 e0       	ldi	r24, 0x04	; 4
    16f6:	08 95       	ret

000016f8 <timer2_start>:
    16f8:	88 30       	cpi	r24, 0x08	; 8
    16fa:	40 f4       	brcc	.+16     	; 0x170c <timer2_start+0x14>
    16fc:	95 b5       	in	r25, 0x25	; 37
    16fe:	98 7f       	andi	r25, 0xF8	; 248
    1700:	95 bd       	out	0x25, r25	; 37
    1702:	95 b5       	in	r25, 0x25	; 37
    1704:	89 2b       	or	r24, r25
    1706:	85 bd       	out	0x25, r24	; 37
    1708:	84 e0       	ldi	r24, 0x04	; 4
    170a:	08 95       	ret
    170c:	80 e0       	ldi	r24, 0x00	; 0
    170e:	08 95       	ret

00001710 <TIMER2_OV_InterruptEnable>:
    1710:	89 b7       	in	r24, 0x39	; 57
    1712:	80 64       	ori	r24, 0x40	; 64
    1714:	89 bf       	out	0x39, r24	; 57
    1716:	08 95       	ret

00001718 <TIMER_2_INT>:
    1718:	0e 94 88 0b 	call	0x1710	; 0x1710 <TIMER2_OV_InterruptEnable>
    171c:	80 e0       	ldi	r24, 0x00	; 0
    171e:	0e 94 55 0b 	call	0x16aa	; 0x16aa <TIMER2_Init>
    1722:	80 e0       	ldi	r24, 0x00	; 0
    1724:	0e 94 79 0b 	call	0x16f2	; 0x16f2 <TIMER_2_setIntialValue>
    1728:	81 e0       	ldi	r24, 0x01	; 1
    172a:	0e 94 7c 0b 	call	0x16f8	; 0x16f8 <timer2_start>
    172e:	08 95       	ret

00001730 <TIMER2_OV_SetCallBack>:
    1730:	90 93 77 01 	sts	0x0177, r25	; 0x800177 <Timer2_OVF_Fptr+0x1>
    1734:	80 93 76 01 	sts	0x0176, r24	; 0x800176 <Timer2_OVF_Fptr>
    1738:	08 95       	ret

0000173a <__vector_5>:
    173a:	1f 92       	push	r1
    173c:	0f 92       	push	r0
    173e:	0f b6       	in	r0, 0x3f	; 63
    1740:	0f 92       	push	r0
    1742:	11 24       	eor	r1, r1
    1744:	2f 93       	push	r18
    1746:	3f 93       	push	r19
    1748:	4f 93       	push	r20
    174a:	5f 93       	push	r21
    174c:	6f 93       	push	r22
    174e:	7f 93       	push	r23
    1750:	8f 93       	push	r24
    1752:	9f 93       	push	r25
    1754:	af 93       	push	r26
    1756:	bf 93       	push	r27
    1758:	ef 93       	push	r30
    175a:	ff 93       	push	r31
    175c:	e0 91 76 01 	lds	r30, 0x0176	; 0x800176 <Timer2_OVF_Fptr>
    1760:	f0 91 77 01 	lds	r31, 0x0177	; 0x800177 <Timer2_OVF_Fptr+0x1>
    1764:	30 97       	sbiw	r30, 0x00	; 0
    1766:	09 f0       	breq	.+2      	; 0x176a <__vector_5+0x30>
    1768:	09 95       	icall
    176a:	ff 91       	pop	r31
    176c:	ef 91       	pop	r30
    176e:	bf 91       	pop	r27
    1770:	af 91       	pop	r26
    1772:	9f 91       	pop	r25
    1774:	8f 91       	pop	r24
    1776:	7f 91       	pop	r23
    1778:	6f 91       	pop	r22
    177a:	5f 91       	pop	r21
    177c:	4f 91       	pop	r20
    177e:	3f 91       	pop	r19
    1780:	2f 91       	pop	r18
    1782:	0f 90       	pop	r0
    1784:	0f be       	out	0x3f, r0	; 63
    1786:	0f 90       	pop	r0
    1788:	1f 90       	pop	r1
    178a:	18 95       	reti

0000178c <__subsf3>:
    178c:	50 58       	subi	r21, 0x80	; 128

0000178e <__addsf3>:
    178e:	bb 27       	eor	r27, r27
    1790:	aa 27       	eor	r26, r26
    1792:	0e 94 de 0b 	call	0x17bc	; 0x17bc <__addsf3x>
    1796:	0c 94 28 0d 	jmp	0x1a50	; 0x1a50 <__fp_round>
    179a:	0e 94 1a 0d 	call	0x1a34	; 0x1a34 <__fp_pscA>
    179e:	38 f0       	brcs	.+14     	; 0x17ae <__addsf3+0x20>
    17a0:	0e 94 21 0d 	call	0x1a42	; 0x1a42 <__fp_pscB>
    17a4:	20 f0       	brcs	.+8      	; 0x17ae <__addsf3+0x20>
    17a6:	39 f4       	brne	.+14     	; 0x17b6 <__addsf3+0x28>
    17a8:	9f 3f       	cpi	r25, 0xFF	; 255
    17aa:	19 f4       	brne	.+6      	; 0x17b2 <__addsf3+0x24>
    17ac:	26 f4       	brtc	.+8      	; 0x17b6 <__addsf3+0x28>
    17ae:	0c 94 17 0d 	jmp	0x1a2e	; 0x1a2e <__fp_nan>
    17b2:	0e f4       	brtc	.+2      	; 0x17b6 <__addsf3+0x28>
    17b4:	e0 95       	com	r30
    17b6:	e7 fb       	bst	r30, 7
    17b8:	0c 94 11 0d 	jmp	0x1a22	; 0x1a22 <__fp_inf>

000017bc <__addsf3x>:
    17bc:	e9 2f       	mov	r30, r25
    17be:	0e 94 39 0d 	call	0x1a72	; 0x1a72 <__fp_split3>
    17c2:	58 f3       	brcs	.-42     	; 0x179a <__addsf3+0xc>
    17c4:	ba 17       	cp	r27, r26
    17c6:	62 07       	cpc	r22, r18
    17c8:	73 07       	cpc	r23, r19
    17ca:	84 07       	cpc	r24, r20
    17cc:	95 07       	cpc	r25, r21
    17ce:	20 f0       	brcs	.+8      	; 0x17d8 <__addsf3x+0x1c>
    17d0:	79 f4       	brne	.+30     	; 0x17f0 <__addsf3x+0x34>
    17d2:	a6 f5       	brtc	.+104    	; 0x183c <__addsf3x+0x80>
    17d4:	0c 94 5b 0d 	jmp	0x1ab6	; 0x1ab6 <__fp_zero>
    17d8:	0e f4       	brtc	.+2      	; 0x17dc <__addsf3x+0x20>
    17da:	e0 95       	com	r30
    17dc:	0b 2e       	mov	r0, r27
    17de:	ba 2f       	mov	r27, r26
    17e0:	a0 2d       	mov	r26, r0
    17e2:	0b 01       	movw	r0, r22
    17e4:	b9 01       	movw	r22, r18
    17e6:	90 01       	movw	r18, r0
    17e8:	0c 01       	movw	r0, r24
    17ea:	ca 01       	movw	r24, r20
    17ec:	a0 01       	movw	r20, r0
    17ee:	11 24       	eor	r1, r1
    17f0:	ff 27       	eor	r31, r31
    17f2:	59 1b       	sub	r21, r25
    17f4:	99 f0       	breq	.+38     	; 0x181c <__addsf3x+0x60>
    17f6:	59 3f       	cpi	r21, 0xF9	; 249
    17f8:	50 f4       	brcc	.+20     	; 0x180e <__addsf3x+0x52>
    17fa:	50 3e       	cpi	r21, 0xE0	; 224
    17fc:	68 f1       	brcs	.+90     	; 0x1858 <__addsf3x+0x9c>
    17fe:	1a 16       	cp	r1, r26
    1800:	f0 40       	sbci	r31, 0x00	; 0
    1802:	a2 2f       	mov	r26, r18
    1804:	23 2f       	mov	r18, r19
    1806:	34 2f       	mov	r19, r20
    1808:	44 27       	eor	r20, r20
    180a:	58 5f       	subi	r21, 0xF8	; 248
    180c:	f3 cf       	rjmp	.-26     	; 0x17f4 <__addsf3x+0x38>
    180e:	46 95       	lsr	r20
    1810:	37 95       	ror	r19
    1812:	27 95       	ror	r18
    1814:	a7 95       	ror	r26
    1816:	f0 40       	sbci	r31, 0x00	; 0
    1818:	53 95       	inc	r21
    181a:	c9 f7       	brne	.-14     	; 0x180e <__addsf3x+0x52>
    181c:	7e f4       	brtc	.+30     	; 0x183c <__addsf3x+0x80>
    181e:	1f 16       	cp	r1, r31
    1820:	ba 0b       	sbc	r27, r26
    1822:	62 0b       	sbc	r22, r18
    1824:	73 0b       	sbc	r23, r19
    1826:	84 0b       	sbc	r24, r20
    1828:	ba f0       	brmi	.+46     	; 0x1858 <__addsf3x+0x9c>
    182a:	91 50       	subi	r25, 0x01	; 1
    182c:	a1 f0       	breq	.+40     	; 0x1856 <__addsf3x+0x9a>
    182e:	ff 0f       	add	r31, r31
    1830:	bb 1f       	adc	r27, r27
    1832:	66 1f       	adc	r22, r22
    1834:	77 1f       	adc	r23, r23
    1836:	88 1f       	adc	r24, r24
    1838:	c2 f7       	brpl	.-16     	; 0x182a <__addsf3x+0x6e>
    183a:	0e c0       	rjmp	.+28     	; 0x1858 <__addsf3x+0x9c>
    183c:	ba 0f       	add	r27, r26
    183e:	62 1f       	adc	r22, r18
    1840:	73 1f       	adc	r23, r19
    1842:	84 1f       	adc	r24, r20
    1844:	48 f4       	brcc	.+18     	; 0x1858 <__addsf3x+0x9c>
    1846:	87 95       	ror	r24
    1848:	77 95       	ror	r23
    184a:	67 95       	ror	r22
    184c:	b7 95       	ror	r27
    184e:	f7 95       	ror	r31
    1850:	9e 3f       	cpi	r25, 0xFE	; 254
    1852:	08 f0       	brcs	.+2      	; 0x1856 <__addsf3x+0x9a>
    1854:	b0 cf       	rjmp	.-160    	; 0x17b6 <__addsf3+0x28>
    1856:	93 95       	inc	r25
    1858:	88 0f       	add	r24, r24
    185a:	08 f0       	brcs	.+2      	; 0x185e <__addsf3x+0xa2>
    185c:	99 27       	eor	r25, r25
    185e:	ee 0f       	add	r30, r30
    1860:	97 95       	ror	r25
    1862:	87 95       	ror	r24
    1864:	08 95       	ret

00001866 <__divsf3>:
    1866:	0e 94 47 0c 	call	0x188e	; 0x188e <__divsf3x>
    186a:	0c 94 28 0d 	jmp	0x1a50	; 0x1a50 <__fp_round>
    186e:	0e 94 21 0d 	call	0x1a42	; 0x1a42 <__fp_pscB>
    1872:	58 f0       	brcs	.+22     	; 0x188a <__divsf3+0x24>
    1874:	0e 94 1a 0d 	call	0x1a34	; 0x1a34 <__fp_pscA>
    1878:	40 f0       	brcs	.+16     	; 0x188a <__divsf3+0x24>
    187a:	29 f4       	brne	.+10     	; 0x1886 <__divsf3+0x20>
    187c:	5f 3f       	cpi	r21, 0xFF	; 255
    187e:	29 f0       	breq	.+10     	; 0x188a <__divsf3+0x24>
    1880:	0c 94 11 0d 	jmp	0x1a22	; 0x1a22 <__fp_inf>
    1884:	51 11       	cpse	r21, r1
    1886:	0c 94 5c 0d 	jmp	0x1ab8	; 0x1ab8 <__fp_szero>
    188a:	0c 94 17 0d 	jmp	0x1a2e	; 0x1a2e <__fp_nan>

0000188e <__divsf3x>:
    188e:	0e 94 39 0d 	call	0x1a72	; 0x1a72 <__fp_split3>
    1892:	68 f3       	brcs	.-38     	; 0x186e <__divsf3+0x8>

00001894 <__divsf3_pse>:
    1894:	99 23       	and	r25, r25
    1896:	b1 f3       	breq	.-20     	; 0x1884 <__divsf3+0x1e>
    1898:	55 23       	and	r21, r21
    189a:	91 f3       	breq	.-28     	; 0x1880 <__divsf3+0x1a>
    189c:	95 1b       	sub	r25, r21
    189e:	55 0b       	sbc	r21, r21
    18a0:	bb 27       	eor	r27, r27
    18a2:	aa 27       	eor	r26, r26
    18a4:	62 17       	cp	r22, r18
    18a6:	73 07       	cpc	r23, r19
    18a8:	84 07       	cpc	r24, r20
    18aa:	38 f0       	brcs	.+14     	; 0x18ba <__divsf3_pse+0x26>
    18ac:	9f 5f       	subi	r25, 0xFF	; 255
    18ae:	5f 4f       	sbci	r21, 0xFF	; 255
    18b0:	22 0f       	add	r18, r18
    18b2:	33 1f       	adc	r19, r19
    18b4:	44 1f       	adc	r20, r20
    18b6:	aa 1f       	adc	r26, r26
    18b8:	a9 f3       	breq	.-22     	; 0x18a4 <__divsf3_pse+0x10>
    18ba:	35 d0       	rcall	.+106    	; 0x1926 <__divsf3_pse+0x92>
    18bc:	0e 2e       	mov	r0, r30
    18be:	3a f0       	brmi	.+14     	; 0x18ce <__divsf3_pse+0x3a>
    18c0:	e0 e8       	ldi	r30, 0x80	; 128
    18c2:	32 d0       	rcall	.+100    	; 0x1928 <__divsf3_pse+0x94>
    18c4:	91 50       	subi	r25, 0x01	; 1
    18c6:	50 40       	sbci	r21, 0x00	; 0
    18c8:	e6 95       	lsr	r30
    18ca:	00 1c       	adc	r0, r0
    18cc:	ca f7       	brpl	.-14     	; 0x18c0 <__divsf3_pse+0x2c>
    18ce:	2b d0       	rcall	.+86     	; 0x1926 <__divsf3_pse+0x92>
    18d0:	fe 2f       	mov	r31, r30
    18d2:	29 d0       	rcall	.+82     	; 0x1926 <__divsf3_pse+0x92>
    18d4:	66 0f       	add	r22, r22
    18d6:	77 1f       	adc	r23, r23
    18d8:	88 1f       	adc	r24, r24
    18da:	bb 1f       	adc	r27, r27
    18dc:	26 17       	cp	r18, r22
    18de:	37 07       	cpc	r19, r23
    18e0:	48 07       	cpc	r20, r24
    18e2:	ab 07       	cpc	r26, r27
    18e4:	b0 e8       	ldi	r27, 0x80	; 128
    18e6:	09 f0       	breq	.+2      	; 0x18ea <__divsf3_pse+0x56>
    18e8:	bb 0b       	sbc	r27, r27
    18ea:	80 2d       	mov	r24, r0
    18ec:	bf 01       	movw	r22, r30
    18ee:	ff 27       	eor	r31, r31
    18f0:	93 58       	subi	r25, 0x83	; 131
    18f2:	5f 4f       	sbci	r21, 0xFF	; 255
    18f4:	3a f0       	brmi	.+14     	; 0x1904 <__divsf3_pse+0x70>
    18f6:	9e 3f       	cpi	r25, 0xFE	; 254
    18f8:	51 05       	cpc	r21, r1
    18fa:	78 f0       	brcs	.+30     	; 0x191a <__divsf3_pse+0x86>
    18fc:	0c 94 11 0d 	jmp	0x1a22	; 0x1a22 <__fp_inf>
    1900:	0c 94 5c 0d 	jmp	0x1ab8	; 0x1ab8 <__fp_szero>
    1904:	5f 3f       	cpi	r21, 0xFF	; 255
    1906:	e4 f3       	brlt	.-8      	; 0x1900 <__divsf3_pse+0x6c>
    1908:	98 3e       	cpi	r25, 0xE8	; 232
    190a:	d4 f3       	brlt	.-12     	; 0x1900 <__divsf3_pse+0x6c>
    190c:	86 95       	lsr	r24
    190e:	77 95       	ror	r23
    1910:	67 95       	ror	r22
    1912:	b7 95       	ror	r27
    1914:	f7 95       	ror	r31
    1916:	9f 5f       	subi	r25, 0xFF	; 255
    1918:	c9 f7       	brne	.-14     	; 0x190c <__divsf3_pse+0x78>
    191a:	88 0f       	add	r24, r24
    191c:	91 1d       	adc	r25, r1
    191e:	96 95       	lsr	r25
    1920:	87 95       	ror	r24
    1922:	97 f9       	bld	r25, 7
    1924:	08 95       	ret
    1926:	e1 e0       	ldi	r30, 0x01	; 1
    1928:	66 0f       	add	r22, r22
    192a:	77 1f       	adc	r23, r23
    192c:	88 1f       	adc	r24, r24
    192e:	bb 1f       	adc	r27, r27
    1930:	62 17       	cp	r22, r18
    1932:	73 07       	cpc	r23, r19
    1934:	84 07       	cpc	r24, r20
    1936:	ba 07       	cpc	r27, r26
    1938:	20 f0       	brcs	.+8      	; 0x1942 <__divsf3_pse+0xae>
    193a:	62 1b       	sub	r22, r18
    193c:	73 0b       	sbc	r23, r19
    193e:	84 0b       	sbc	r24, r20
    1940:	ba 0b       	sbc	r27, r26
    1942:	ee 1f       	adc	r30, r30
    1944:	88 f7       	brcc	.-30     	; 0x1928 <__divsf3_pse+0x94>
    1946:	e0 95       	com	r30
    1948:	08 95       	ret

0000194a <__fixunssfsi>:
    194a:	0e 94 41 0d 	call	0x1a82	; 0x1a82 <__fp_splitA>
    194e:	88 f0       	brcs	.+34     	; 0x1972 <__fixunssfsi+0x28>
    1950:	9f 57       	subi	r25, 0x7F	; 127
    1952:	98 f0       	brcs	.+38     	; 0x197a <__fixunssfsi+0x30>
    1954:	b9 2f       	mov	r27, r25
    1956:	99 27       	eor	r25, r25
    1958:	b7 51       	subi	r27, 0x17	; 23
    195a:	b0 f0       	brcs	.+44     	; 0x1988 <__fixunssfsi+0x3e>
    195c:	e1 f0       	breq	.+56     	; 0x1996 <__fixunssfsi+0x4c>
    195e:	66 0f       	add	r22, r22
    1960:	77 1f       	adc	r23, r23
    1962:	88 1f       	adc	r24, r24
    1964:	99 1f       	adc	r25, r25
    1966:	1a f0       	brmi	.+6      	; 0x196e <__fixunssfsi+0x24>
    1968:	ba 95       	dec	r27
    196a:	c9 f7       	brne	.-14     	; 0x195e <__fixunssfsi+0x14>
    196c:	14 c0       	rjmp	.+40     	; 0x1996 <__fixunssfsi+0x4c>
    196e:	b1 30       	cpi	r27, 0x01	; 1
    1970:	91 f0       	breq	.+36     	; 0x1996 <__fixunssfsi+0x4c>
    1972:	0e 94 5b 0d 	call	0x1ab6	; 0x1ab6 <__fp_zero>
    1976:	b1 e0       	ldi	r27, 0x01	; 1
    1978:	08 95       	ret
    197a:	0c 94 5b 0d 	jmp	0x1ab6	; 0x1ab6 <__fp_zero>
    197e:	67 2f       	mov	r22, r23
    1980:	78 2f       	mov	r23, r24
    1982:	88 27       	eor	r24, r24
    1984:	b8 5f       	subi	r27, 0xF8	; 248
    1986:	39 f0       	breq	.+14     	; 0x1996 <__fixunssfsi+0x4c>
    1988:	b9 3f       	cpi	r27, 0xF9	; 249
    198a:	cc f3       	brlt	.-14     	; 0x197e <__fixunssfsi+0x34>
    198c:	86 95       	lsr	r24
    198e:	77 95       	ror	r23
    1990:	67 95       	ror	r22
    1992:	b3 95       	inc	r27
    1994:	d9 f7       	brne	.-10     	; 0x198c <__fixunssfsi+0x42>
    1996:	3e f4       	brtc	.+14     	; 0x19a6 <__fixunssfsi+0x5c>
    1998:	90 95       	com	r25
    199a:	80 95       	com	r24
    199c:	70 95       	com	r23
    199e:	61 95       	neg	r22
    19a0:	7f 4f       	sbci	r23, 0xFF	; 255
    19a2:	8f 4f       	sbci	r24, 0xFF	; 255
    19a4:	9f 4f       	sbci	r25, 0xFF	; 255
    19a6:	08 95       	ret

000019a8 <__floatunsisf>:
    19a8:	e8 94       	clt
    19aa:	09 c0       	rjmp	.+18     	; 0x19be <__floatsisf+0x12>

000019ac <__floatsisf>:
    19ac:	97 fb       	bst	r25, 7
    19ae:	3e f4       	brtc	.+14     	; 0x19be <__floatsisf+0x12>
    19b0:	90 95       	com	r25
    19b2:	80 95       	com	r24
    19b4:	70 95       	com	r23
    19b6:	61 95       	neg	r22
    19b8:	7f 4f       	sbci	r23, 0xFF	; 255
    19ba:	8f 4f       	sbci	r24, 0xFF	; 255
    19bc:	9f 4f       	sbci	r25, 0xFF	; 255
    19be:	99 23       	and	r25, r25
    19c0:	a9 f0       	breq	.+42     	; 0x19ec <__floatsisf+0x40>
    19c2:	f9 2f       	mov	r31, r25
    19c4:	96 e9       	ldi	r25, 0x96	; 150
    19c6:	bb 27       	eor	r27, r27
    19c8:	93 95       	inc	r25
    19ca:	f6 95       	lsr	r31
    19cc:	87 95       	ror	r24
    19ce:	77 95       	ror	r23
    19d0:	67 95       	ror	r22
    19d2:	b7 95       	ror	r27
    19d4:	f1 11       	cpse	r31, r1
    19d6:	f8 cf       	rjmp	.-16     	; 0x19c8 <__floatsisf+0x1c>
    19d8:	fa f4       	brpl	.+62     	; 0x1a18 <__floatsisf+0x6c>
    19da:	bb 0f       	add	r27, r27
    19dc:	11 f4       	brne	.+4      	; 0x19e2 <__floatsisf+0x36>
    19de:	60 ff       	sbrs	r22, 0
    19e0:	1b c0       	rjmp	.+54     	; 0x1a18 <__floatsisf+0x6c>
    19e2:	6f 5f       	subi	r22, 0xFF	; 255
    19e4:	7f 4f       	sbci	r23, 0xFF	; 255
    19e6:	8f 4f       	sbci	r24, 0xFF	; 255
    19e8:	9f 4f       	sbci	r25, 0xFF	; 255
    19ea:	16 c0       	rjmp	.+44     	; 0x1a18 <__floatsisf+0x6c>
    19ec:	88 23       	and	r24, r24
    19ee:	11 f0       	breq	.+4      	; 0x19f4 <__floatsisf+0x48>
    19f0:	96 e9       	ldi	r25, 0x96	; 150
    19f2:	11 c0       	rjmp	.+34     	; 0x1a16 <__floatsisf+0x6a>
    19f4:	77 23       	and	r23, r23
    19f6:	21 f0       	breq	.+8      	; 0x1a00 <__floatsisf+0x54>
    19f8:	9e e8       	ldi	r25, 0x8E	; 142
    19fa:	87 2f       	mov	r24, r23
    19fc:	76 2f       	mov	r23, r22
    19fe:	05 c0       	rjmp	.+10     	; 0x1a0a <__floatsisf+0x5e>
    1a00:	66 23       	and	r22, r22
    1a02:	71 f0       	breq	.+28     	; 0x1a20 <__floatsisf+0x74>
    1a04:	96 e8       	ldi	r25, 0x86	; 134
    1a06:	86 2f       	mov	r24, r22
    1a08:	70 e0       	ldi	r23, 0x00	; 0
    1a0a:	60 e0       	ldi	r22, 0x00	; 0
    1a0c:	2a f0       	brmi	.+10     	; 0x1a18 <__floatsisf+0x6c>
    1a0e:	9a 95       	dec	r25
    1a10:	66 0f       	add	r22, r22
    1a12:	77 1f       	adc	r23, r23
    1a14:	88 1f       	adc	r24, r24
    1a16:	da f7       	brpl	.-10     	; 0x1a0e <__floatsisf+0x62>
    1a18:	88 0f       	add	r24, r24
    1a1a:	96 95       	lsr	r25
    1a1c:	87 95       	ror	r24
    1a1e:	97 f9       	bld	r25, 7
    1a20:	08 95       	ret

00001a22 <__fp_inf>:
    1a22:	97 f9       	bld	r25, 7
    1a24:	9f 67       	ori	r25, 0x7F	; 127
    1a26:	80 e8       	ldi	r24, 0x80	; 128
    1a28:	70 e0       	ldi	r23, 0x00	; 0
    1a2a:	60 e0       	ldi	r22, 0x00	; 0
    1a2c:	08 95       	ret

00001a2e <__fp_nan>:
    1a2e:	9f ef       	ldi	r25, 0xFF	; 255
    1a30:	80 ec       	ldi	r24, 0xC0	; 192
    1a32:	08 95       	ret

00001a34 <__fp_pscA>:
    1a34:	00 24       	eor	r0, r0
    1a36:	0a 94       	dec	r0
    1a38:	16 16       	cp	r1, r22
    1a3a:	17 06       	cpc	r1, r23
    1a3c:	18 06       	cpc	r1, r24
    1a3e:	09 06       	cpc	r0, r25
    1a40:	08 95       	ret

00001a42 <__fp_pscB>:
    1a42:	00 24       	eor	r0, r0
    1a44:	0a 94       	dec	r0
    1a46:	12 16       	cp	r1, r18
    1a48:	13 06       	cpc	r1, r19
    1a4a:	14 06       	cpc	r1, r20
    1a4c:	05 06       	cpc	r0, r21
    1a4e:	08 95       	ret

00001a50 <__fp_round>:
    1a50:	09 2e       	mov	r0, r25
    1a52:	03 94       	inc	r0
    1a54:	00 0c       	add	r0, r0
    1a56:	11 f4       	brne	.+4      	; 0x1a5c <__fp_round+0xc>
    1a58:	88 23       	and	r24, r24
    1a5a:	52 f0       	brmi	.+20     	; 0x1a70 <__fp_round+0x20>
    1a5c:	bb 0f       	add	r27, r27
    1a5e:	40 f4       	brcc	.+16     	; 0x1a70 <__fp_round+0x20>
    1a60:	bf 2b       	or	r27, r31
    1a62:	11 f4       	brne	.+4      	; 0x1a68 <__fp_round+0x18>
    1a64:	60 ff       	sbrs	r22, 0
    1a66:	04 c0       	rjmp	.+8      	; 0x1a70 <__fp_round+0x20>
    1a68:	6f 5f       	subi	r22, 0xFF	; 255
    1a6a:	7f 4f       	sbci	r23, 0xFF	; 255
    1a6c:	8f 4f       	sbci	r24, 0xFF	; 255
    1a6e:	9f 4f       	sbci	r25, 0xFF	; 255
    1a70:	08 95       	ret

00001a72 <__fp_split3>:
    1a72:	57 fd       	sbrc	r21, 7
    1a74:	90 58       	subi	r25, 0x80	; 128
    1a76:	44 0f       	add	r20, r20
    1a78:	55 1f       	adc	r21, r21
    1a7a:	59 f0       	breq	.+22     	; 0x1a92 <__fp_splitA+0x10>
    1a7c:	5f 3f       	cpi	r21, 0xFF	; 255
    1a7e:	71 f0       	breq	.+28     	; 0x1a9c <__fp_splitA+0x1a>
    1a80:	47 95       	ror	r20

00001a82 <__fp_splitA>:
    1a82:	88 0f       	add	r24, r24
    1a84:	97 fb       	bst	r25, 7
    1a86:	99 1f       	adc	r25, r25
    1a88:	61 f0       	breq	.+24     	; 0x1aa2 <__fp_splitA+0x20>
    1a8a:	9f 3f       	cpi	r25, 0xFF	; 255
    1a8c:	79 f0       	breq	.+30     	; 0x1aac <__fp_splitA+0x2a>
    1a8e:	87 95       	ror	r24
    1a90:	08 95       	ret
    1a92:	12 16       	cp	r1, r18
    1a94:	13 06       	cpc	r1, r19
    1a96:	14 06       	cpc	r1, r20
    1a98:	55 1f       	adc	r21, r21
    1a9a:	f2 cf       	rjmp	.-28     	; 0x1a80 <__fp_split3+0xe>
    1a9c:	46 95       	lsr	r20
    1a9e:	f1 df       	rcall	.-30     	; 0x1a82 <__fp_splitA>
    1aa0:	08 c0       	rjmp	.+16     	; 0x1ab2 <__fp_splitA+0x30>
    1aa2:	16 16       	cp	r1, r22
    1aa4:	17 06       	cpc	r1, r23
    1aa6:	18 06       	cpc	r1, r24
    1aa8:	99 1f       	adc	r25, r25
    1aaa:	f1 cf       	rjmp	.-30     	; 0x1a8e <__fp_splitA+0xc>
    1aac:	86 95       	lsr	r24
    1aae:	71 05       	cpc	r23, r1
    1ab0:	61 05       	cpc	r22, r1
    1ab2:	08 94       	sec
    1ab4:	08 95       	ret

00001ab6 <__fp_zero>:
    1ab6:	e8 94       	clt

00001ab8 <__fp_szero>:
    1ab8:	bb 27       	eor	r27, r27
    1aba:	66 27       	eor	r22, r22
    1abc:	77 27       	eor	r23, r23
    1abe:	cb 01       	movw	r24, r22
    1ac0:	97 f9       	bld	r25, 7
    1ac2:	08 95       	ret

00001ac4 <__mulsf3>:
    1ac4:	0e 94 75 0d 	call	0x1aea	; 0x1aea <__mulsf3x>
    1ac8:	0c 94 28 0d 	jmp	0x1a50	; 0x1a50 <__fp_round>
    1acc:	0e 94 1a 0d 	call	0x1a34	; 0x1a34 <__fp_pscA>
    1ad0:	38 f0       	brcs	.+14     	; 0x1ae0 <__mulsf3+0x1c>
    1ad2:	0e 94 21 0d 	call	0x1a42	; 0x1a42 <__fp_pscB>
    1ad6:	20 f0       	brcs	.+8      	; 0x1ae0 <__mulsf3+0x1c>
    1ad8:	95 23       	and	r25, r21
    1ada:	11 f0       	breq	.+4      	; 0x1ae0 <__mulsf3+0x1c>
    1adc:	0c 94 11 0d 	jmp	0x1a22	; 0x1a22 <__fp_inf>
    1ae0:	0c 94 17 0d 	jmp	0x1a2e	; 0x1a2e <__fp_nan>
    1ae4:	11 24       	eor	r1, r1
    1ae6:	0c 94 5c 0d 	jmp	0x1ab8	; 0x1ab8 <__fp_szero>

00001aea <__mulsf3x>:
    1aea:	0e 94 39 0d 	call	0x1a72	; 0x1a72 <__fp_split3>
    1aee:	70 f3       	brcs	.-36     	; 0x1acc <__mulsf3+0x8>

00001af0 <__mulsf3_pse>:
    1af0:	95 9f       	mul	r25, r21
    1af2:	c1 f3       	breq	.-16     	; 0x1ae4 <__mulsf3+0x20>
    1af4:	95 0f       	add	r25, r21
    1af6:	50 e0       	ldi	r21, 0x00	; 0
    1af8:	55 1f       	adc	r21, r21
    1afa:	62 9f       	mul	r22, r18
    1afc:	f0 01       	movw	r30, r0
    1afe:	72 9f       	mul	r23, r18
    1b00:	bb 27       	eor	r27, r27
    1b02:	f0 0d       	add	r31, r0
    1b04:	b1 1d       	adc	r27, r1
    1b06:	63 9f       	mul	r22, r19
    1b08:	aa 27       	eor	r26, r26
    1b0a:	f0 0d       	add	r31, r0
    1b0c:	b1 1d       	adc	r27, r1
    1b0e:	aa 1f       	adc	r26, r26
    1b10:	64 9f       	mul	r22, r20
    1b12:	66 27       	eor	r22, r22
    1b14:	b0 0d       	add	r27, r0
    1b16:	a1 1d       	adc	r26, r1
    1b18:	66 1f       	adc	r22, r22
    1b1a:	82 9f       	mul	r24, r18
    1b1c:	22 27       	eor	r18, r18
    1b1e:	b0 0d       	add	r27, r0
    1b20:	a1 1d       	adc	r26, r1
    1b22:	62 1f       	adc	r22, r18
    1b24:	73 9f       	mul	r23, r19
    1b26:	b0 0d       	add	r27, r0
    1b28:	a1 1d       	adc	r26, r1
    1b2a:	62 1f       	adc	r22, r18
    1b2c:	83 9f       	mul	r24, r19
    1b2e:	a0 0d       	add	r26, r0
    1b30:	61 1d       	adc	r22, r1
    1b32:	22 1f       	adc	r18, r18
    1b34:	74 9f       	mul	r23, r20
    1b36:	33 27       	eor	r19, r19
    1b38:	a0 0d       	add	r26, r0
    1b3a:	61 1d       	adc	r22, r1
    1b3c:	23 1f       	adc	r18, r19
    1b3e:	84 9f       	mul	r24, r20
    1b40:	60 0d       	add	r22, r0
    1b42:	21 1d       	adc	r18, r1
    1b44:	82 2f       	mov	r24, r18
    1b46:	76 2f       	mov	r23, r22
    1b48:	6a 2f       	mov	r22, r26
    1b4a:	11 24       	eor	r1, r1
    1b4c:	9f 57       	subi	r25, 0x7F	; 127
    1b4e:	50 40       	sbci	r21, 0x00	; 0
    1b50:	9a f0       	brmi	.+38     	; 0x1b78 <__mulsf3_pse+0x88>
    1b52:	f1 f0       	breq	.+60     	; 0x1b90 <__mulsf3_pse+0xa0>
    1b54:	88 23       	and	r24, r24
    1b56:	4a f0       	brmi	.+18     	; 0x1b6a <__mulsf3_pse+0x7a>
    1b58:	ee 0f       	add	r30, r30
    1b5a:	ff 1f       	adc	r31, r31
    1b5c:	bb 1f       	adc	r27, r27
    1b5e:	66 1f       	adc	r22, r22
    1b60:	77 1f       	adc	r23, r23
    1b62:	88 1f       	adc	r24, r24
    1b64:	91 50       	subi	r25, 0x01	; 1
    1b66:	50 40       	sbci	r21, 0x00	; 0
    1b68:	a9 f7       	brne	.-22     	; 0x1b54 <__mulsf3_pse+0x64>
    1b6a:	9e 3f       	cpi	r25, 0xFE	; 254
    1b6c:	51 05       	cpc	r21, r1
    1b6e:	80 f0       	brcs	.+32     	; 0x1b90 <__mulsf3_pse+0xa0>
    1b70:	0c 94 11 0d 	jmp	0x1a22	; 0x1a22 <__fp_inf>
    1b74:	0c 94 5c 0d 	jmp	0x1ab8	; 0x1ab8 <__fp_szero>
    1b78:	5f 3f       	cpi	r21, 0xFF	; 255
    1b7a:	e4 f3       	brlt	.-8      	; 0x1b74 <__mulsf3_pse+0x84>
    1b7c:	98 3e       	cpi	r25, 0xE8	; 232
    1b7e:	d4 f3       	brlt	.-12     	; 0x1b74 <__mulsf3_pse+0x84>
    1b80:	86 95       	lsr	r24
    1b82:	77 95       	ror	r23
    1b84:	67 95       	ror	r22
    1b86:	b7 95       	ror	r27
    1b88:	f7 95       	ror	r31
    1b8a:	e7 95       	ror	r30
    1b8c:	9f 5f       	subi	r25, 0xFF	; 255
    1b8e:	c1 f7       	brne	.-16     	; 0x1b80 <__mulsf3_pse+0x90>
    1b90:	fe 2b       	or	r31, r30
    1b92:	88 0f       	add	r24, r24
    1b94:	91 1d       	adc	r25, r1
    1b96:	96 95       	lsr	r25
    1b98:	87 95       	ror	r24
    1b9a:	97 f9       	bld	r25, 7
    1b9c:	08 95       	ret

00001b9e <__divmodsi4>:
    1b9e:	05 2e       	mov	r0, r21
    1ba0:	97 fb       	bst	r25, 7
    1ba2:	1e f4       	brtc	.+6      	; 0x1baa <__divmodsi4+0xc>
    1ba4:	00 94       	com	r0
    1ba6:	0e 94 e6 0d 	call	0x1bcc	; 0x1bcc <__negsi2>
    1baa:	57 fd       	sbrc	r21, 7
    1bac:	07 d0       	rcall	.+14     	; 0x1bbc <__divmodsi4_neg2>
    1bae:	0e 94 fd 0d 	call	0x1bfa	; 0x1bfa <__udivmodsi4>
    1bb2:	07 fc       	sbrc	r0, 7
    1bb4:	03 d0       	rcall	.+6      	; 0x1bbc <__divmodsi4_neg2>
    1bb6:	4e f4       	brtc	.+18     	; 0x1bca <__divmodsi4_exit>
    1bb8:	0c 94 e6 0d 	jmp	0x1bcc	; 0x1bcc <__negsi2>

00001bbc <__divmodsi4_neg2>:
    1bbc:	50 95       	com	r21
    1bbe:	40 95       	com	r20
    1bc0:	30 95       	com	r19
    1bc2:	21 95       	neg	r18
    1bc4:	3f 4f       	sbci	r19, 0xFF	; 255
    1bc6:	4f 4f       	sbci	r20, 0xFF	; 255
    1bc8:	5f 4f       	sbci	r21, 0xFF	; 255

00001bca <__divmodsi4_exit>:
    1bca:	08 95       	ret

00001bcc <__negsi2>:
    1bcc:	90 95       	com	r25
    1bce:	80 95       	com	r24
    1bd0:	70 95       	com	r23
    1bd2:	61 95       	neg	r22
    1bd4:	7f 4f       	sbci	r23, 0xFF	; 255
    1bd6:	8f 4f       	sbci	r24, 0xFF	; 255
    1bd8:	9f 4f       	sbci	r25, 0xFF	; 255
    1bda:	08 95       	ret

00001bdc <__umulhisi3>:
    1bdc:	a2 9f       	mul	r26, r18
    1bde:	b0 01       	movw	r22, r0
    1be0:	b3 9f       	mul	r27, r19
    1be2:	c0 01       	movw	r24, r0
    1be4:	a3 9f       	mul	r26, r19
    1be6:	70 0d       	add	r23, r0
    1be8:	81 1d       	adc	r24, r1
    1bea:	11 24       	eor	r1, r1
    1bec:	91 1d       	adc	r25, r1
    1bee:	b2 9f       	mul	r27, r18
    1bf0:	70 0d       	add	r23, r0
    1bf2:	81 1d       	adc	r24, r1
    1bf4:	11 24       	eor	r1, r1
    1bf6:	91 1d       	adc	r25, r1
    1bf8:	08 95       	ret

00001bfa <__udivmodsi4>:
    1bfa:	a1 e2       	ldi	r26, 0x21	; 33
    1bfc:	1a 2e       	mov	r1, r26
    1bfe:	aa 1b       	sub	r26, r26
    1c00:	bb 1b       	sub	r27, r27
    1c02:	fd 01       	movw	r30, r26
    1c04:	0d c0       	rjmp	.+26     	; 0x1c20 <__udivmodsi4_ep>

00001c06 <__udivmodsi4_loop>:
    1c06:	aa 1f       	adc	r26, r26
    1c08:	bb 1f       	adc	r27, r27
    1c0a:	ee 1f       	adc	r30, r30
    1c0c:	ff 1f       	adc	r31, r31
    1c0e:	a2 17       	cp	r26, r18
    1c10:	b3 07       	cpc	r27, r19
    1c12:	e4 07       	cpc	r30, r20
    1c14:	f5 07       	cpc	r31, r21
    1c16:	20 f0       	brcs	.+8      	; 0x1c20 <__udivmodsi4_ep>
    1c18:	a2 1b       	sub	r26, r18
    1c1a:	b3 0b       	sbc	r27, r19
    1c1c:	e4 0b       	sbc	r30, r20
    1c1e:	f5 0b       	sbc	r31, r21

00001c20 <__udivmodsi4_ep>:
    1c20:	66 1f       	adc	r22, r22
    1c22:	77 1f       	adc	r23, r23
    1c24:	88 1f       	adc	r24, r24
    1c26:	99 1f       	adc	r25, r25
    1c28:	1a 94       	dec	r1
    1c2a:	69 f7       	brne	.-38     	; 0x1c06 <__udivmodsi4_loop>
    1c2c:	60 95       	com	r22
    1c2e:	70 95       	com	r23
    1c30:	80 95       	com	r24
    1c32:	90 95       	com	r25
    1c34:	9b 01       	movw	r18, r22
    1c36:	ac 01       	movw	r20, r24
    1c38:	bd 01       	movw	r22, r26
    1c3a:	cf 01       	movw	r24, r30
    1c3c:	08 95       	ret

00001c3e <_exit>:
    1c3e:	f8 94       	cli

00001c40 <__stop_program>:
    1c40:	ff cf       	rjmp	.-2      	; 0x1c40 <__stop_program>
